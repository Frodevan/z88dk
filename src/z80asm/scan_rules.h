static const short _lexer_actions[] = {
	0, 1, 0, 1, 1, 1, 2, 1, 
	226, 1, 227, 1, 228, 1, 229, 1, 
	230, 1, 231, 1, 232, 1, 233, 1, 
	234, 1, 235, 1, 236, 1, 237, 1, 
	238, 1, 239, 1, 240, 1, 241, 1, 
	242, 1, 243, 1, 244, 1, 245, 1, 
	246, 1, 247, 1, 248, 1, 249, 1, 
	250, 1, 251, 1, 252, 1, 253, 1, 
	254, 1, 255, 1, 256, 1, 257, 1, 
	258, 1, 259, 1, 260, 1, 261, 1, 
	262, 1, 263, 1, 264, 1, 265, 1, 
	266, 1, 267, 1, 268, 1, 269, 1, 
	270, 1, 271, 1, 272, 1, 273, 1, 
	274, 1, 275, 1, 276, 1, 277, 1, 
	278, 1, 279, 1, 280, 1, 281, 1, 
	282, 1, 283, 1, 284, 1, 285, 1, 
	286, 1, 287, 1, 288, 1, 289, 1, 
	290, 1, 291, 1, 292, 1, 293, 1, 
	294, 1, 295, 1, 296, 1, 297, 1, 
	298, 1, 299, 1, 300, 1, 301, 1, 
	302, 1, 303, 1, 304, 1, 305, 1, 
	306, 1, 307, 1, 308, 1, 309, 1, 
	310, 1, 311, 1, 312, 1, 313, 1, 
	314, 1, 315, 1, 316, 1, 317, 1, 
	318, 1, 319, 1, 320, 1, 321, 1, 
	322, 1, 323, 1, 324, 1, 325, 1, 
	326, 1, 327, 1, 328, 1, 329, 1, 
	330, 1, 331, 1, 332, 1, 333, 1, 
	334, 1, 335, 1, 336, 1, 337, 1, 
	338, 1, 339, 1, 340, 1, 341, 1, 
	342, 1, 343, 1, 344, 1, 345, 1, 
	346, 1, 347, 1, 348, 1, 349, 1, 
	350, 1, 351, 1, 352, 1, 353, 1, 
	354, 1, 355, 1, 356, 1, 357, 1, 
	358, 1, 359, 1, 360, 1, 361, 1, 
	362, 1, 363, 1, 364, 1, 365, 1, 
	366, 1, 367, 1, 368, 1, 369, 1, 
	370, 1, 371, 1, 372, 1, 373, 1, 
	374, 1, 375, 1, 376, 1, 377, 1, 
	378, 1, 379, 1, 380, 2, 2, 3, 
	2, 2, 4, 2, 2, 5, 2, 2, 
	6, 2, 2, 7, 2, 2, 8, 2, 
	2, 9, 2, 2, 10, 2, 2, 11, 
	2, 2, 12, 2, 2, 13, 2, 2, 
	14, 2, 2, 15, 2, 2, 16, 2, 
	2, 17, 2, 2, 18, 2, 2, 19, 
	2, 2, 20, 2, 2, 21, 2, 2, 
	22, 2, 2, 23, 2, 2, 24, 2, 
	2, 25, 2, 2, 26, 2, 2, 27, 
	2, 2, 28, 2, 2, 29, 2, 2, 
	30, 2, 2, 31, 2, 2, 32, 2, 
	2, 33, 2, 2, 34, 2, 2, 35, 
	2, 2, 36, 2, 2, 37, 2, 2, 
	38, 2, 2, 39, 2, 2, 40, 2, 
	2, 41, 2, 2, 42, 2, 2, 43, 
	2, 2, 44, 2, 2, 45, 2, 2, 
	46, 2, 2, 47, 2, 2, 48, 2, 
	2, 49, 2, 2, 50, 2, 2, 51, 
	2, 2, 52, 2, 2, 53, 2, 2, 
	54, 2, 2, 55, 2, 2, 56, 2, 
	2, 57, 2, 2, 58, 2, 2, 59, 
	2, 2, 60, 2, 2, 61, 2, 2, 
	62, 2, 2, 63, 2, 2, 64, 2, 
	2, 65, 2, 2, 66, 2, 2, 67, 
	2, 2, 68, 2, 2, 69, 2, 2, 
	70, 2, 2, 71, 2, 2, 72, 2, 
	2, 73, 2, 2, 74, 2, 2, 75, 
	2, 2, 76, 2, 2, 77, 2, 2, 
	78, 2, 2, 79, 2, 2, 80, 2, 
	2, 81, 2, 2, 82, 2, 2, 83, 
	2, 2, 84, 2, 2, 85, 2, 2, 
	86, 2, 2, 87, 2, 2, 88, 2, 
	2, 89, 2, 2, 90, 2, 2, 91, 
	2, 2, 92, 2, 2, 93, 2, 2, 
	94, 2, 2, 95, 2, 2, 96, 2, 
	2, 97, 2, 2, 98, 2, 2, 99, 
	2, 2, 100, 2, 2, 101, 2, 2, 
	102, 2, 2, 103, 2, 2, 104, 2, 
	2, 105, 2, 2, 106, 2, 2, 107, 
	2, 2, 108, 2, 2, 109, 2, 2, 
	110, 2, 2, 111, 2, 2, 112, 2, 
	2, 113, 2, 2, 114, 2, 2, 115, 
	2, 2, 116, 2, 2, 117, 2, 2, 
	118, 2, 2, 119, 2, 2, 120, 2, 
	2, 121, 2, 2, 122, 2, 2, 123, 
	2, 2, 124, 2, 2, 125, 2, 2, 
	126, 2, 2, 127, 2, 2, 128, 2, 
	2, 129, 2, 2, 130, 2, 2, 131, 
	2, 2, 132, 2, 2, 133, 2, 2, 
	134, 2, 2, 135, 2, 2, 136, 2, 
	2, 137, 2, 2, 138, 2, 2, 139, 
	2, 2, 140, 2, 2, 141, 2, 2, 
	142, 2, 2, 143, 2, 2, 144, 2, 
	2, 145, 2, 2, 146, 2, 2, 147, 
	2, 2, 148, 2, 2, 149, 2, 2, 
	150, 2, 2, 151, 2, 2, 152, 2, 
	2, 153, 2, 2, 154, 2, 2, 155, 
	2, 2, 156, 2, 2, 157, 2, 2, 
	158, 2, 2, 159, 2, 2, 160, 2, 
	2, 161, 2, 2, 162, 2, 2, 163, 
	2, 2, 164, 2, 2, 165, 2, 2, 
	166, 2, 2, 167, 2, 2, 168, 2, 
	2, 169, 2, 2, 170, 2, 2, 171, 
	2, 2, 172, 2, 2, 173, 2, 2, 
	174, 2, 2, 175, 2, 2, 176, 2, 
	2, 177, 2, 2, 178, 2, 2, 179, 
	2, 2, 180, 2, 2, 181, 2, 2, 
	182, 2, 2, 183, 2, 2, 184, 2, 
	2, 185, 2, 2, 186, 2, 2, 187, 
	2, 2, 188, 2, 2, 189, 2, 2, 
	190, 2, 2, 191, 2, 2, 192, 2, 
	2, 193, 2, 2, 194, 2, 2, 195, 
	2, 2, 196, 2, 2, 197, 2, 2, 
	198, 2, 2, 199, 2, 2, 200, 2, 
	2, 201, 2, 2, 202, 2, 2, 203, 
	2, 2, 204, 2, 2, 205, 2, 2, 
	206, 2, 2, 207, 2, 2, 208, 2, 
	2, 209, 2, 2, 210, 2, 2, 211, 
	2, 2, 212, 2, 2, 213, 2, 2, 
	214, 2, 2, 215, 2, 2, 216, 2, 
	2, 217, 2, 2, 218, 2, 2, 219, 
	2, 2, 220, 2, 2, 221, 2, 2, 
	222, 2, 2, 223, 2, 2, 224, 2, 
	2, 225
};
static const short _lexer_cond_offsets[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 5, 8, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	17, 21, 28, 35, 42, 49, 56, 63, 
	70, 77, 84, 91, 98, 105, 112, 119, 
	126, 133, 140, 147, 154, 161, 168, 175, 
	182, 189, 196, 203, 210, 217, 224, 231, 
	238, 245, 252, 259, 266, 273, 280, 287, 
	294, 301, 308, 315, 322, 329, 336, 343, 
	350, 357, 364, 371, 378, 385, 392, 399, 
	406, 413, 420, 427, 434, 441, 448, 455, 
	462, 469, 476, 483, 490, 497, 504, 511, 
	518, 525, 532, 539, 546, 553, 560, 567, 
	574, 581, 588, 595, 602, 609, 616, 623, 
	630, 637, 644, 651, 658, 665, 672, 679, 
	686, 693, 700, 707, 714, 721, 728, 735, 
	742, 749, 756, 763, 770, 777, 784, 791, 
	798, 805, 812, 819, 826, 833, 840, 847, 
	854, 861, 868, 875, 882, 889, 896, 903, 
	910, 917, 924, 931, 938, 945, 952, 959, 
	966, 973, 980, 987, 994, 1001, 1008, 1015, 
	1022, 1029, 1036, 1043, 1050, 1057, 1064, 1071, 
	1078, 1085, 1092, 1099, 1106, 1113, 1120, 1127, 
	1134, 1141, 1148, 1155, 1162, 1169, 1176, 1183, 
	1190, 1197, 1204, 1211, 1218, 1225, 1232, 1239, 
	1246, 1253, 1260, 1267, 1274, 1281, 1288, 1295, 
	1302, 1309, 1316, 1323, 1330, 1337, 1344, 1351, 
	1358, 1365, 1372, 1379, 1386, 1393, 1400, 1407, 
	1414, 1421, 1428, 1435, 1442, 1449, 1456, 1463, 
	1470, 1477, 1484, 1491, 1498, 1505, 1512, 1519, 
	1526, 1533, 1540, 1547, 1554, 1561, 1568, 1575, 
	1582, 1589, 1596, 1603, 1610, 1617, 1624, 1631, 
	1638, 1645, 1652, 1659, 1666, 1673, 1680, 1687, 
	1694, 1701, 1708, 1715, 1722, 1729, 1736, 1743, 
	1750, 1757, 1764, 1771, 1778, 1785, 1792, 1799, 
	1806, 1813, 1820, 1827, 1834, 1841, 1848, 1855, 
	1862, 1869, 1876, 1883, 1890, 1897, 1904
};
static const char _lexer_cond_lengths[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 5, 3, 4, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 5, 
	4, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7
};
static const short _lexer_cond_keys[] = {
	9, 9, 32, 32, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 58, 58, 
	46, 46, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 65, 90, 95, 95, 
	97, 122, 48, 57, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 0
};
static const char _lexer_cond_spaces[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0
};
static const short _lexer_key_offsets[] = {
	0, 0, 2, 5, 19, 21, 26, 31, 
	33, 38, 40, 45, 49, 54, 59, 61, 
	66, 74, 80, 88, 90, 92, 94, 96, 
	98, 100, 102, 104, 106, 108, 110, 114, 
	116, 118, 120, 127, 135, 142, 145, 283, 
	284, 290, 293, 295, 296, 310, 311, 325, 
	337, 345, 353, 363, 369, 370, 373, 374, 
	376, 377, 396, 403, 411, 422, 430, 441, 
	450, 459, 468, 477, 486, 495, 504, 522, 
	530, 541, 550, 559, 568, 577, 586, 595, 
	604, 615, 624, 637, 653, 662, 671, 678, 
	689, 698, 707, 716, 725, 733, 746, 755, 
	764, 772, 781, 790, 799, 808, 828, 837, 
	853, 880, 889, 898, 907, 916, 925, 934, 
	943, 952, 961, 970, 979, 988, 997, 1006, 
	1015, 1024, 1033, 1042, 1050, 1058, 1074, 1083, 
	1094, 1103, 1114, 1123, 1132, 1141, 1150, 1159, 
	1168, 1177, 1186, 1195, 1206, 1215, 1224, 1233, 
	1245, 1254, 1263, 1272, 1281, 1290, 1299, 1308, 
	1317, 1326, 1335, 1347, 1356, 1365, 1373, 1398, 
	1407, 1416, 1427, 1436, 1445, 1454, 1463, 1472, 
	1481, 1497, 1506, 1515, 1524, 1533, 1542, 1551, 
	1560, 1569, 1578, 1589, 1600, 1609, 1618, 1627, 
	1636, 1647, 1658, 1669, 1687, 1702, 1715, 1724, 
	1733, 1746, 1757, 1766, 1775, 1784, 1793, 1802, 
	1811, 1820, 1829, 1838, 1849, 1858, 1871, 1882, 
	1891, 1902, 1911, 1920, 1931, 1940, 1957, 1966, 
	1975, 1984, 1993, 2002, 2011, 2026, 2035, 2044, 
	2053, 2062, 2071, 2088, 2099, 2108, 2117, 2126, 
	2135, 2144, 2157, 2166, 2177, 2188, 2197, 2208, 
	2217, 2226, 2238, 2247, 2256, 2273, 2282, 2291, 
	2300, 2309, 2318, 2327, 2338, 2347, 2356, 2365, 
	2376, 2385, 2394, 2403, 2412, 2429, 2438, 2447, 
	2456, 2465, 2476, 2487, 2500, 2508, 2517, 2525, 
	2538, 2546, 2555, 2563, 2572, 2597, 2606, 2615, 
	2623, 2634, 2643, 2652, 2661, 2670, 2681, 2690, 
	2699, 2708, 2723, 2734, 2745, 2754, 2763, 2772, 
	2781, 2790, 2799, 2808, 2817, 2826, 2835, 2844, 
	2853, 2864, 2873, 2882, 2891, 2900, 2909, 2920, 
	2931, 2940, 2949, 2958, 2967, 2976, 2985, 3002, 
	3011, 3020, 3029, 3038, 3047, 3056, 3065, 3074, 
	3081, 3088, 3128, 3145, 3164, 3189, 3207, 3232, 
	3253, 3274, 3295, 3316, 3337, 3358, 3379, 3417, 
	3435, 3460, 3481, 3502, 3523, 3544, 3565, 3586, 
	3607, 3632, 3653, 3682, 3716, 3737, 3758, 3775, 
	3800, 3821, 3842, 3863, 3884, 3902, 3931, 3952, 
	3973, 3991, 4012, 4033, 4054, 4075, 4117, 4138, 
	4172, 4229, 4250, 4271, 4292, 4313, 4334, 4355, 
	4376, 4397, 4418, 4439, 4460, 4481, 4502, 4523, 
	4544, 4565, 4586, 4607, 4625, 4643, 4677, 4698, 
	4723, 4744, 4769, 4790, 4811, 4832, 4853, 4874, 
	4895, 4916, 4937, 4958, 4983, 5004, 5025, 5046, 
	5072, 5093, 5114, 5135, 5156, 5177, 5198, 5219, 
	5240, 5261, 5282, 5308, 5329, 5350, 5368, 5421, 
	5442, 5463, 5488, 5509, 5530, 5551, 5572, 5593, 
	5614, 5649, 5670, 5691, 5712, 5733, 5754, 5775, 
	5796, 5817, 5838, 5863, 5888, 5909, 5930, 5951, 
	5972, 5997, 6022, 6047, 6085, 6118, 6147, 6168, 
	6189, 6218, 6243, 6264, 6285, 6306, 6327, 6348, 
	6369, 6390, 6411, 6432, 6457, 6478, 6507, 6532, 
	6553, 6578, 6599, 6620, 6645, 6666, 6703, 6724, 
	6745, 6766, 6787, 6808, 6829, 6862, 6883, 6904, 
	6925, 6946, 6967, 7004, 7029, 7050, 7071, 7092, 
	7113, 7134, 7163, 7184, 7209, 7234, 7255, 7280, 
	7301, 7322, 7349, 7370, 7391, 7428, 7449, 7470, 
	7491, 7512, 7533, 7554, 7579, 7600, 7621, 7642, 
	7667, 7688, 7709, 7730, 7751, 7788, 7809, 7830, 
	7851, 7872, 7897, 7922, 7951, 7969, 7990, 8008, 
	8037, 8055, 8076, 8094, 8115, 8168, 8189, 8210, 
	8228, 8253, 8274, 8295, 8316, 8337, 8362, 8383, 
	8404, 8425, 8458, 8483, 8508, 8529, 8550, 8571, 
	8592, 8613, 8634, 8655, 8676, 8697, 8718, 8739, 
	8760, 8785, 8806, 8827, 8848, 8869, 8890, 8915, 
	8940, 8961, 8982, 9003, 9024, 9045, 9066, 9103, 
	9124, 9145, 9166, 9187, 9208, 9229, 9250
};
static const short _lexer_trans_keys[] = {
	35, 45, 34, 35, 45, 9, 32, 66, 
	67, 68, 72, 73, 83, 98, 99, 100, 
	104, 105, 115, 67, 99, 9, 32, 41, 
	43, 45, 9, 32, 41, 43, 45, 69, 
	101, 9, 32, 41, 43, 45, 76, 108, 
	9, 32, 41, 43, 45, 88, 89, 120, 
	121, 9, 32, 41, 43, 45, 9, 32, 
	41, 43, 45, 80, 112, 9, 32, 41, 
	43, 45, 72, 104, 48, 57, 65, 70, 
	97, 102, 48, 57, 65, 70, 97, 102, 
	77, 78, 83, 87, 109, 110, 115, 119, 
	79, 111, 86, 118, 69, 101, 79, 111, 
	80, 112, 84, 116, 79, 111, 80, 112, 
	65, 97, 73, 105, 84, 116, 67, 87, 
	99, 119, 77, 109, 68, 100, 82, 114, 
	48, 49, 50, 51, 52, 53, 54, 66, 
	80, 81, 87, 98, 112, 113, 119, 521, 
	544, 607, 577, 602, 609, 634, 521, 544, 
	570, 10, 33, 34, 35, 36, 37, 38, 
	39, 40, 41, 42, 43, 44, 45, 47, 
	48, 49, 58, 59, 60, 61, 62, 63, 
	64, 91, 92, 93, 94, 96, 123, 124, 
	125, 126, 127, 302, 321, 322, 323, 324, 
	325, 326, 327, 328, 329, 330, 332, 333, 
	334, 335, 336, 338, 339, 340, 341, 342, 
	344, 346, 351, 353, 354, 355, 356, 357, 
	358, 359, 360, 361, 362, 364, 365, 366, 
	367, 368, 370, 371, 372, 373, 374, 376, 
	378, 558, 577, 578, 579, 580, 581, 582, 
	583, 584, 585, 586, 588, 589, 590, 591, 
	592, 594, 595, 596, 597, 598, 600, 602, 
	607, 609, 610, 611, 612, 613, 614, 615, 
	616, 617, 618, 620, 621, 622, 623, 624, 
	626, 627, 628, 629, 630, 632, 634, -128, 
	32, 50, 57, 331, 345, 363, 377, 587, 
	601, 619, 633, 61, 48, 57, 65, 70, 
	97, 102, 34, 48, 49, 48, 49, 38, 
	9, 32, 66, 67, 68, 72, 73, 83, 
	98, 99, 100, 104, 105, 115, 42, 66, 
	72, 88, 98, 104, 120, 48, 49, 50, 
	57, 65, 70, 97, 102, 66, 72, 98, 
	104, 48, 49, 50, 57, 65, 70, 97, 
	102, 72, 104, 48, 57, 65, 70, 97, 
	102, 72, 104, 48, 57, 65, 70, 97, 
	102, 72, 104, 48, 49, 50, 57, 65, 
	70, 97, 102, 48, 57, 65, 70, 97, 
	102, 10, 60, 61, 62, 61, 61, 62, 
	124, 39, 51, 68, 70, 76, 78, 83, 
	95, 100, 102, 108, 110, 115, 48, 57, 
	65, 90, 97, 122, 95, 48, 57, 65, 
	90, 97, 122, 50, 95, 48, 57, 65, 
	90, 97, 122, 67, 68, 95, 99, 100, 
	48, 57, 65, 90, 97, 122, 39, 95, 
	48, 57, 65, 90, 97, 122, 73, 84, 
	95, 105, 116, 48, 57, 65, 90, 97, 
	122, 71, 95, 103, 48, 57, 65, 90, 
	97, 122, 78, 95, 110, 48, 57, 65, 
	90, 97, 122, 68, 95, 100, 48, 57, 
	65, 90, 97, 122, 68, 95, 100, 48, 
	57, 65, 90, 97, 122, 77, 95, 109, 
	48, 57, 65, 90, 97, 122, 80, 95, 
	112, 48, 57, 65, 90, 97, 122, 67, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	39, 67, 73, 79, 82, 83, 95, 99, 
	105, 111, 114, 115, 48, 57, 65, 90, 
	97, 122, 39, 95, 48, 57, 65, 90, 
	97, 122, 78, 84, 95, 110, 116, 48, 
	57, 65, 90, 97, 122, 65, 95, 97, 
	48, 57, 66, 90, 98, 122, 82, 95, 
	114, 48, 57, 65, 90, 97, 122, 89, 
	95, 121, 48, 57, 65, 90, 97, 122, 
	79, 95, 111, 48, 57, 65, 90, 97, 
	122, 76, 95, 108, 48, 57, 65, 90, 
	97, 122, 76, 95, 108, 48, 57, 65, 
	90, 97, 122, 67, 95, 99, 48, 57, 
	65, 90, 97, 122, 76, 82, 95, 108, 
	114, 48, 57, 65, 90, 97, 122, 65, 
	95, 97, 48, 57, 66, 90, 98, 122, 
	65, 70, 76, 95, 97, 102, 108, 48, 
	57, 66, 90, 98, 122, 39, 65, 67, 
	80, 85, 95, 97, 99, 112, 117, 48, 
	57, 66, 90, 98, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 76, 95, 
	108, 48, 57, 65, 90, 97, 122, 95, 
	48, 57, 65, 90, 97, 122, 79, 80, 
	95, 111, 112, 48, 57, 65, 90, 97, 
	122, 90, 95, 122, 48, 57, 65, 89, 
	97, 121, 75, 95, 107, 48, 57, 65, 
	90, 97, 122, 71, 95, 103, 48, 57, 
	65, 90, 97, 122, 70, 95, 102, 48, 
	57, 65, 90, 97, 122, 39, 95, 48, 
	57, 65, 90, 97, 122, 68, 73, 76, 
	95, 100, 105, 108, 48, 57, 65, 90, 
	97, 122, 82, 95, 114, 48, 57, 65, 
	90, 97, 122, 82, 95, 114, 48, 57, 
	65, 90, 97, 122, 46, 95, 48, 57, 
	65, 90, 97, 122, 76, 95, 108, 48, 
	57, 65, 90, 97, 122, 73, 95, 105, 
	48, 57, 65, 90, 97, 122, 78, 95, 
	110, 48, 57, 65, 90, 97, 122, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	39, 65, 69, 73, 74, 77, 83, 95, 
	97, 101, 105, 106, 109, 115, 48, 57, 
	66, 90, 98, 122, 65, 95, 97, 48, 
	57, 66, 90, 98, 122, 39, 67, 70, 
	72, 80, 95, 99, 102, 104, 112, 48, 
	57, 65, 90, 97, 122, 66, 67, 68, 
	71, 73, 77, 81, 83, 86, 87, 95, 
	98, 99, 100, 103, 105, 109, 113, 115, 
	118, 119, 48, 57, 65, 90, 97, 122, 
	66, 95, 98, 48, 57, 65, 90, 97, 
	122, 82, 95, 114, 48, 57, 65, 90, 
	97, 122, 79, 95, 111, 48, 57, 65, 
	90, 97, 122, 85, 95, 117, 48, 57, 
	65, 90, 97, 122, 80, 95, 112, 48, 
	57, 65, 90, 97, 122, 78, 95, 110, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 48, 57, 65, 90, 97, 122, 65, 
	95, 97, 48, 57, 66, 90, 98, 122, 
	82, 95, 114, 48, 57, 65, 90, 97, 
	122, 83, 95, 115, 48, 57, 65, 90, 
	97, 122, 76, 95, 108, 48, 57, 65, 
	90, 97, 122, 72, 95, 104, 48, 57, 
	65, 90, 97, 122, 65, 95, 97, 48, 
	57, 66, 90, 98, 122, 83, 95, 115, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 48, 57, 65, 90, 97, 122, 78, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	90, 95, 122, 48, 57, 65, 89, 97, 
	121, 65, 95, 97, 48, 57, 66, 90, 
	98, 122, 46, 95, 48, 57, 65, 90, 
	97, 122, 46, 95, 48, 57, 65, 90, 
	97, 122, 39, 73, 76, 78, 88, 95, 
	105, 108, 110, 120, 48, 57, 65, 90, 
	97, 122, 82, 95, 114, 48, 57, 65, 
	90, 97, 122, 73, 83, 95, 105, 115, 
	48, 57, 65, 90, 97, 122, 70, 95, 
	102, 48, 57, 65, 90, 97, 122, 68, 
	78, 95, 100, 110, 48, 57, 65, 90, 
	97, 122, 69, 95, 101, 48, 57, 65, 
	90, 97, 122, 70, 95, 102, 48, 57, 
	65, 90, 97, 122, 68, 95, 100, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 70, 95, 
	102, 48, 57, 65, 90, 97, 122, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	68, 95, 100, 48, 57, 65, 90, 97, 
	122, 73, 95, 105, 48, 57, 65, 90, 
	97, 122, 70, 95, 102, 48, 57, 65, 
	90, 97, 122, 84, 88, 95, 116, 120, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 48, 57, 65, 90, 97, 122, 82, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	78, 95, 110, 48, 57, 65, 90, 97, 
	122, 39, 73, 80, 95, 105, 112, 48, 
	57, 65, 90, 97, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 76, 95, 
	108, 48, 57, 65, 90, 97, 122, 68, 
	95, 100, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 80, 95, 112, 48, 57, 65, 90, 
	97, 122, 76, 95, 108, 48, 57, 65, 
	90, 97, 122, 79, 95, 111, 48, 57, 
	65, 90, 97, 122, 66, 95, 98, 48, 
	57, 65, 90, 97, 122, 65, 95, 97, 
	48, 57, 66, 90, 98, 122, 76, 95, 
	108, 48, 57, 65, 90, 97, 122, 39, 
	65, 76, 95, 97, 108, 48, 57, 66, 
	90, 98, 122, 76, 95, 108, 48, 57, 
	65, 90, 97, 122, 84, 95, 116, 48, 
	57, 65, 90, 97, 122, 39, 95, 48, 
	57, 65, 90, 97, 122, 68, 70, 73, 
	77, 78, 79, 80, 88, 89, 95, 100, 
	102, 105, 109, 110, 111, 112, 120, 121, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 48, 57, 65, 90, 97, 122, 84, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	68, 78, 95, 100, 110, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 70, 95, 102, 48, 
	57, 65, 90, 97, 122, 68, 95, 100, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 48, 57, 65, 90, 97, 122, 70, 
	95, 102, 48, 57, 65, 90, 97, 122, 
	82, 95, 114, 48, 57, 65, 90, 97, 
	122, 48, 67, 68, 73, 86, 95, 99, 
	100, 105, 118, 49, 57, 65, 90, 97, 
	122, 76, 95, 108, 48, 57, 65, 90, 
	97, 122, 85, 95, 117, 48, 57, 65, 
	90, 97, 122, 68, 95, 100, 48, 57, 
	65, 90, 97, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 82, 95, 114, 
	48, 57, 65, 90, 97, 122, 82, 95, 
	114, 48, 57, 65, 90, 97, 122, 79, 
	95, 111, 48, 57, 65, 90, 97, 122, 
	75, 95, 107, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 69, 73, 95, 101, 105, 48, 
	57, 65, 90, 97, 122, 82, 83, 95, 
	114, 115, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 83, 95, 115, 48, 57, 65, 90, 
	97, 122, 69, 95, 101, 48, 57, 65, 
	90, 97, 122, 84, 95, 116, 48, 57, 
	65, 90, 97, 122, 72, 76, 95, 104, 
	108, 48, 57, 65, 90, 97, 122, 72, 
	76, 95, 104, 108, 48, 57, 65, 90, 
	97, 122, 80, 82, 95, 112, 114, 48, 
	57, 65, 90, 97, 122, 39, 68, 73, 
	79, 83, 90, 95, 100, 105, 111, 115, 
	122, 48, 57, 65, 89, 97, 121, 68, 
	73, 80, 87, 95, 100, 105, 112, 119, 
	48, 57, 65, 90, 97, 122, 82, 83, 
	88, 95, 114, 115, 120, 48, 57, 65, 
	90, 97, 122, 88, 95, 120, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 82, 83, 88, 
	95, 114, 115, 120, 48, 57, 65, 90, 
	97, 122, 83, 88, 95, 115, 120, 48, 
	57, 65, 90, 97, 122, 67, 95, 99, 
	48, 57, 65, 90, 97, 122, 65, 95, 
	97, 48, 57, 66, 90, 98, 122, 76, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 82, 95, 114, 48, 57, 65, 90, 
	97, 122, 73, 95, 105, 48, 57, 65, 
	90, 97, 122, 82, 95, 114, 48, 57, 
	65, 90, 97, 122, 88, 95, 120, 48, 
	57, 65, 90, 97, 122, 83, 95, 115, 
	48, 57, 65, 90, 97, 122, 66, 78, 
	95, 98, 110, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 68, 73, 84, 95, 100, 105, 
	116, 48, 57, 65, 90, 97, 122, 68, 
	82, 95, 100, 114, 48, 57, 65, 90, 
	97, 122, 82, 95, 114, 48, 57, 65, 
	90, 97, 122, 68, 82, 95, 100, 114, 
	48, 57, 65, 90, 97, 122, 82, 95, 
	114, 48, 57, 65, 90, 97, 122, 79, 
	95, 111, 48, 57, 65, 90, 97, 122, 
	70, 78, 95, 102, 110, 48, 57, 65, 
	90, 97, 122, 70, 95, 102, 48, 57, 
	65, 90, 97, 122, 73, 76, 77, 79, 
	85, 95, 105, 108, 109, 111, 117, 48, 
	57, 65, 90, 97, 122, 82, 95, 114, 
	48, 57, 65, 90, 97, 122, 82, 95, 
	114, 48, 57, 65, 90, 97, 122, 79, 
	95, 111, 48, 57, 65, 90, 97, 122, 
	82, 95, 114, 48, 57, 65, 90, 97, 
	122, 84, 95, 116, 48, 57, 65, 90, 
	97, 122, 85, 95, 117, 48, 57, 65, 
	90, 97, 122, 48, 49, 50, 51, 52, 
	53, 54, 55, 95, 56, 57, 65, 90, 
	97, 122, 68, 95, 100, 48, 57, 65, 
	90, 97, 122, 85, 95, 117, 48, 57, 
	65, 90, 97, 122, 76, 95, 108, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 76, 95, 
	108, 48, 57, 65, 90, 97, 122, 67, 
	69, 79, 86, 90, 95, 99, 101, 111, 
	118, 122, 48, 57, 65, 89, 97, 121, 
	71, 88, 95, 103, 120, 48, 57, 65, 
	90, 97, 122, 84, 95, 116, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 71, 95, 
	103, 48, 57, 65, 90, 97, 122, 80, 
	95, 112, 48, 57, 65, 90, 97, 122, 
	82, 84, 85, 95, 114, 116, 117, 48, 
	57, 65, 90, 97, 122, 71, 95, 103, 
	48, 57, 65, 90, 97, 122, 68, 73, 
	95, 100, 105, 48, 57, 65, 90, 97, 
	122, 77, 82, 95, 109, 114, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 77, 82, 95, 
	109, 114, 48, 57, 65, 90, 97, 122, 
	82, 95, 114, 48, 57, 65, 90, 97, 
	122, 84, 95, 116, 48, 57, 65, 90, 
	97, 122, 48, 68, 73, 95, 100, 105, 
	49, 57, 65, 90, 97, 122, 78, 95, 
	110, 48, 57, 65, 90, 97, 122, 66, 
	95, 98, 48, 57, 65, 90, 97, 122, 
	69, 72, 73, 79, 85, 95, 101, 104, 
	105, 111, 117, 48, 57, 65, 90, 97, 
	122, 65, 95, 97, 48, 57, 66, 90, 
	98, 122, 83, 95, 115, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 88, 95, 120, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 76, 95, 
	108, 48, 57, 65, 90, 97, 122, 65, 
	68, 95, 97, 100, 48, 57, 66, 90, 
	98, 122, 68, 95, 100, 48, 57, 65, 
	90, 97, 122, 78, 95, 110, 48, 57, 
	65, 90, 97, 122, 80, 95, 112, 48, 
	57, 65, 90, 97, 122, 66, 83, 95, 
	98, 115, 48, 57, 65, 90, 97, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 73, 95, 105, 48, 57, 65, 90, 
	97, 122, 67, 95, 99, 48, 57, 65, 
	90, 97, 122, 72, 95, 104, 48, 57, 
	65, 90, 97, 122, 68, 69, 76, 82, 
	83, 95, 100, 101, 108, 114, 115, 48, 
	57, 65, 90, 97, 122, 77, 95, 109, 
	48, 57, 65, 90, 97, 122, 79, 95, 
	111, 48, 57, 65, 90, 97, 122, 68, 
	95, 100, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 83, 84, 95, 115, 116, 48, 57, 
	65, 90, 97, 122, 73, 78, 95, 105, 
	110, 48, 57, 65, 90, 97, 122, 65, 
	67, 68, 95, 97, 99, 100, 48, 57, 
	66, 90, 98, 122, 39, 95, 48, 57, 
	65, 90, 97, 122, 65, 95, 97, 48, 
	57, 66, 90, 98, 122, 39, 95, 48, 
	57, 65, 90, 97, 122, 65, 67, 68, 
	95, 97, 99, 100, 48, 57, 66, 90, 
	98, 122, 39, 95, 48, 57, 65, 90, 
	97, 122, 65, 95, 97, 48, 57, 66, 
	90, 98, 122, 39, 95, 48, 57, 65, 
	90, 97, 122, 84, 95, 116, 48, 57, 
	65, 90, 97, 122, 66, 67, 69, 76, 
	80, 82, 85, 87, 89, 95, 98, 99, 
	101, 108, 112, 114, 117, 119, 121, 48, 
	57, 65, 90, 97, 122, 67, 95, 99, 
	48, 57, 65, 90, 97, 122, 70, 95, 
	102, 48, 57, 65, 90, 97, 122, 39, 
	95, 48, 57, 65, 90, 97, 122, 67, 
	84, 95, 99, 116, 48, 57, 65, 90, 
	97, 122, 84, 95, 116, 48, 57, 65, 
	90, 97, 122, 73, 95, 105, 48, 57, 
	65, 90, 97, 122, 79, 95, 111, 48, 
	57, 65, 90, 97, 122, 78, 95, 110, 
	48, 57, 65, 90, 97, 122, 65, 85, 
	95, 97, 117, 48, 57, 66, 90, 98, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 83, 95, 115, 48, 57, 65, 
	90, 97, 122, 82, 95, 114, 48, 57, 
	65, 90, 97, 122, 65, 73, 76, 80, 
	95, 97, 105, 108, 112, 48, 57, 66, 
	90, 98, 122, 65, 76, 95, 97, 108, 
	48, 57, 66, 90, 98, 122, 66, 82, 
	95, 98, 114, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 83, 95, 115, 48, 57, 65, 
	90, 97, 122, 65, 95, 97, 48, 57, 
	66, 90, 98, 122, 80, 95, 112, 48, 
	57, 65, 90, 97, 122, 78, 95, 110, 
	48, 57, 65, 90, 97, 122, 73, 95, 
	105, 48, 57, 65, 90, 97, 122, 66, 
	95, 98, 48, 57, 65, 90, 97, 122, 
	83, 95, 115, 48, 57, 65, 90, 97, 
	122, 67, 95, 99, 48, 57, 65, 90, 
	97, 122, 65, 95, 97, 48, 57, 66, 
	90, 98, 122, 76, 95, 108, 48, 57, 
	65, 90, 97, 122, 76, 95, 108, 48, 
	57, 65, 90, 97, 122, 69, 83, 95, 
	101, 115, 48, 57, 65, 90, 97, 122, 
	83, 95, 115, 48, 57, 65, 90, 97, 
	122, 84, 95, 116, 48, 57, 65, 90, 
	97, 122, 84, 95, 116, 48, 57, 65, 
	90, 97, 122, 73, 95, 105, 48, 57, 
	65, 90, 97, 122, 79, 95, 111, 48, 
	57, 65, 90, 97, 122, 77, 78, 95, 
	109, 110, 48, 57, 65, 90, 97, 122, 
	65, 83, 95, 97, 115, 48, 57, 66, 
	90, 98, 122, 68, 95, 100, 48, 57, 
	65, 90, 97, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 70, 95, 102, 
	48, 57, 65, 90, 97, 122, 73, 95, 
	105, 48, 57, 65, 90, 97, 122, 78, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 68, 76, 79, 80, 82, 95, 100, 
	108, 111, 112, 114, 48, 57, 65, 90, 
	97, 122, 69, 95, 101, 48, 57, 65, 
	90, 97, 122, 70, 95, 102, 48, 57, 
	65, 90, 97, 122, 73, 95, 105, 48, 
	57, 65, 90, 97, 122, 66, 95, 98, 
	48, 57, 65, 90, 97, 122, 82, 95, 
	114, 48, 57, 65, 90, 97, 122, 67, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 70, 95, 102, 48, 57, 65, 90, 
	97, 122, 521, 544, 607, 577, 602, 609, 
	634, 607, 560, 569, 577, 602, 609, 634, 
	39, 307, 324, 326, 332, 334, 339, 351, 
	356, 358, 364, 366, 371, 521, 544, 563, 
	570, 580, 582, 588, 590, 595, 607, 612, 
	614, 620, 622, 627, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	351, 521, 544, 570, 607, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 306, 351, 521, 544, 562, 570, 607, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 323, 324, 351, 355, 
	356, 521, 544, 570, 579, 580, 607, 611, 
	612, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 39, 351, 521, 
	544, 570, 607, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 329, 
	340, 351, 361, 372, 521, 544, 570, 585, 
	596, 607, 617, 628, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	327, 351, 359, 521, 544, 570, 583, 607, 
	615, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 334, 351, 366, 
	521, 544, 570, 590, 607, 622, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 324, 351, 356, 521, 544, 570, 
	580, 607, 612, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 324, 
	351, 356, 521, 544, 570, 580, 607, 612, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 333, 351, 365, 521, 
	544, 570, 589, 607, 621, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 336, 351, 368, 521, 544, 570, 592, 
	607, 624, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 323, 351, 
	355, 521, 544, 570, 579, 607, 611, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 39, 323, 329, 335, 338, 
	339, 351, 355, 361, 367, 370, 371, 521, 
	544, 570, 579, 585, 591, 594, 595, 607, 
	611, 617, 623, 626, 627, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 39, 351, 521, 544, 570, 607, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 334, 340, 351, 366, 372, 
	521, 544, 570, 590, 596, 607, 622, 628, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 321, 351, 353, 521, 
	544, 570, 577, 607, 609, 304, 313, 322, 
	346, 354, 378, 560, 569, 578, 602, 610, 
	634, 338, 351, 370, 521, 544, 570, 594, 
	607, 626, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 345, 351, 
	377, 521, 544, 570, 601, 607, 633, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 335, 351, 367, 521, 544, 
	570, 591, 607, 623, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	332, 351, 364, 521, 544, 570, 588, 607, 
	620, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 332, 351, 364, 
	521, 544, 570, 588, 607, 620, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 323, 351, 355, 521, 544, 570, 
	579, 607, 611, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 332, 
	338, 351, 364, 370, 521, 544, 570, 588, 
	594, 607, 620, 626, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	321, 351, 353, 521, 544, 570, 577, 607, 
	609, 304, 313, 322, 346, 354, 378, 560, 
	569, 578, 602, 610, 634, 321, 326, 332, 
	351, 353, 358, 364, 521, 544, 570, 577, 
	582, 588, 607, 609, 614, 620, 304, 313, 
	322, 346, 354, 378, 560, 569, 578, 602, 
	610, 634, 39, 321, 323, 336, 341, 351, 
	353, 355, 368, 373, 521, 544, 570, 577, 
	579, 592, 597, 607, 609, 611, 624, 629, 
	304, 313, 322, 346, 354, 378, 560, 569, 
	578, 602, 610, 634, 332, 351, 364, 521, 
	544, 570, 588, 607, 620, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 332, 351, 364, 521, 544, 570, 588, 
	607, 620, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 351, 521, 
	544, 570, 607, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 335, 
	336, 351, 367, 368, 521, 544, 570, 591, 
	592, 607, 623, 624, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	346, 351, 378, 521, 544, 570, 602, 607, 
	634, 304, 313, 321, 345, 353, 377, 560, 
	569, 577, 601, 609, 633, 331, 351, 363, 
	521, 544, 570, 587, 607, 619, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 327, 351, 359, 521, 544, 570, 
	583, 607, 615, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 326, 
	351, 358, 521, 544, 570, 582, 607, 614, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 39, 351, 521, 544, 
	570, 607, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 324, 329, 
	332, 351, 356, 361, 364, 521, 544, 570, 
	580, 585, 588, 607, 612, 617, 620, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 338, 351, 370, 521, 544, 
	570, 594, 607, 626, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	338, 351, 370, 521, 544, 570, 594, 607, 
	626, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 46, 351, 521, 
	544, 570, 607, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 332, 
	351, 364, 521, 544, 570, 588, 607, 620, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 329, 351, 361, 521, 
	544, 570, 585, 607, 617, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 334, 351, 366, 521, 544, 570, 590, 
	607, 622, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 325, 351, 
	357, 521, 544, 570, 581, 607, 613, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 39, 321, 325, 329, 330, 
	333, 339, 351, 353, 357, 361, 362, 365, 
	371, 521, 544, 570, 577, 581, 585, 586, 
	589, 595, 607, 609, 613, 617, 618, 621, 
	627, 304, 313, 322, 346, 354, 378, 560, 
	569, 578, 602, 610, 634, 321, 351, 353, 
	521, 544, 570, 577, 607, 609, 304, 313, 
	322, 346, 354, 378, 560, 569, 578, 602, 
	610, 634, 39, 323, 326, 328, 336, 351, 
	355, 358, 360, 368, 521, 544, 570, 579, 
	582, 584, 592, 607, 611, 614, 616, 624, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 322, 323, 324, 327, 
	329, 333, 337, 339, 342, 343, 351, 354, 
	355, 356, 359, 361, 365, 369, 371, 374, 
	375, 521, 544, 570, 578, 579, 580, 583, 
	585, 589, 593, 595, 598, 599, 607, 610, 
	611, 612, 615, 617, 621, 625, 627, 630, 
	631, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 322, 351, 354, 
	521, 544, 570, 578, 607, 610, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 338, 351, 370, 521, 544, 570, 
	594, 607, 626, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 335, 
	351, 367, 521, 544, 570, 591, 607, 623, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 341, 351, 373, 521, 
	544, 570, 597, 607, 629, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 336, 351, 368, 521, 544, 570, 592, 
	607, 624, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 334, 351, 
	366, 521, 544, 570, 590, 607, 622, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 325, 351, 357, 521, 544, 
	570, 581, 607, 613, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	321, 351, 353, 521, 544, 570, 577, 607, 
	609, 304, 313, 322, 346, 354, 378, 560, 
	569, 578, 602, 610, 634, 338, 351, 370, 
	521, 544, 570, 594, 607, 626, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 339, 351, 371, 521, 544, 570, 
	595, 607, 627, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 332, 
	351, 364, 521, 544, 570, 588, 607, 620, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 328, 351, 360, 521, 
	544, 570, 584, 607, 616, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 321, 351, 353, 521, 544, 570, 577, 
	607, 609, 304, 313, 322, 346, 354, 378, 
	560, 569, 578, 602, 610, 634, 339, 351, 
	371, 521, 544, 570, 595, 607, 627, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 325, 351, 357, 521, 544, 
	570, 581, 607, 613, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	334, 351, 366, 521, 544, 570, 590, 607, 
	622, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 346, 351, 378, 
	521, 544, 570, 602, 607, 634, 304, 313, 
	321, 345, 353, 377, 560, 569, 577, 601, 
	609, 633, 321, 351, 353, 521, 544, 570, 
	577, 607, 609, 304, 313, 322, 346, 354, 
	378, 560, 569, 578, 602, 610, 634, 46, 
	351, 521, 544, 570, 607, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 46, 351, 521, 544, 570, 607, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 39, 329, 332, 334, 344, 
	351, 361, 364, 366, 376, 521, 544, 570, 
	585, 588, 590, 600, 607, 617, 620, 622, 
	632, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 338, 351, 370, 
	521, 544, 570, 594, 607, 626, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 329, 339, 351, 361, 371, 521, 
	544, 570, 585, 595, 607, 617, 627, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 326, 351, 358, 521, 544, 
	570, 582, 607, 614, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	324, 334, 351, 356, 366, 521, 544, 570, 
	580, 590, 607, 612, 622, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 325, 351, 357, 521, 544, 570, 581, 
	607, 613, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 326, 351, 
	358, 521, 544, 570, 582, 607, 614, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 324, 351, 356, 521, 544, 
	570, 580, 607, 612, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	325, 351, 357, 521, 544, 570, 581, 607, 
	613, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 326, 351, 358, 
	521, 544, 570, 582, 607, 614, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 325, 351, 357, 521, 544, 570, 
	581, 607, 613, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 324, 
	351, 356, 521, 544, 570, 580, 607, 612, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 329, 351, 361, 521, 
	544, 570, 585, 607, 617, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 326, 351, 358, 521, 544, 570, 582, 
	607, 614, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 340, 344, 
	351, 372, 376, 521, 544, 570, 596, 600, 
	607, 628, 632, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 325, 
	351, 357, 521, 544, 570, 581, 607, 613, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 338, 351, 370, 521, 
	544, 570, 594, 607, 626, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 334, 351, 366, 521, 544, 570, 590, 
	607, 622, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 39, 329, 
	336, 351, 361, 368, 521, 544, 570, 585, 
	592, 607, 617, 624, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	332, 351, 364, 521, 544, 570, 588, 607, 
	620, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 332, 351, 364, 
	521, 544, 570, 588, 607, 620, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 324, 351, 356, 521, 544, 570, 
	580, 607, 612, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 325, 
	351, 357, 521, 544, 570, 581, 607, 613, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 336, 351, 368, 521, 
	544, 570, 592, 607, 624, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 332, 351, 364, 521, 544, 570, 588, 
	607, 620, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 335, 351, 
	367, 521, 544, 570, 591, 607, 623, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 322, 351, 354, 521, 544, 
	570, 578, 607, 610, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	321, 351, 353, 521, 544, 570, 577, 607, 
	609, 304, 313, 322, 346, 354, 378, 560, 
	569, 578, 602, 610, 634, 332, 351, 364, 
	521, 544, 570, 588, 607, 620, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 39, 321, 332, 351, 353, 364, 
	521, 544, 570, 577, 588, 607, 609, 620, 
	304, 313, 322, 346, 354, 378, 560, 569, 
	578, 602, 610, 634, 332, 351, 364, 521, 
	544, 570, 588, 607, 620, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 340, 351, 372, 521, 544, 570, 596, 
	607, 628, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 39, 351, 
	521, 544, 570, 607, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	324, 326, 329, 333, 334, 335, 336, 344, 
	345, 351, 356, 358, 361, 365, 366, 367, 
	368, 376, 377, 521, 544, 570, 580, 582, 
	585, 589, 590, 591, 592, 600, 601, 607, 
	612, 614, 617, 621, 622, 623, 624, 632, 
	633, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 325, 351, 357, 
	521, 544, 570, 581, 607, 613, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 340, 351, 372, 521, 544, 570, 
	596, 607, 628, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 324, 
	334, 351, 356, 366, 521, 544, 570, 580, 
	590, 607, 612, 622, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	325, 351, 357, 521, 544, 570, 581, 607, 
	613, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 326, 351, 358, 
	521, 544, 570, 582, 607, 614, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 324, 351, 356, 521, 544, 570, 
	580, 607, 612, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 325, 
	351, 357, 521, 544, 570, 581, 607, 613, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 326, 351, 358, 521, 
	544, 570, 582, 607, 614, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 338, 351, 370, 521, 544, 570, 594, 
	607, 626, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 304, 323, 
	324, 329, 342, 351, 355, 356, 361, 374, 
	521, 544, 560, 570, 579, 580, 585, 598, 
	607, 611, 612, 617, 630, 305, 313, 321, 
	346, 353, 378, 561, 569, 577, 602, 609, 
	634, 332, 351, 364, 521, 544, 570, 588, 
	607, 620, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 341, 351, 
	373, 521, 544, 570, 597, 607, 629, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 324, 351, 356, 521, 544, 
	570, 580, 607, 612, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	325, 351, 357, 521, 544, 570, 581, 607, 
	613, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 338, 351, 370, 
	521, 544, 570, 594, 607, 626, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 338, 351, 370, 521, 544, 570, 
	594, 607, 626, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 335, 
	351, 367, 521, 544, 570, 591, 607, 623, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 331, 351, 363, 521, 
	544, 570, 587, 607, 619, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 325, 351, 357, 521, 544, 570, 581, 
	607, 613, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 325, 329, 
	351, 357, 361, 521, 544, 570, 581, 585, 
	607, 613, 617, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 338, 
	339, 351, 370, 371, 521, 544, 570, 594, 
	595, 607, 626, 627, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	325, 351, 357, 521, 544, 570, 581, 607, 
	613, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 339, 351, 371, 
	521, 544, 570, 595, 607, 627, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 325, 351, 357, 521, 544, 570, 
	581, 607, 613, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 340, 
	351, 372, 521, 544, 570, 596, 607, 628, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 328, 332, 351, 360, 
	364, 521, 544, 570, 584, 588, 607, 616, 
	620, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 328, 332, 351, 
	360, 364, 521, 544, 570, 584, 588, 607, 
	616, 620, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 336, 338, 
	351, 368, 370, 521, 544, 570, 592, 594, 
	607, 624, 626, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 39, 
	324, 329, 335, 339, 346, 351, 356, 361, 
	367, 371, 378, 521, 544, 570, 580, 585, 
	591, 595, 602, 607, 612, 617, 623, 627, 
	634, 304, 313, 321, 345, 353, 377, 560, 
	569, 577, 601, 609, 633, 324, 329, 336, 
	343, 351, 356, 361, 368, 375, 521, 544, 
	570, 580, 585, 592, 599, 607, 612, 617, 
	624, 631, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 338, 339, 
	344, 351, 370, 371, 376, 521, 544, 570, 
	594, 595, 600, 607, 626, 627, 632, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 344, 351, 376, 521, 544, 
	570, 600, 607, 632, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	338, 351, 370, 521, 544, 570, 594, 607, 
	626, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 338, 339, 344, 
	351, 370, 371, 376, 521, 544, 570, 594, 
	595, 600, 607, 626, 627, 632, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 339, 344, 351, 371, 376, 521, 
	544, 570, 595, 600, 607, 627, 632, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 323, 351, 355, 521, 544, 
	570, 579, 607, 611, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	321, 351, 353, 521, 544, 570, 577, 607, 
	609, 304, 313, 322, 346, 354, 378, 560, 
	569, 578, 602, 610, 634, 332, 351, 364, 
	521, 544, 570, 588, 607, 620, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 325, 351, 357, 521, 544, 570, 
	581, 607, 613, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 338, 
	351, 370, 521, 544, 570, 594, 607, 626, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 329, 351, 361, 521, 
	544, 570, 585, 607, 617, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 338, 351, 370, 521, 544, 570, 594, 
	607, 626, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 344, 351, 
	376, 521, 544, 570, 600, 607, 632, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 339, 351, 371, 521, 544, 
	570, 595, 607, 627, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	322, 334, 351, 354, 366, 521, 544, 570, 
	578, 590, 607, 610, 622, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 325, 351, 357, 521, 544, 570, 581, 
	607, 613, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 324, 329, 
	340, 351, 356, 361, 372, 521, 544, 570, 
	580, 585, 596, 607, 612, 617, 628, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 324, 338, 351, 356, 370, 
	521, 544, 570, 580, 594, 607, 612, 626, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 338, 351, 370, 521, 
	544, 570, 594, 607, 626, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 324, 338, 351, 356, 370, 521, 544, 
	570, 580, 594, 607, 612, 626, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 338, 351, 370, 521, 544, 570, 
	594, 607, 626, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 335, 
	351, 367, 521, 544, 570, 591, 607, 623, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 326, 334, 351, 358, 
	366, 521, 544, 570, 582, 590, 607, 614, 
	622, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 326, 351, 358, 
	521, 544, 570, 582, 607, 614, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 329, 332, 333, 335, 341, 351, 
	361, 364, 365, 367, 373, 521, 544, 570, 
	585, 588, 589, 591, 597, 607, 617, 620, 
	621, 623, 629, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 338, 
	351, 370, 521, 544, 570, 594, 607, 626, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 338, 351, 370, 521, 
	544, 570, 594, 607, 626, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 335, 351, 367, 521, 544, 570, 591, 
	607, 623, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 338, 351, 
	370, 521, 544, 570, 594, 607, 626, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 340, 351, 372, 521, 544, 
	570, 596, 607, 628, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	341, 351, 373, 521, 544, 570, 597, 607, 
	629, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 304, 305, 306, 
	307, 308, 309, 310, 311, 351, 521, 544, 
	560, 561, 562, 563, 564, 565, 566, 567, 
	570, 607, 312, 313, 321, 346, 353, 378, 
	568, 569, 577, 602, 609, 634, 324, 351, 
	356, 521, 544, 570, 580, 607, 612, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 341, 351, 373, 521, 544, 
	570, 597, 607, 629, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	332, 351, 364, 521, 544, 570, 588, 607, 
	620, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 325, 351, 357, 
	521, 544, 570, 581, 607, 613, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 332, 351, 364, 521, 544, 570, 
	588, 607, 620, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 323, 
	325, 335, 342, 346, 351, 355, 357, 367, 
	374, 378, 521, 544, 570, 579, 581, 591, 
	598, 602, 607, 611, 613, 623, 630, 634, 
	304, 313, 321, 345, 353, 377, 560, 569, 
	577, 601, 609, 633, 327, 344, 351, 359, 
	376, 521, 544, 570, 583, 600, 607, 615, 
	632, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 340, 351, 372, 
	521, 544, 570, 596, 607, 628, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 338, 351, 370, 521, 544, 570, 
	594, 607, 626, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 325, 
	351, 357, 521, 544, 570, 581, 607, 613, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 327, 351, 359, 521, 
	544, 570, 583, 607, 615, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 336, 351, 368, 521, 544, 570, 592, 
	607, 624, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 338, 340, 
	341, 351, 370, 372, 373, 521, 544, 570, 
	594, 596, 597, 607, 626, 628, 629, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 327, 351, 359, 521, 544, 
	570, 583, 607, 615, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	324, 329, 351, 356, 361, 521, 544, 570, 
	580, 585, 607, 612, 617, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 333, 338, 351, 365, 370, 521, 544, 
	570, 589, 594, 607, 621, 626, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 338, 351, 370, 521, 544, 570, 
	594, 607, 626, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 333, 
	338, 351, 365, 370, 521, 544, 570, 589, 
	594, 607, 621, 626, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	338, 351, 370, 521, 544, 570, 594, 607, 
	626, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 340, 351, 372, 
	521, 544, 570, 596, 607, 628, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 304, 324, 329, 351, 356, 361, 
	521, 544, 560, 570, 580, 585, 607, 612, 
	617, 305, 313, 321, 346, 353, 378, 561, 
	569, 577, 602, 609, 634, 334, 351, 366, 
	521, 544, 570, 590, 607, 622, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 322, 351, 354, 521, 544, 570, 
	578, 607, 610, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 325, 
	328, 329, 335, 341, 351, 357, 360, 361, 
	367, 373, 521, 544, 570, 581, 584, 585, 
	591, 597, 607, 613, 616, 617, 623, 629, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 321, 351, 353, 521, 
	544, 570, 577, 607, 609, 304, 313, 322, 
	346, 354, 378, 560, 569, 578, 602, 610, 
	634, 339, 351, 371, 521, 544, 570, 595, 
	607, 627, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 325, 351, 
	357, 521, 544, 570, 581, 607, 613, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 344, 351, 376, 521, 544, 
	570, 600, 607, 632, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	325, 351, 357, 521, 544, 570, 581, 607, 
	613, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 332, 351, 364, 
	521, 544, 570, 588, 607, 620, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 321, 324, 351, 353, 356, 521, 
	544, 570, 577, 580, 607, 609, 612, 304, 
	313, 322, 346, 354, 378, 560, 569, 578, 
	602, 610, 634, 324, 351, 356, 521, 544, 
	570, 580, 607, 612, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	334, 351, 366, 521, 544, 570, 590, 607, 
	622, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 336, 351, 368, 
	521, 544, 570, 592, 607, 624, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 322, 339, 351, 354, 371, 521, 
	544, 570, 578, 595, 607, 610, 627, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 332, 351, 364, 521, 544, 
	570, 588, 607, 620, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	329, 351, 361, 521, 544, 570, 585, 607, 
	617, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 323, 351, 355, 
	521, 544, 570, 579, 607, 611, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 328, 351, 360, 521, 544, 570, 
	584, 607, 616, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 324, 
	325, 332, 338, 339, 351, 356, 357, 364, 
	370, 371, 521, 544, 570, 580, 581, 588, 
	594, 595, 607, 612, 613, 620, 626, 627, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 333, 351, 365, 521, 
	544, 570, 589, 607, 621, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 335, 351, 367, 521, 544, 570, 591, 
	607, 623, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 324, 351, 
	356, 521, 544, 570, 580, 607, 612, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 325, 351, 357, 521, 544, 
	570, 581, 607, 613, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	339, 340, 351, 371, 372, 521, 544, 570, 
	595, 596, 607, 627, 628, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 329, 334, 351, 361, 366, 521, 544, 
	570, 585, 590, 607, 617, 622, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 321, 323, 324, 351, 353, 355, 
	356, 521, 544, 570, 577, 579, 580, 607, 
	609, 611, 612, 304, 313, 322, 346, 354, 
	378, 560, 569, 578, 602, 610, 634, 39, 
	351, 521, 544, 570, 607, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 321, 351, 353, 521, 544, 570, 577, 
	607, 609, 304, 313, 322, 346, 354, 378, 
	560, 569, 578, 602, 610, 634, 39, 351, 
	521, 544, 570, 607, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	321, 323, 324, 351, 353, 355, 356, 521, 
	544, 570, 577, 579, 580, 607, 609, 611, 
	612, 304, 313, 322, 346, 354, 378, 560, 
	569, 578, 602, 610, 634, 39, 351, 521, 
	544, 570, 607, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 321, 
	351, 353, 521, 544, 570, 577, 607, 609, 
	304, 313, 322, 346, 354, 378, 560, 569, 
	578, 602, 610, 634, 39, 351, 521, 544, 
	570, 607, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 340, 351, 
	372, 521, 544, 570, 596, 607, 628, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 322, 323, 325, 332, 336, 
	338, 341, 343, 345, 351, 354, 355, 357, 
	364, 368, 370, 373, 375, 377, 521, 544, 
	570, 578, 579, 581, 588, 592, 594, 597, 
	599, 601, 607, 610, 611, 613, 620, 624, 
	626, 629, 631, 633, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	323, 351, 355, 521, 544, 570, 579, 607, 
	611, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 326, 351, 358, 
	521, 544, 570, 582, 607, 614, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 39, 351, 521, 544, 570, 607, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 323, 340, 351, 355, 
	372, 521, 544, 570, 579, 596, 607, 611, 
	628, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 340, 351, 372, 
	521, 544, 570, 596, 607, 628, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 329, 351, 361, 521, 544, 570, 
	585, 607, 617, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 335, 
	351, 367, 521, 544, 570, 591, 607, 623, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 334, 351, 366, 521, 
	544, 570, 590, 607, 622, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 321, 341, 351, 353, 373, 521, 544, 
	570, 577, 597, 607, 609, 629, 304, 313, 
	322, 346, 354, 378, 560, 569, 578, 602, 
	610, 634, 325, 351, 357, 521, 544, 570, 
	581, 607, 613, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 339, 
	351, 371, 521, 544, 570, 595, 607, 627, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 338, 351, 370, 521, 
	544, 570, 594, 607, 626, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 321, 329, 332, 336, 351, 353, 361, 
	364, 368, 521, 544, 570, 577, 585, 588, 
	592, 607, 609, 617, 620, 624, 304, 313, 
	322, 346, 354, 378, 560, 569, 578, 602, 
	610, 634, 321, 332, 351, 353, 364, 521, 
	544, 570, 577, 588, 607, 609, 620, 304, 
	313, 322, 346, 354, 378, 560, 569, 578, 
	602, 610, 634, 322, 338, 351, 354, 370, 
	521, 544, 570, 578, 594, 607, 610, 626, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 325, 351, 357, 521, 
	544, 570, 581, 607, 613, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 339, 351, 371, 521, 544, 570, 595, 
	607, 627, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 321, 351, 
	353, 521, 544, 570, 577, 607, 609, 304, 
	313, 322, 346, 354, 378, 560, 569, 578, 
	602, 610, 634, 336, 351, 368, 521, 544, 
	570, 592, 607, 624, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	334, 351, 366, 521, 544, 570, 590, 607, 
	622, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 329, 351, 361, 
	521, 544, 570, 585, 607, 617, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 322, 351, 354, 521, 544, 570, 
	578, 607, 610, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 339, 
	351, 371, 521, 544, 570, 595, 607, 627, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 323, 351, 355, 521, 
	544, 570, 579, 607, 611, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 321, 351, 353, 521, 544, 570, 577, 
	607, 609, 304, 313, 322, 346, 354, 378, 
	560, 569, 578, 602, 610, 634, 332, 351, 
	364, 521, 544, 570, 588, 607, 620, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 332, 351, 364, 521, 544, 
	570, 588, 607, 620, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	325, 339, 351, 357, 371, 521, 544, 570, 
	581, 595, 607, 613, 627, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 339, 351, 371, 521, 544, 570, 595, 
	607, 627, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 340, 351, 
	372, 521, 544, 570, 596, 607, 628, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 340, 351, 372, 521, 544, 
	570, 596, 607, 628, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	329, 351, 361, 521, 544, 570, 585, 607, 
	617, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 335, 351, 367, 
	521, 544, 570, 591, 607, 623, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 333, 334, 351, 365, 366, 521, 
	544, 570, 589, 590, 607, 621, 622, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 321, 339, 351, 353, 371, 
	521, 544, 570, 577, 595, 607, 609, 627, 
	304, 313, 322, 346, 354, 378, 560, 569, 
	578, 602, 610, 634, 324, 351, 356, 521, 
	544, 570, 580, 607, 612, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 325, 351, 357, 521, 544, 570, 581, 
	607, 613, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 326, 351, 
	358, 521, 544, 570, 582, 607, 614, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 329, 351, 361, 521, 544, 
	570, 585, 607, 617, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	334, 351, 366, 521, 544, 570, 590, 607, 
	622, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 325, 351, 357, 
	521, 544, 570, 581, 607, 613, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 324, 332, 335, 336, 338, 351, 
	356, 364, 367, 368, 370, 521, 544, 570, 
	580, 588, 591, 592, 594, 607, 612, 620, 
	623, 624, 626, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 325, 
	351, 357, 521, 544, 570, 581, 607, 613, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 326, 351, 358, 521, 
	544, 570, 582, 607, 614, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 329, 351, 361, 521, 544, 570, 585, 
	607, 617, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 322, 351, 
	354, 521, 544, 570, 578, 607, 610, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 338, 351, 370, 521, 544, 
	570, 594, 607, 626, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	323, 351, 355, 521, 544, 570, 579, 607, 
	611, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 325, 351, 357, 
	521, 544, 570, 581, 607, 613, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 326, 351, 358, 521, 544, 570, 
	582, 607, 614, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 0
};
static const char _lexer_single_lengths[] = {
	0, 2, 3, 14, 2, 5, 5, 2, 
	5, 2, 5, 4, 5, 5, 2, 5, 
	2, 0, 8, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 4, 2, 
	2, 2, 7, 8, 3, 3, 126, 1, 
	0, 1, 0, 1, 14, 1, 6, 4, 
	2, 2, 2, 0, 1, 3, 1, 2, 
	1, 13, 1, 2, 5, 2, 5, 3, 
	3, 3, 3, 3, 3, 3, 12, 2, 
	5, 3, 3, 3, 3, 3, 3, 3, 
	5, 3, 7, 10, 3, 3, 1, 5, 
	3, 3, 3, 3, 2, 7, 3, 3, 
	2, 3, 3, 3, 3, 14, 3, 10, 
	21, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 2, 2, 10, 3, 5, 
	3, 5, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 5, 3, 3, 3, 6, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 6, 3, 3, 2, 19, 3, 
	3, 5, 3, 3, 3, 3, 3, 3, 
	10, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 5, 5, 3, 3, 3, 3, 
	5, 5, 5, 12, 9, 7, 3, 3, 
	7, 5, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 5, 3, 7, 5, 3, 
	5, 3, 3, 5, 3, 11, 3, 3, 
	3, 3, 3, 3, 9, 3, 3, 3, 
	3, 3, 11, 5, 3, 3, 3, 3, 
	3, 7, 3, 5, 5, 3, 5, 3, 
	3, 6, 3, 3, 11, 3, 3, 3, 
	3, 3, 3, 5, 3, 3, 3, 5, 
	3, 3, 3, 3, 11, 3, 3, 3, 
	3, 5, 5, 7, 2, 3, 2, 7, 
	2, 3, 2, 3, 19, 3, 3, 2, 
	5, 3, 3, 3, 3, 5, 3, 3, 
	3, 9, 5, 5, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	5, 3, 3, 3, 3, 3, 5, 5, 
	3, 3, 3, 3, 3, 3, 11, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	1, 28, 5, 7, 13, 6, 13, 9, 
	9, 9, 9, 9, 9, 9, 26, 6, 
	13, 9, 9, 9, 9, 9, 9, 9, 
	13, 9, 17, 22, 9, 9, 5, 13, 
	9, 9, 9, 9, 6, 17, 9, 9, 
	6, 9, 9, 9, 9, 30, 9, 22, 
	45, 9, 9, 9, 9, 9, 9, 9, 
	9, 9, 9, 9, 9, 9, 9, 9, 
	9, 9, 9, 6, 6, 22, 9, 13, 
	9, 13, 9, 9, 9, 9, 9, 9, 
	9, 9, 9, 13, 9, 9, 9, 14, 
	9, 9, 9, 9, 9, 9, 9, 9, 
	9, 9, 14, 9, 9, 6, 41, 9, 
	9, 13, 9, 9, 9, 9, 9, 9, 
	23, 9, 9, 9, 9, 9, 9, 9, 
	9, 9, 13, 13, 9, 9, 9, 9, 
	13, 13, 13, 26, 21, 17, 9, 9, 
	17, 13, 9, 9, 9, 9, 9, 9, 
	9, 9, 9, 13, 9, 17, 13, 9, 
	13, 9, 9, 13, 9, 25, 9, 9, 
	9, 9, 9, 9, 21, 9, 9, 9, 
	9, 9, 25, 13, 9, 9, 9, 9, 
	9, 17, 9, 13, 13, 9, 13, 9, 
	9, 15, 9, 9, 25, 9, 9, 9, 
	9, 9, 9, 13, 9, 9, 9, 13, 
	9, 9, 9, 9, 25, 9, 9, 9, 
	9, 13, 13, 17, 6, 9, 6, 17, 
	6, 9, 6, 9, 41, 9, 9, 6, 
	13, 9, 9, 9, 9, 13, 9, 9, 
	9, 21, 13, 13, 9, 9, 9, 9, 
	9, 9, 9, 9, 9, 9, 9, 9, 
	13, 9, 9, 9, 9, 9, 13, 13, 
	9, 9, 9, 9, 9, 9, 25, 9, 
	9, 9, 9, 9, 9, 9, 9
};
static const char _lexer_range_lengths[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	3, 3, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 2, 0, 6, 0, 
	3, 1, 1, 0, 0, 0, 4, 4, 
	3, 3, 4, 3, 0, 0, 0, 0, 
	0, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 2, 
	3, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6
};
static const short _lexer_index_offsets[] = {
	0, 0, 3, 7, 22, 25, 31, 37, 
	40, 46, 49, 55, 60, 66, 72, 75, 
	81, 87, 91, 100, 103, 106, 109, 112, 
	115, 118, 121, 124, 127, 130, 133, 138, 
	141, 144, 147, 155, 164, 170, 174, 307, 
	309, 313, 316, 318, 320, 335, 337, 348, 
	357, 363, 369, 376, 380, 382, 386, 388, 
	391, 393, 410, 415, 421, 430, 436, 445, 
	452, 459, 466, 473, 480, 487, 494, 510, 
	516, 525, 532, 539, 546, 553, 560, 567, 
	574, 583, 590, 601, 615, 622, 629, 634, 
	643, 650, 657, 664, 671, 677, 688, 695, 
	702, 708, 715, 722, 729, 736, 754, 761, 
	775, 800, 807, 814, 821, 828, 835, 842, 
	849, 856, 863, 870, 877, 884, 891, 898, 
	905, 912, 919, 926, 932, 938, 952, 959, 
	968, 975, 984, 991, 998, 1005, 1012, 1019, 
	1026, 1033, 1040, 1047, 1056, 1063, 1070, 1077, 
	1087, 1094, 1101, 1108, 1115, 1122, 1129, 1136, 
	1143, 1150, 1157, 1167, 1174, 1181, 1187, 1210, 
	1217, 1224, 1233, 1240, 1247, 1254, 1261, 1268, 
	1275, 1289, 1296, 1303, 1310, 1317, 1324, 1331, 
	1338, 1345, 1352, 1361, 1370, 1377, 1384, 1391, 
	1398, 1407, 1416, 1425, 1441, 1454, 1465, 1472, 
	1479, 1490, 1499, 1506, 1513, 1520, 1527, 1534, 
	1541, 1548, 1555, 1562, 1571, 1578, 1589, 1598, 
	1605, 1614, 1621, 1628, 1637, 1644, 1659, 1666, 
	1673, 1680, 1687, 1694, 1701, 1714, 1721, 1728, 
	1735, 1742, 1749, 1764, 1773, 1780, 1787, 1794, 
	1801, 1808, 1819, 1826, 1835, 1844, 1851, 1860, 
	1867, 1874, 1884, 1891, 1898, 1913, 1920, 1927, 
	1934, 1941, 1948, 1955, 1964, 1971, 1978, 1985, 
	1994, 2001, 2008, 2015, 2022, 2037, 2044, 2051, 
	2058, 2065, 2074, 2083, 2094, 2100, 2107, 2113, 
	2124, 2130, 2137, 2143, 2150, 2173, 2180, 2187, 
	2193, 2202, 2209, 2216, 2223, 2230, 2239, 2246, 
	2253, 2260, 2273, 2282, 2291, 2298, 2305, 2312, 
	2319, 2326, 2333, 2340, 2347, 2354, 2361, 2368, 
	2375, 2384, 2391, 2398, 2405, 2412, 2419, 2428, 
	2437, 2444, 2451, 2458, 2465, 2472, 2479, 2494, 
	2501, 2508, 2515, 2522, 2529, 2536, 2543, 2550, 
	2556, 2561, 2596, 2608, 2622, 2642, 2655, 2675, 
	2691, 2707, 2723, 2739, 2755, 2771, 2787, 2820, 
	2833, 2853, 2869, 2885, 2901, 2917, 2933, 2949, 
	2965, 2985, 3001, 3025, 3054, 3070, 3086, 3098, 
	3118, 3134, 3150, 3166, 3182, 3195, 3219, 3235, 
	3251, 3264, 3280, 3296, 3312, 3328, 3365, 3381, 
	3410, 3462, 3478, 3494, 3510, 3526, 3542, 3558, 
	3574, 3590, 3606, 3622, 3638, 3654, 3670, 3686, 
	3702, 3718, 3734, 3750, 3763, 3776, 3805, 3821, 
	3841, 3857, 3877, 3893, 3909, 3925, 3941, 3957, 
	3973, 3989, 4005, 4021, 4041, 4057, 4073, 4089, 
	4110, 4126, 4142, 4158, 4174, 4190, 4206, 4222, 
	4238, 4254, 4270, 4291, 4307, 4323, 4336, 4384, 
	4400, 4416, 4436, 4452, 4468, 4484, 4500, 4516, 
	4532, 4562, 4578, 4594, 4610, 4626, 4642, 4658, 
	4674, 4690, 4706, 4726, 4746, 4762, 4778, 4794, 
	4810, 4830, 4850, 4870, 4903, 4931, 4955, 4971, 
	4987, 5011, 5031, 5047, 5063, 5079, 5095, 5111, 
	5127, 5143, 5159, 5175, 5195, 5211, 5235, 5255, 
	5271, 5291, 5307, 5323, 5343, 5359, 5391, 5407, 
	5423, 5439, 5455, 5471, 5487, 5515, 5531, 5547, 
	5563, 5579, 5595, 5627, 5647, 5663, 5679, 5695, 
	5711, 5727, 5751, 5767, 5787, 5807, 5823, 5843, 
	5859, 5875, 5897, 5913, 5929, 5961, 5977, 5993, 
	6009, 6025, 6041, 6057, 6077, 6093, 6109, 6125, 
	6145, 6161, 6177, 6193, 6209, 6241, 6257, 6273, 
	6289, 6305, 6325, 6345, 6369, 6382, 6398, 6411, 
	6435, 6448, 6464, 6477, 6493, 6541, 6557, 6573, 
	6586, 6606, 6622, 6638, 6654, 6670, 6690, 6706, 
	6722, 6738, 6766, 6786, 6806, 6822, 6838, 6854, 
	6870, 6886, 6902, 6918, 6934, 6950, 6966, 6982, 
	6998, 7018, 7034, 7050, 7066, 7082, 7098, 7118, 
	7138, 7154, 7170, 7186, 7202, 7218, 7234, 7266, 
	7282, 7298, 7314, 7330, 7346, 7362, 7378
};
static const short _lexer_indicies[] = {
	1, 1, 0, 2, 1, 1, 0, 4, 
	4, 5, 6, 7, 8, 9, 10, 5, 
	6, 7, 8, 9, 10, 3, 11, 11, 
	3, 11, 11, 12, 12, 12, 3, 6, 
	6, 13, 13, 13, 3, 14, 14, 3, 
	14, 14, 15, 15, 15, 3, 16, 16, 
	3, 16, 16, 17, 17, 17, 3, 18, 
	19, 18, 19, 3, 18, 18, 20, 20, 
	20, 3, 19, 19, 21, 21, 21, 3, 
	22, 22, 3, 22, 22, 23, 23, 23, 
	3, 25, 25, 24, 24, 24, 0, 27, 
	27, 27, 26, 29, 30, 31, 32, 29, 
	30, 31, 32, 28, 33, 33, 28, 34, 
	34, 28, 35, 35, 28, 36, 36, 28, 
	37, 37, 28, 38, 38, 28, 39, 39, 
	28, 40, 40, 28, 41, 41, 28, 42, 
	42, 28, 43, 43, 28, 44, 45, 44, 
	45, 28, 46, 46, 28, 47, 47, 28, 
	48, 48, 28, 49, 50, 51, 52, 53, 
	54, 55, 28, 56, 57, 58, 59, 56, 
	57, 58, 59, 28, 61, 61, 62, 62, 
	62, 60, 63, 63, 64, 0, 66, 67, 
	68, 69, 70, 71, 72, 73, 74, 75, 
	76, 77, 78, 79, 80, 82, 83, 85, 
	86, 87, 88, 89, 90, 91, 92, 69, 
	93, 94, 69, 95, 96, 97, 98, 65, 
	99, 100, 101, 102, 103, 104, 105, 106, 
	107, 108, 109, 111, 112, 113, 114, 115, 
	116, 117, 118, 119, 120, 121, 122, 110, 
	100, 101, 102, 103, 104, 105, 106, 107, 
	108, 109, 111, 112, 113, 114, 115, 116, 
	117, 118, 119, 120, 121, 122, 123, 124, 
	125, 126, 127, 128, 129, 130, 131, 132, 
	133, 135, 136, 137, 138, 139, 140, 141, 
	142, 143, 144, 145, 146, 134, 124, 125, 
	126, 127, 128, 129, 130, 131, 132, 133, 
	135, 136, 137, 138, 139, 140, 141, 142, 
	143, 144, 145, 146, 65, 84, 110, 110, 
	134, 134, 81, 148, 147, 149, 149, 149, 
	0, 150, 151, 0, 151, 152, 154, 153, 
	4, 4, 5, 6, 7, 8, 9, 10, 
	5, 6, 7, 8, 9, 10, 155, 157, 
	156, 159, 25, 160, 159, 25, 160, 83, 
	84, 24, 24, 158, 161, 25, 161, 25, 
	83, 84, 24, 24, 158, 25, 25, 84, 
	24, 24, 158, 25, 25, 24, 24, 24, 
	162, 25, 25, 163, 24, 24, 24, 0, 
	27, 27, 27, 164, 165, 86, 167, 168, 
	169, 166, 171, 170, 173, 174, 172, 176, 
	175, 178, 179, 180, 181, 182, 183, 184, 
	110, 180, 181, 182, 183, 184, 110, 110, 
	110, 177, 110, 110, 110, 110, 0, 186, 
	110, 110, 110, 110, 185, 187, 188, 110, 
	187, 188, 110, 110, 110, 185, 190, 110, 
	110, 110, 110, 189, 191, 192, 110, 191, 
	192, 110, 110, 110, 185, 193, 110, 193, 
	110, 110, 110, 185, 194, 110, 194, 110, 
	110, 110, 185, 195, 110, 195, 110, 110, 
	110, 185, 196, 110, 196, 110, 110, 110, 
	185, 197, 110, 197, 110, 110, 110, 185, 
	198, 110, 198, 110, 110, 110, 185, 199, 
	110, 199, 110, 110, 110, 185, 201, 202, 
	203, 204, 205, 206, 110, 202, 203, 204, 
	205, 206, 110, 110, 110, 200, 208, 110, 
	110, 110, 110, 207, 209, 210, 110, 209, 
	210, 110, 110, 110, 185, 211, 110, 211, 
	110, 110, 110, 185, 212, 110, 212, 110, 
	110, 110, 185, 213, 110, 213, 110, 110, 
	110, 185, 214, 110, 214, 110, 110, 110, 
	185, 215, 110, 215, 110, 110, 110, 185, 
	216, 110, 216, 110, 110, 110, 185, 217, 
	110, 217, 110, 110, 110, 185, 218, 219, 
	110, 218, 219, 110, 110, 110, 185, 220, 
	110, 220, 110, 110, 110, 185, 221, 222, 
	223, 110, 221, 222, 223, 110, 110, 110, 
	185, 225, 226, 227, 228, 229, 230, 226, 
	227, 228, 229, 110, 110, 110, 224, 231, 
	110, 231, 110, 110, 110, 185, 232, 110, 
	232, 110, 110, 110, 185, 234, 110, 110, 
	110, 233, 235, 236, 110, 235, 236, 110, 
	110, 110, 185, 237, 110, 237, 110, 110, 
	110, 185, 238, 110, 238, 110, 110, 110, 
	185, 239, 110, 239, 110, 110, 110, 185, 
	240, 110, 240, 110, 110, 110, 185, 242, 
	110, 110, 110, 110, 241, 244, 245, 246, 
	110, 244, 245, 246, 110, 110, 110, 243, 
	248, 110, 248, 110, 110, 110, 247, 250, 
	110, 250, 110, 110, 110, 249, 251, 110, 
	110, 110, 110, 185, 252, 110, 252, 110, 
	110, 110, 185, 253, 110, 253, 110, 110, 
	110, 185, 254, 110, 254, 110, 110, 110, 
	185, 255, 110, 255, 110, 110, 110, 185, 
	257, 258, 259, 260, 261, 262, 263, 110, 
	258, 259, 260, 261, 262, 263, 110, 110, 
	110, 256, 264, 110, 264, 110, 110, 110, 
	185, 266, 267, 268, 269, 270, 110, 267, 
	268, 269, 270, 110, 110, 110, 265, 271, 
	272, 273, 274, 275, 276, 277, 278, 279, 
	280, 110, 271, 272, 273, 274, 275, 276, 
	277, 278, 279, 280, 110, 110, 110, 185, 
	281, 110, 281, 110, 110, 110, 185, 282, 
	110, 282, 110, 110, 110, 185, 283, 110, 
	283, 110, 110, 110, 185, 284, 110, 284, 
	110, 110, 110, 185, 285, 110, 285, 110, 
	110, 110, 185, 286, 110, 286, 110, 110, 
	110, 185, 287, 110, 287, 110, 110, 110, 
	185, 288, 110, 288, 110, 110, 110, 185, 
	289, 110, 289, 110, 110, 110, 185, 290, 
	110, 290, 110, 110, 110, 185, 291, 110, 
	291, 110, 110, 110, 185, 292, 110, 292, 
	110, 110, 110, 185, 293, 110, 293, 110, 
	110, 110, 185, 294, 110, 294, 110, 110, 
	110, 185, 295, 110, 295, 110, 110, 110, 
	185, 296, 110, 296, 110, 110, 110, 185, 
	297, 110, 297, 110, 110, 110, 185, 298, 
	110, 298, 110, 110, 110, 185, 299, 110, 
	110, 110, 110, 185, 300, 110, 110, 110, 
	110, 185, 302, 303, 304, 305, 306, 110, 
	303, 304, 305, 306, 110, 110, 110, 301, 
	308, 110, 308, 110, 110, 110, 307, 309, 
	310, 110, 309, 310, 110, 110, 110, 185, 
	311, 110, 311, 110, 110, 110, 185, 313, 
	314, 110, 313, 314, 110, 110, 110, 312, 
	315, 110, 315, 110, 110, 110, 185, 316, 
	110, 316, 110, 110, 110, 185, 317, 110, 
	317, 110, 110, 110, 185, 318, 110, 318, 
	110, 110, 110, 185, 319, 110, 319, 110, 
	110, 110, 185, 320, 110, 320, 110, 110, 
	110, 185, 321, 110, 321, 110, 110, 110, 
	185, 322, 110, 322, 110, 110, 110, 185, 
	323, 110, 323, 110, 110, 110, 185, 325, 
	326, 110, 325, 326, 110, 110, 110, 324, 
	327, 110, 327, 110, 110, 110, 185, 328, 
	110, 328, 110, 110, 110, 185, 329, 110, 
	329, 110, 110, 110, 185, 331, 332, 333, 
	110, 332, 333, 110, 110, 110, 330, 334, 
	110, 334, 110, 110, 110, 185, 335, 110, 
	335, 110, 110, 110, 185, 337, 110, 337, 
	110, 110, 110, 336, 338, 110, 338, 110, 
	110, 110, 185, 339, 110, 339, 110, 110, 
	110, 185, 340, 110, 340, 110, 110, 110, 
	185, 341, 110, 341, 110, 110, 110, 185, 
	342, 110, 342, 110, 110, 110, 185, 343, 
	110, 343, 110, 110, 110, 185, 344, 110, 
	344, 110, 110, 110, 185, 346, 347, 348, 
	110, 347, 348, 110, 110, 110, 345, 349, 
	110, 349, 110, 110, 110, 185, 350, 110, 
	350, 110, 110, 110, 185, 352, 110, 110, 
	110, 110, 351, 354, 355, 356, 357, 358, 
	359, 360, 361, 362, 110, 354, 355, 356, 
	357, 358, 359, 360, 361, 362, 110, 110, 
	110, 353, 363, 110, 363, 110, 110, 110, 
	185, 364, 110, 364, 110, 110, 110, 185, 
	366, 367, 110, 366, 367, 110, 110, 110, 
	365, 368, 110, 368, 110, 110, 110, 185, 
	369, 110, 369, 110, 110, 110, 185, 370, 
	110, 370, 110, 110, 110, 185, 371, 110, 
	371, 110, 110, 110, 185, 372, 110, 372, 
	110, 110, 110, 185, 373, 110, 373, 110, 
	110, 110, 185, 375, 376, 377, 378, 379, 
	110, 376, 377, 378, 379, 110, 110, 110, 
	374, 381, 110, 381, 110, 110, 110, 380, 
	382, 110, 382, 110, 110, 110, 185, 383, 
	110, 383, 110, 110, 110, 185, 384, 110, 
	384, 110, 110, 110, 185, 386, 110, 386, 
	110, 110, 110, 385, 388, 110, 388, 110, 
	110, 110, 387, 389, 110, 389, 110, 110, 
	110, 185, 390, 110, 390, 110, 110, 110, 
	185, 391, 110, 391, 110, 110, 110, 185, 
	392, 393, 110, 392, 393, 110, 110, 110, 
	185, 395, 396, 110, 395, 396, 110, 110, 
	110, 394, 397, 110, 397, 110, 110, 110, 
	185, 398, 110, 398, 110, 110, 110, 185, 
	399, 110, 399, 110, 110, 110, 185, 400, 
	110, 400, 110, 110, 110, 185, 402, 403, 
	110, 402, 403, 110, 110, 110, 401, 405, 
	406, 110, 405, 406, 110, 110, 110, 404, 
	407, 408, 110, 407, 408, 110, 110, 110, 
	185, 410, 411, 412, 413, 414, 415, 110, 
	411, 412, 413, 414, 415, 110, 110, 110, 
	409, 417, 418, 419, 420, 110, 417, 418, 
	419, 420, 110, 110, 110, 416, 422, 423, 
	424, 110, 422, 423, 424, 110, 110, 110, 
	421, 426, 110, 426, 110, 110, 110, 425, 
	427, 110, 427, 110, 110, 110, 185, 429, 
	430, 431, 110, 429, 430, 431, 110, 110, 
	110, 428, 433, 434, 110, 433, 434, 110, 
	110, 110, 432, 435, 110, 435, 110, 110, 
	110, 185, 436, 110, 436, 110, 110, 110, 
	185, 437, 110, 437, 110, 110, 110, 185, 
	438, 110, 438, 110, 110, 110, 185, 439, 
	110, 439, 110, 110, 110, 185, 441, 110, 
	441, 110, 110, 110, 440, 442, 110, 442, 
	110, 110, 110, 185, 443, 110, 443, 110, 
	110, 110, 185, 444, 110, 444, 110, 110, 
	110, 185, 445, 446, 110, 445, 446, 110, 
	110, 110, 185, 447, 110, 447, 110, 110, 
	110, 185, 448, 449, 450, 110, 448, 449, 
	450, 110, 110, 110, 185, 451, 452, 110, 
	451, 452, 110, 110, 110, 185, 453, 110, 
	453, 110, 110, 110, 185, 454, 455, 110, 
	454, 455, 110, 110, 110, 185, 456, 110, 
	456, 110, 110, 110, 185, 457, 110, 457, 
	110, 110, 110, 185, 458, 459, 110, 458, 
	459, 110, 110, 110, 185, 460, 110, 460, 
	110, 110, 110, 185, 462, 463, 464, 465, 
	466, 110, 462, 463, 464, 465, 466, 110, 
	110, 110, 461, 467, 110, 467, 110, 110, 
	110, 185, 468, 110, 468, 110, 110, 110, 
	185, 469, 110, 469, 110, 110, 110, 185, 
	470, 110, 470, 110, 110, 110, 185, 471, 
	110, 471, 110, 110, 110, 185, 472, 110, 
	472, 110, 110, 110, 185, 474, 475, 476, 
	477, 478, 479, 480, 481, 110, 110, 110, 
	110, 473, 482, 110, 482, 110, 110, 110, 
	185, 483, 110, 483, 110, 110, 110, 185, 
	484, 110, 484, 110, 110, 110, 185, 485, 
	110, 485, 110, 110, 110, 185, 486, 110, 
	486, 110, 110, 110, 185, 487, 488, 489, 
	490, 491, 110, 487, 488, 489, 490, 491, 
	110, 110, 110, 185, 492, 493, 110, 492, 
	493, 110, 110, 110, 185, 494, 110, 494, 
	110, 110, 110, 185, 495, 110, 495, 110, 
	110, 110, 185, 496, 110, 496, 110, 110, 
	110, 185, 497, 110, 497, 110, 110, 110, 
	185, 498, 110, 498, 110, 110, 110, 185, 
	499, 500, 501, 110, 499, 500, 501, 110, 
	110, 110, 185, 503, 110, 503, 110, 110, 
	110, 502, 504, 505, 110, 504, 505, 110, 
	110, 110, 185, 506, 507, 110, 506, 507, 
	110, 110, 110, 185, 509, 110, 509, 110, 
	110, 110, 508, 510, 511, 110, 510, 511, 
	110, 110, 110, 185, 513, 110, 513, 110, 
	110, 110, 512, 514, 110, 514, 110, 110, 
	110, 185, 516, 517, 518, 110, 517, 518, 
	110, 110, 110, 515, 520, 110, 520, 110, 
	110, 110, 519, 521, 110, 521, 110, 110, 
	110, 185, 523, 524, 525, 526, 527, 110, 
	523, 524, 525, 526, 527, 110, 110, 110, 
	522, 528, 110, 528, 110, 110, 110, 185, 
	529, 110, 529, 110, 110, 110, 185, 530, 
	110, 530, 110, 110, 110, 185, 531, 110, 
	531, 110, 110, 110, 185, 532, 110, 532, 
	110, 110, 110, 185, 533, 110, 533, 110, 
	110, 110, 185, 534, 535, 110, 534, 535, 
	110, 110, 110, 185, 536, 110, 536, 110, 
	110, 110, 185, 537, 110, 537, 110, 110, 
	110, 185, 539, 110, 539, 110, 110, 110, 
	538, 540, 541, 110, 540, 541, 110, 110, 
	110, 185, 542, 110, 542, 110, 110, 110, 
	185, 543, 110, 543, 110, 110, 110, 185, 
	544, 110, 544, 110, 110, 110, 185, 545, 
	110, 545, 110, 110, 110, 185, 547, 548, 
	549, 550, 551, 110, 547, 548, 549, 550, 
	551, 110, 110, 110, 546, 552, 110, 552, 
	110, 110, 110, 185, 553, 110, 553, 110, 
	110, 110, 185, 554, 110, 554, 110, 110, 
	110, 185, 555, 110, 555, 110, 110, 110, 
	185, 556, 557, 110, 556, 557, 110, 110, 
	110, 185, 559, 560, 110, 559, 560, 110, 
	110, 110, 558, 562, 563, 564, 110, 562, 
	563, 564, 110, 110, 110, 561, 566, 110, 
	110, 110, 110, 565, 568, 110, 568, 110, 
	110, 110, 567, 570, 110, 110, 110, 110, 
	569, 572, 573, 574, 110, 572, 573, 574, 
	110, 110, 110, 571, 576, 110, 110, 110, 
	110, 575, 578, 110, 578, 110, 110, 110, 
	577, 580, 110, 110, 110, 110, 579, 581, 
	110, 581, 110, 110, 110, 185, 582, 583, 
	584, 585, 586, 587, 588, 589, 590, 110, 
	582, 583, 584, 585, 586, 587, 588, 589, 
	590, 110, 110, 110, 185, 591, 110, 591, 
	110, 110, 110, 185, 592, 110, 592, 110, 
	110, 110, 185, 594, 110, 110, 110, 110, 
	593, 595, 596, 110, 595, 596, 110, 110, 
	110, 185, 597, 110, 597, 110, 110, 110, 
	185, 598, 110, 598, 110, 110, 110, 185, 
	599, 110, 599, 110, 110, 110, 185, 600, 
	110, 600, 110, 110, 110, 185, 602, 603, 
	110, 602, 603, 110, 110, 110, 601, 604, 
	110, 604, 110, 110, 110, 185, 605, 110, 
	605, 110, 110, 110, 185, 606, 110, 606, 
	110, 110, 110, 185, 607, 608, 609, 610, 
	110, 607, 608, 609, 610, 110, 110, 110, 
	185, 611, 612, 110, 611, 612, 110, 110, 
	110, 185, 614, 615, 110, 614, 615, 110, 
	110, 110, 613, 616, 110, 616, 110, 110, 
	110, 185, 617, 110, 617, 110, 110, 110, 
	185, 618, 110, 618, 110, 110, 110, 185, 
	619, 110, 619, 110, 110, 110, 185, 621, 
	110, 621, 110, 110, 110, 620, 622, 110, 
	622, 110, 110, 110, 185, 623, 110, 623, 
	110, 110, 110, 185, 624, 110, 624, 110, 
	110, 110, 185, 625, 110, 625, 110, 110, 
	110, 185, 626, 110, 626, 110, 110, 110, 
	185, 627, 110, 627, 110, 110, 110, 185, 
	628, 110, 628, 110, 110, 110, 185, 629, 
	630, 110, 629, 630, 110, 110, 110, 185, 
	631, 110, 631, 110, 110, 110, 185, 632, 
	110, 632, 110, 110, 110, 185, 633, 110, 
	633, 110, 110, 110, 185, 635, 110, 635, 
	110, 110, 110, 634, 636, 110, 636, 110, 
	110, 110, 185, 637, 638, 110, 637, 638, 
	110, 110, 110, 185, 639, 640, 110, 639, 
	640, 110, 110, 110, 185, 641, 110, 641, 
	110, 110, 110, 185, 642, 110, 642, 110, 
	110, 110, 185, 643, 110, 643, 110, 110, 
	110, 185, 644, 110, 644, 110, 110, 110, 
	185, 645, 110, 645, 110, 110, 110, 185, 
	646, 110, 646, 110, 110, 110, 185, 648, 
	649, 650, 651, 652, 110, 648, 649, 650, 
	651, 652, 110, 110, 110, 647, 653, 110, 
	653, 110, 110, 110, 185, 654, 110, 654, 
	110, 110, 110, 185, 655, 110, 655, 110, 
	110, 110, 185, 656, 110, 656, 110, 110, 
	110, 185, 657, 110, 657, 110, 110, 110, 
	185, 658, 110, 658, 110, 110, 110, 185, 
	659, 110, 659, 110, 110, 110, 185, 660, 
	110, 660, 110, 110, 110, 185, 61, 61, 
	62, 62, 62, 661, 62, 62, 62, 62, 
	662, 178, 179, 180, 181, 182, 183, 184, 
	110, 180, 181, 182, 183, 184, 63, 63, 
	663, 64, 664, 665, 666, 667, 668, 134, 
	664, 665, 666, 667, 668, 110, 110, 110, 
	134, 134, 134, 177, 110, 63, 63, 64, 
	134, 110, 110, 110, 134, 134, 134, 0, 
	186, 110, 63, 63, 669, 64, 134, 110, 
	110, 110, 134, 134, 134, 185, 187, 188, 
	110, 187, 188, 63, 63, 64, 670, 671, 
	134, 670, 671, 110, 110, 110, 134, 134, 
	134, 185, 190, 110, 63, 63, 64, 134, 
	110, 110, 110, 134, 134, 134, 189, 191, 
	192, 110, 191, 192, 63, 63, 64, 672, 
	673, 134, 672, 673, 110, 110, 110, 134, 
	134, 134, 185, 193, 110, 193, 63, 63, 
	64, 674, 134, 674, 110, 110, 110, 134, 
	134, 134, 185, 194, 110, 194, 63, 63, 
	64, 675, 134, 675, 110, 110, 110, 134, 
	134, 134, 185, 195, 110, 195, 63, 63, 
	64, 676, 134, 676, 110, 110, 110, 134, 
	134, 134, 185, 196, 110, 196, 63, 63, 
	64, 677, 134, 677, 110, 110, 110, 134, 
	134, 134, 185, 197, 110, 197, 63, 63, 
	64, 678, 134, 678, 110, 110, 110, 134, 
	134, 134, 185, 198, 110, 198, 63, 63, 
	64, 679, 134, 679, 110, 110, 110, 134, 
	134, 134, 185, 199, 110, 199, 63, 63, 
	64, 680, 134, 680, 110, 110, 110, 134, 
	134, 134, 185, 201, 202, 203, 204, 205, 
	206, 110, 202, 203, 204, 205, 206, 63, 
	63, 64, 681, 682, 683, 684, 685, 134, 
	681, 682, 683, 684, 685, 110, 110, 110, 
	134, 134, 134, 200, 208, 110, 63, 63, 
	64, 134, 110, 110, 110, 134, 134, 134, 
	207, 209, 210, 110, 209, 210, 63, 63, 
	64, 686, 687, 134, 686, 687, 110, 110, 
	110, 134, 134, 134, 185, 211, 110, 211, 
	63, 63, 64, 688, 134, 688, 110, 110, 
	110, 134, 134, 134, 185, 212, 110, 212, 
	63, 63, 64, 689, 134, 689, 110, 110, 
	110, 134, 134, 134, 185, 213, 110, 213, 
	63, 63, 64, 690, 134, 690, 110, 110, 
	110, 134, 134, 134, 185, 214, 110, 214, 
	63, 63, 64, 691, 134, 691, 110, 110, 
	110, 134, 134, 134, 185, 215, 110, 215, 
	63, 63, 64, 692, 134, 692, 110, 110, 
	110, 134, 134, 134, 185, 216, 110, 216, 
	63, 63, 64, 693, 134, 693, 110, 110, 
	110, 134, 134, 134, 185, 217, 110, 217, 
	63, 63, 64, 694, 134, 694, 110, 110, 
	110, 134, 134, 134, 185, 218, 219, 110, 
	218, 219, 63, 63, 64, 695, 696, 134, 
	695, 696, 110, 110, 110, 134, 134, 134, 
	185, 220, 110, 220, 63, 63, 64, 697, 
	134, 697, 110, 110, 110, 134, 134, 134, 
	185, 221, 222, 223, 110, 221, 222, 223, 
	63, 63, 64, 698, 699, 700, 134, 698, 
	699, 700, 110, 110, 110, 134, 134, 134, 
	185, 225, 226, 227, 228, 229, 230, 226, 
	227, 228, 229, 63, 63, 64, 701, 702, 
	703, 704, 705, 701, 702, 703, 704, 110, 
	110, 110, 134, 134, 134, 224, 231, 110, 
	231, 63, 63, 64, 706, 134, 706, 110, 
	110, 110, 134, 134, 134, 185, 232, 110, 
	232, 63, 63, 64, 707, 134, 707, 110, 
	110, 110, 134, 134, 134, 185, 234, 63, 
	63, 64, 708, 110, 110, 110, 134, 134, 
	134, 233, 235, 236, 110, 235, 236, 63, 
	63, 64, 709, 710, 134, 709, 710, 110, 
	110, 110, 134, 134, 134, 185, 237, 110, 
	237, 63, 63, 64, 711, 134, 711, 110, 
	110, 110, 134, 134, 134, 185, 238, 110, 
	238, 63, 63, 64, 712, 134, 712, 110, 
	110, 110, 134, 134, 134, 185, 239, 110, 
	239, 63, 63, 64, 713, 134, 713, 110, 
	110, 110, 134, 134, 134, 185, 240, 110, 
	240, 63, 63, 64, 714, 134, 714, 110, 
	110, 110, 134, 134, 134, 185, 242, 110, 
	63, 63, 64, 134, 110, 110, 110, 134, 
	134, 134, 241, 244, 245, 246, 110, 244, 
	245, 246, 63, 63, 64, 715, 716, 717, 
	134, 715, 716, 717, 110, 110, 110, 134, 
	134, 134, 243, 248, 110, 248, 63, 63, 
	64, 718, 134, 718, 110, 110, 110, 134, 
	134, 134, 247, 250, 110, 250, 63, 63, 
	64, 719, 134, 719, 110, 110, 110, 134, 
	134, 134, 249, 251, 110, 63, 63, 64, 
	134, 110, 110, 110, 134, 134, 134, 185, 
	252, 110, 252, 63, 63, 64, 720, 134, 
	720, 110, 110, 110, 134, 134, 134, 185, 
	253, 110, 253, 63, 63, 64, 721, 134, 
	721, 110, 110, 110, 134, 134, 134, 185, 
	254, 110, 254, 63, 63, 64, 722, 134, 
	722, 110, 110, 110, 134, 134, 134, 185, 
	255, 110, 255, 63, 63, 64, 723, 134, 
	723, 110, 110, 110, 134, 134, 134, 185, 
	257, 258, 259, 260, 261, 262, 263, 110, 
	258, 259, 260, 261, 262, 263, 63, 63, 
	64, 724, 725, 726, 727, 728, 729, 134, 
	724, 725, 726, 727, 728, 729, 110, 110, 
	110, 134, 134, 134, 256, 264, 110, 264, 
	63, 63, 64, 730, 134, 730, 110, 110, 
	110, 134, 134, 134, 185, 266, 267, 268, 
	269, 270, 110, 267, 268, 269, 270, 63, 
	63, 64, 731, 732, 733, 734, 134, 731, 
	732, 733, 734, 110, 110, 110, 134, 134, 
	134, 265, 271, 272, 273, 274, 275, 276, 
	277, 278, 279, 280, 110, 271, 272, 273, 
	274, 275, 276, 277, 278, 279, 280, 63, 
	63, 64, 735, 736, 737, 738, 739, 740, 
	741, 742, 743, 744, 134, 735, 736, 737, 
	738, 739, 740, 741, 742, 743, 744, 110, 
	110, 110, 134, 134, 134, 185, 281, 110, 
	281, 63, 63, 64, 745, 134, 745, 110, 
	110, 110, 134, 134, 134, 185, 282, 110, 
	282, 63, 63, 64, 746, 134, 746, 110, 
	110, 110, 134, 134, 134, 185, 283, 110, 
	283, 63, 63, 64, 747, 134, 747, 110, 
	110, 110, 134, 134, 134, 185, 284, 110, 
	284, 63, 63, 64, 748, 134, 748, 110, 
	110, 110, 134, 134, 134, 185, 285, 110, 
	285, 63, 63, 64, 749, 134, 749, 110, 
	110, 110, 134, 134, 134, 185, 286, 110, 
	286, 63, 63, 64, 750, 134, 750, 110, 
	110, 110, 134, 134, 134, 185, 287, 110, 
	287, 63, 63, 64, 751, 134, 751, 110, 
	110, 110, 134, 134, 134, 185, 288, 110, 
	288, 63, 63, 64, 752, 134, 752, 110, 
	110, 110, 134, 134, 134, 185, 289, 110, 
	289, 63, 63, 64, 753, 134, 753, 110, 
	110, 110, 134, 134, 134, 185, 290, 110, 
	290, 63, 63, 64, 754, 134, 754, 110, 
	110, 110, 134, 134, 134, 185, 291, 110, 
	291, 63, 63, 64, 755, 134, 755, 110, 
	110, 110, 134, 134, 134, 185, 292, 110, 
	292, 63, 63, 64, 756, 134, 756, 110, 
	110, 110, 134, 134, 134, 185, 293, 110, 
	293, 63, 63, 64, 757, 134, 757, 110, 
	110, 110, 134, 134, 134, 185, 294, 110, 
	294, 63, 63, 64, 758, 134, 758, 110, 
	110, 110, 134, 134, 134, 185, 295, 110, 
	295, 63, 63, 64, 759, 134, 759, 110, 
	110, 110, 134, 134, 134, 185, 296, 110, 
	296, 63, 63, 64, 760, 134, 760, 110, 
	110, 110, 134, 134, 134, 185, 297, 110, 
	297, 63, 63, 64, 761, 134, 761, 110, 
	110, 110, 134, 134, 134, 185, 298, 110, 
	298, 63, 63, 64, 762, 134, 762, 110, 
	110, 110, 134, 134, 134, 185, 299, 110, 
	63, 63, 64, 134, 110, 110, 110, 134, 
	134, 134, 185, 300, 110, 63, 63, 64, 
	134, 110, 110, 110, 134, 134, 134, 185, 
	302, 303, 304, 305, 306, 110, 303, 304, 
	305, 306, 63, 63, 64, 763, 764, 765, 
	766, 134, 763, 764, 765, 766, 110, 110, 
	110, 134, 134, 134, 301, 308, 110, 308, 
	63, 63, 64, 767, 134, 767, 110, 110, 
	110, 134, 134, 134, 307, 309, 310, 110, 
	309, 310, 63, 63, 64, 768, 769, 134, 
	768, 769, 110, 110, 110, 134, 134, 134, 
	185, 311, 110, 311, 63, 63, 64, 770, 
	134, 770, 110, 110, 110, 134, 134, 134, 
	185, 313, 314, 110, 313, 314, 63, 63, 
	64, 771, 772, 134, 771, 772, 110, 110, 
	110, 134, 134, 134, 312, 315, 110, 315, 
	63, 63, 64, 773, 134, 773, 110, 110, 
	110, 134, 134, 134, 185, 316, 110, 316, 
	63, 63, 64, 774, 134, 774, 110, 110, 
	110, 134, 134, 134, 185, 317, 110, 317, 
	63, 63, 64, 775, 134, 775, 110, 110, 
	110, 134, 134, 134, 185, 318, 110, 318, 
	63, 63, 64, 776, 134, 776, 110, 110, 
	110, 134, 134, 134, 185, 319, 110, 319, 
	63, 63, 64, 777, 134, 777, 110, 110, 
	110, 134, 134, 134, 185, 320, 110, 320, 
	63, 63, 64, 778, 134, 778, 110, 110, 
	110, 134, 134, 134, 185, 321, 110, 321, 
	63, 63, 64, 779, 134, 779, 110, 110, 
	110, 134, 134, 134, 185, 322, 110, 322, 
	63, 63, 64, 780, 134, 780, 110, 110, 
	110, 134, 134, 134, 185, 323, 110, 323, 
	63, 63, 64, 781, 134, 781, 110, 110, 
	110, 134, 134, 134, 185, 325, 326, 110, 
	325, 326, 63, 63, 64, 782, 783, 134, 
	782, 783, 110, 110, 110, 134, 134, 134, 
	324, 327, 110, 327, 63, 63, 64, 784, 
	134, 784, 110, 110, 110, 134, 134, 134, 
	185, 328, 110, 328, 63, 63, 64, 785, 
	134, 785, 110, 110, 110, 134, 134, 134, 
	185, 329, 110, 329, 63, 63, 64, 786, 
	134, 786, 110, 110, 110, 134, 134, 134, 
	185, 331, 332, 333, 110, 332, 333, 63, 
	63, 64, 787, 788, 134, 787, 788, 110, 
	110, 110, 134, 134, 134, 330, 334, 110, 
	334, 63, 63, 64, 789, 134, 789, 110, 
	110, 110, 134, 134, 134, 185, 335, 110, 
	335, 63, 63, 64, 790, 134, 790, 110, 
	110, 110, 134, 134, 134, 185, 337, 110, 
	337, 63, 63, 64, 791, 134, 791, 110, 
	110, 110, 134, 134, 134, 336, 338, 110, 
	338, 63, 63, 64, 792, 134, 792, 110, 
	110, 110, 134, 134, 134, 185, 339, 110, 
	339, 63, 63, 64, 793, 134, 793, 110, 
	110, 110, 134, 134, 134, 185, 340, 110, 
	340, 63, 63, 64, 794, 134, 794, 110, 
	110, 110, 134, 134, 134, 185, 341, 110, 
	341, 63, 63, 64, 795, 134, 795, 110, 
	110, 110, 134, 134, 134, 185, 342, 110, 
	342, 63, 63, 64, 796, 134, 796, 110, 
	110, 110, 134, 134, 134, 185, 343, 110, 
	343, 63, 63, 64, 797, 134, 797, 110, 
	110, 110, 134, 134, 134, 185, 344, 110, 
	344, 63, 63, 64, 798, 134, 798, 110, 
	110, 110, 134, 134, 134, 185, 346, 347, 
	348, 110, 347, 348, 63, 63, 64, 799, 
	800, 134, 799, 800, 110, 110, 110, 134, 
	134, 134, 345, 349, 110, 349, 63, 63, 
	64, 801, 134, 801, 110, 110, 110, 134, 
	134, 134, 185, 350, 110, 350, 63, 63, 
	64, 802, 134, 802, 110, 110, 110, 134, 
	134, 134, 185, 352, 110, 63, 63, 64, 
	134, 110, 110, 110, 134, 134, 134, 351, 
	354, 355, 356, 357, 358, 359, 360, 361, 
	362, 110, 354, 355, 356, 357, 358, 359, 
	360, 361, 362, 63, 63, 64, 803, 804, 
	805, 806, 807, 808, 809, 810, 811, 134, 
	803, 804, 805, 806, 807, 808, 809, 810, 
	811, 110, 110, 110, 134, 134, 134, 353, 
	363, 110, 363, 63, 63, 64, 812, 134, 
	812, 110, 110, 110, 134, 134, 134, 185, 
	364, 110, 364, 63, 63, 64, 813, 134, 
	813, 110, 110, 110, 134, 134, 134, 185, 
	366, 367, 110, 366, 367, 63, 63, 64, 
	814, 815, 134, 814, 815, 110, 110, 110, 
	134, 134, 134, 365, 368, 110, 368, 63, 
	63, 64, 816, 134, 816, 110, 110, 110, 
	134, 134, 134, 185, 369, 110, 369, 63, 
	63, 64, 817, 134, 817, 110, 110, 110, 
	134, 134, 134, 185, 370, 110, 370, 63, 
	63, 64, 818, 134, 818, 110, 110, 110, 
	134, 134, 134, 185, 371, 110, 371, 63, 
	63, 64, 819, 134, 819, 110, 110, 110, 
	134, 134, 134, 185, 372, 110, 372, 63, 
	63, 64, 820, 134, 820, 110, 110, 110, 
	134, 134, 134, 185, 373, 110, 373, 63, 
	63, 64, 821, 134, 821, 110, 110, 110, 
	134, 134, 134, 185, 375, 376, 377, 378, 
	379, 110, 376, 377, 378, 379, 63, 63, 
	822, 64, 823, 824, 825, 826, 134, 823, 
	824, 825, 826, 110, 110, 110, 134, 134, 
	134, 374, 381, 110, 381, 63, 63, 64, 
	827, 134, 827, 110, 110, 110, 134, 134, 
	134, 380, 382, 110, 382, 63, 63, 64, 
	828, 134, 828, 110, 110, 110, 134, 134, 
	134, 185, 383, 110, 383, 63, 63, 64, 
	829, 134, 829, 110, 110, 110, 134, 134, 
	134, 185, 384, 110, 384, 63, 63, 64, 
	830, 134, 830, 110, 110, 110, 134, 134, 
	134, 185, 386, 110, 386, 63, 63, 64, 
	831, 134, 831, 110, 110, 110, 134, 134, 
	134, 385, 388, 110, 388, 63, 63, 64, 
	832, 134, 832, 110, 110, 110, 134, 134, 
	134, 387, 389, 110, 389, 63, 63, 64, 
	833, 134, 833, 110, 110, 110, 134, 134, 
	134, 185, 390, 110, 390, 63, 63, 64, 
	834, 134, 834, 110, 110, 110, 134, 134, 
	134, 185, 391, 110, 391, 63, 63, 64, 
	835, 134, 835, 110, 110, 110, 134, 134, 
	134, 185, 392, 393, 110, 392, 393, 63, 
	63, 64, 836, 837, 134, 836, 837, 110, 
	110, 110, 134, 134, 134, 185, 395, 396, 
	110, 395, 396, 63, 63, 64, 838, 839, 
	134, 838, 839, 110, 110, 110, 134, 134, 
	134, 394, 397, 110, 397, 63, 63, 64, 
	840, 134, 840, 110, 110, 110, 134, 134, 
	134, 185, 398, 110, 398, 63, 63, 64, 
	841, 134, 841, 110, 110, 110, 134, 134, 
	134, 185, 399, 110, 399, 63, 63, 64, 
	842, 134, 842, 110, 110, 110, 134, 134, 
	134, 185, 400, 110, 400, 63, 63, 64, 
	843, 134, 843, 110, 110, 110, 134, 134, 
	134, 185, 402, 403, 110, 402, 403, 63, 
	63, 64, 844, 845, 134, 844, 845, 110, 
	110, 110, 134, 134, 134, 401, 405, 406, 
	110, 405, 406, 63, 63, 64, 846, 847, 
	134, 846, 847, 110, 110, 110, 134, 134, 
	134, 404, 407, 408, 110, 407, 408, 63, 
	63, 64, 848, 849, 134, 848, 849, 110, 
	110, 110, 134, 134, 134, 185, 410, 411, 
	412, 413, 414, 415, 110, 411, 412, 413, 
	414, 415, 63, 63, 64, 850, 851, 852, 
	853, 854, 134, 850, 851, 852, 853, 854, 
	110, 110, 110, 134, 134, 134, 409, 417, 
	418, 419, 420, 110, 417, 418, 419, 420, 
	63, 63, 64, 855, 856, 857, 858, 134, 
	855, 856, 857, 858, 110, 110, 110, 134, 
	134, 134, 416, 422, 423, 424, 110, 422, 
	423, 424, 63, 63, 64, 859, 860, 861, 
	134, 859, 860, 861, 110, 110, 110, 134, 
	134, 134, 421, 426, 110, 426, 63, 63, 
	64, 862, 134, 862, 110, 110, 110, 134, 
	134, 134, 425, 427, 110, 427, 63, 63, 
	64, 863, 134, 863, 110, 110, 110, 134, 
	134, 134, 185, 429, 430, 431, 110, 429, 
	430, 431, 63, 63, 64, 864, 865, 866, 
	134, 864, 865, 866, 110, 110, 110, 134, 
	134, 134, 428, 433, 434, 110, 433, 434, 
	63, 63, 64, 867, 868, 134, 867, 868, 
	110, 110, 110, 134, 134, 134, 432, 435, 
	110, 435, 63, 63, 64, 869, 134, 869, 
	110, 110, 110, 134, 134, 134, 185, 436, 
	110, 436, 63, 63, 64, 870, 134, 870, 
	110, 110, 110, 134, 134, 134, 185, 437, 
	110, 437, 63, 63, 64, 871, 134, 871, 
	110, 110, 110, 134, 134, 134, 185, 438, 
	110, 438, 63, 63, 64, 872, 134, 872, 
	110, 110, 110, 134, 134, 134, 185, 439, 
	110, 439, 63, 63, 64, 873, 134, 873, 
	110, 110, 110, 134, 134, 134, 185, 441, 
	110, 441, 63, 63, 64, 874, 134, 874, 
	110, 110, 110, 134, 134, 134, 440, 442, 
	110, 442, 63, 63, 64, 875, 134, 875, 
	110, 110, 110, 134, 134, 134, 185, 443, 
	110, 443, 63, 63, 64, 876, 134, 876, 
	110, 110, 110, 134, 134, 134, 185, 444, 
	110, 444, 63, 63, 64, 877, 134, 877, 
	110, 110, 110, 134, 134, 134, 185, 445, 
	446, 110, 445, 446, 63, 63, 64, 878, 
	879, 134, 878, 879, 110, 110, 110, 134, 
	134, 134, 185, 447, 110, 447, 63, 63, 
	64, 880, 134, 880, 110, 110, 110, 134, 
	134, 134, 185, 448, 449, 450, 110, 448, 
	449, 450, 63, 63, 64, 881, 882, 883, 
	134, 881, 882, 883, 110, 110, 110, 134, 
	134, 134, 185, 451, 452, 110, 451, 452, 
	63, 63, 64, 884, 885, 134, 884, 885, 
	110, 110, 110, 134, 134, 134, 185, 453, 
	110, 453, 63, 63, 64, 886, 134, 886, 
	110, 110, 110, 134, 134, 134, 185, 454, 
	455, 110, 454, 455, 63, 63, 64, 887, 
	888, 134, 887, 888, 110, 110, 110, 134, 
	134, 134, 185, 456, 110, 456, 63, 63, 
	64, 889, 134, 889, 110, 110, 110, 134, 
	134, 134, 185, 457, 110, 457, 63, 63, 
	64, 890, 134, 890, 110, 110, 110, 134, 
	134, 134, 185, 458, 459, 110, 458, 459, 
	63, 63, 64, 891, 892, 134, 891, 892, 
	110, 110, 110, 134, 134, 134, 185, 460, 
	110, 460, 63, 63, 64, 893, 134, 893, 
	110, 110, 110, 134, 134, 134, 185, 462, 
	463, 464, 465, 466, 110, 462, 463, 464, 
	465, 466, 63, 63, 64, 894, 895, 896, 
	897, 898, 134, 894, 895, 896, 897, 898, 
	110, 110, 110, 134, 134, 134, 461, 467, 
	110, 467, 63, 63, 64, 899, 134, 899, 
	110, 110, 110, 134, 134, 134, 185, 468, 
	110, 468, 63, 63, 64, 900, 134, 900, 
	110, 110, 110, 134, 134, 134, 185, 469, 
	110, 469, 63, 63, 64, 901, 134, 901, 
	110, 110, 110, 134, 134, 134, 185, 470, 
	110, 470, 63, 63, 64, 902, 134, 902, 
	110, 110, 110, 134, 134, 134, 185, 471, 
	110, 471, 63, 63, 64, 903, 134, 903, 
	110, 110, 110, 134, 134, 134, 185, 472, 
	110, 472, 63, 63, 64, 904, 134, 904, 
	110, 110, 110, 134, 134, 134, 185, 474, 
	475, 476, 477, 478, 479, 480, 481, 110, 
	63, 63, 905, 906, 907, 908, 909, 910, 
	911, 912, 64, 134, 110, 110, 110, 134, 
	134, 134, 473, 482, 110, 482, 63, 63, 
	64, 913, 134, 913, 110, 110, 110, 134, 
	134, 134, 185, 483, 110, 483, 63, 63, 
	64, 914, 134, 914, 110, 110, 110, 134, 
	134, 134, 185, 484, 110, 484, 63, 63, 
	64, 915, 134, 915, 110, 110, 110, 134, 
	134, 134, 185, 485, 110, 485, 63, 63, 
	64, 916, 134, 916, 110, 110, 110, 134, 
	134, 134, 185, 486, 110, 486, 63, 63, 
	64, 917, 134, 917, 110, 110, 110, 134, 
	134, 134, 185, 487, 488, 489, 490, 491, 
	110, 487, 488, 489, 490, 491, 63, 63, 
	64, 918, 919, 920, 921, 922, 134, 918, 
	919, 920, 921, 922, 110, 110, 110, 134, 
	134, 134, 185, 492, 493, 110, 492, 493, 
	63, 63, 64, 923, 924, 134, 923, 924, 
	110, 110, 110, 134, 134, 134, 185, 494, 
	110, 494, 63, 63, 64, 925, 134, 925, 
	110, 110, 110, 134, 134, 134, 185, 495, 
	110, 495, 63, 63, 64, 926, 134, 926, 
	110, 110, 110, 134, 134, 134, 185, 496, 
	110, 496, 63, 63, 64, 927, 134, 927, 
	110, 110, 110, 134, 134, 134, 185, 497, 
	110, 497, 63, 63, 64, 928, 134, 928, 
	110, 110, 110, 134, 134, 134, 185, 498, 
	110, 498, 63, 63, 64, 929, 134, 929, 
	110, 110, 110, 134, 134, 134, 185, 499, 
	500, 501, 110, 499, 500, 501, 63, 63, 
	64, 930, 931, 932, 134, 930, 931, 932, 
	110, 110, 110, 134, 134, 134, 185, 503, 
	110, 503, 63, 63, 64, 933, 134, 933, 
	110, 110, 110, 134, 134, 134, 502, 504, 
	505, 110, 504, 505, 63, 63, 64, 934, 
	935, 134, 934, 935, 110, 110, 110, 134, 
	134, 134, 185, 506, 507, 110, 506, 507, 
	63, 63, 64, 936, 937, 134, 936, 937, 
	110, 110, 110, 134, 134, 134, 185, 509, 
	110, 509, 63, 63, 64, 938, 134, 938, 
	110, 110, 110, 134, 134, 134, 508, 510, 
	511, 110, 510, 511, 63, 63, 64, 939, 
	940, 134, 939, 940, 110, 110, 110, 134, 
	134, 134, 185, 513, 110, 513, 63, 63, 
	64, 941, 134, 941, 110, 110, 110, 134, 
	134, 134, 512, 514, 110, 514, 63, 63, 
	64, 942, 134, 942, 110, 110, 110, 134, 
	134, 134, 185, 516, 517, 518, 110, 517, 
	518, 63, 63, 943, 64, 944, 945, 134, 
	944, 945, 110, 110, 110, 134, 134, 134, 
	515, 520, 110, 520, 63, 63, 64, 946, 
	134, 946, 110, 110, 110, 134, 134, 134, 
	519, 521, 110, 521, 63, 63, 64, 947, 
	134, 947, 110, 110, 110, 134, 134, 134, 
	185, 523, 524, 525, 526, 527, 110, 523, 
	524, 525, 526, 527, 63, 63, 64, 948, 
	949, 950, 951, 952, 134, 948, 949, 950, 
	951, 952, 110, 110, 110, 134, 134, 134, 
	522, 528, 110, 528, 63, 63, 64, 953, 
	134, 953, 110, 110, 110, 134, 134, 134, 
	185, 529, 110, 529, 63, 63, 64, 954, 
	134, 954, 110, 110, 110, 134, 134, 134, 
	185, 530, 110, 530, 63, 63, 64, 955, 
	134, 955, 110, 110, 110, 134, 134, 134, 
	185, 531, 110, 531, 63, 63, 64, 956, 
	134, 956, 110, 110, 110, 134, 134, 134, 
	185, 532, 110, 532, 63, 63, 64, 957, 
	134, 957, 110, 110, 110, 134, 134, 134, 
	185, 533, 110, 533, 63, 63, 64, 958, 
	134, 958, 110, 110, 110, 134, 134, 134, 
	185, 534, 535, 110, 534, 535, 63, 63, 
	64, 959, 960, 134, 959, 960, 110, 110, 
	110, 134, 134, 134, 185, 536, 110, 536, 
	63, 63, 64, 961, 134, 961, 110, 110, 
	110, 134, 134, 134, 185, 537, 110, 537, 
	63, 63, 64, 962, 134, 962, 110, 110, 
	110, 134, 134, 134, 185, 539, 110, 539, 
	63, 63, 64, 963, 134, 963, 110, 110, 
	110, 134, 134, 134, 538, 540, 541, 110, 
	540, 541, 63, 63, 64, 964, 965, 134, 
	964, 965, 110, 110, 110, 134, 134, 134, 
	185, 542, 110, 542, 63, 63, 64, 966, 
	134, 966, 110, 110, 110, 134, 134, 134, 
	185, 543, 110, 543, 63, 63, 64, 967, 
	134, 967, 110, 110, 110, 134, 134, 134, 
	185, 544, 110, 544, 63, 63, 64, 968, 
	134, 968, 110, 110, 110, 134, 134, 134, 
	185, 545, 110, 545, 63, 63, 64, 969, 
	134, 969, 110, 110, 110, 134, 134, 134, 
	185, 547, 548, 549, 550, 551, 110, 547, 
	548, 549, 550, 551, 63, 63, 64, 970, 
	971, 972, 973, 974, 134, 970, 971, 972, 
	973, 974, 110, 110, 110, 134, 134, 134, 
	546, 552, 110, 552, 63, 63, 64, 975, 
	134, 975, 110, 110, 110, 134, 134, 134, 
	185, 553, 110, 553, 63, 63, 64, 976, 
	134, 976, 110, 110, 110, 134, 134, 134, 
	185, 554, 110, 554, 63, 63, 64, 977, 
	134, 977, 110, 110, 110, 134, 134, 134, 
	185, 555, 110, 555, 63, 63, 64, 978, 
	134, 978, 110, 110, 110, 134, 134, 134, 
	185, 556, 557, 110, 556, 557, 63, 63, 
	64, 979, 980, 134, 979, 980, 110, 110, 
	110, 134, 134, 134, 185, 559, 560, 110, 
	559, 560, 63, 63, 64, 981, 982, 134, 
	981, 982, 110, 110, 110, 134, 134, 134, 
	558, 562, 563, 564, 110, 562, 563, 564, 
	63, 63, 64, 983, 984, 985, 134, 983, 
	984, 985, 110, 110, 110, 134, 134, 134, 
	561, 566, 110, 63, 63, 64, 134, 110, 
	110, 110, 134, 134, 134, 565, 568, 110, 
	568, 63, 63, 64, 986, 134, 986, 110, 
	110, 110, 134, 134, 134, 567, 570, 110, 
	63, 63, 64, 134, 110, 110, 110, 134, 
	134, 134, 569, 572, 573, 574, 110, 572, 
	573, 574, 63, 63, 64, 987, 988, 989, 
	134, 987, 988, 989, 110, 110, 110, 134, 
	134, 134, 571, 576, 110, 63, 63, 64, 
	134, 110, 110, 110, 134, 134, 134, 575, 
	578, 110, 578, 63, 63, 64, 990, 134, 
	990, 110, 110, 110, 134, 134, 134, 577, 
	580, 110, 63, 63, 64, 134, 110, 110, 
	110, 134, 134, 134, 579, 581, 110, 581, 
	63, 63, 64, 991, 134, 991, 110, 110, 
	110, 134, 134, 134, 185, 582, 583, 584, 
	585, 586, 587, 588, 589, 590, 110, 582, 
	583, 584, 585, 586, 587, 588, 589, 590, 
	63, 63, 64, 992, 993, 994, 995, 996, 
	997, 998, 999, 1000, 134, 992, 993, 994, 
	995, 996, 997, 998, 999, 1000, 110, 110, 
	110, 134, 134, 134, 185, 591, 110, 591, 
	63, 63, 64, 1001, 134, 1001, 110, 110, 
	110, 134, 134, 134, 185, 592, 110, 592, 
	63, 63, 64, 1002, 134, 1002, 110, 110, 
	110, 134, 134, 134, 185, 594, 110, 63, 
	63, 64, 134, 110, 110, 110, 134, 134, 
	134, 593, 595, 596, 110, 595, 596, 63, 
	63, 64, 1003, 1004, 134, 1003, 1004, 110, 
	110, 110, 134, 134, 134, 185, 597, 110, 
	597, 63, 63, 64, 1005, 134, 1005, 110, 
	110, 110, 134, 134, 134, 185, 598, 110, 
	598, 63, 63, 64, 1006, 134, 1006, 110, 
	110, 110, 134, 134, 134, 185, 599, 110, 
	599, 63, 63, 64, 1007, 134, 1007, 110, 
	110, 110, 134, 134, 134, 185, 600, 110, 
	600, 63, 63, 64, 1008, 134, 1008, 110, 
	110, 110, 134, 134, 134, 185, 602, 603, 
	110, 602, 603, 63, 63, 64, 1009, 1010, 
	134, 1009, 1010, 110, 110, 110, 134, 134, 
	134, 601, 604, 110, 604, 63, 63, 64, 
	1011, 134, 1011, 110, 110, 110, 134, 134, 
	134, 185, 605, 110, 605, 63, 63, 64, 
	1012, 134, 1012, 110, 110, 110, 134, 134, 
	134, 185, 606, 110, 606, 63, 63, 64, 
	1013, 134, 1013, 110, 110, 110, 134, 134, 
	134, 185, 607, 608, 609, 610, 110, 607, 
	608, 609, 610, 63, 63, 64, 1014, 1015, 
	1016, 1017, 134, 1014, 1015, 1016, 1017, 110, 
	110, 110, 134, 134, 134, 185, 611, 612, 
	110, 611, 612, 63, 63, 64, 1018, 1019, 
	134, 1018, 1019, 110, 110, 110, 134, 134, 
	134, 185, 614, 615, 110, 614, 615, 63, 
	63, 64, 1020, 1021, 134, 1020, 1021, 110, 
	110, 110, 134, 134, 134, 613, 616, 110, 
	616, 63, 63, 64, 1022, 134, 1022, 110, 
	110, 110, 134, 134, 134, 185, 617, 110, 
	617, 63, 63, 64, 1023, 134, 1023, 110, 
	110, 110, 134, 134, 134, 185, 618, 110, 
	618, 63, 63, 64, 1024, 134, 1024, 110, 
	110, 110, 134, 134, 134, 185, 619, 110, 
	619, 63, 63, 64, 1025, 134, 1025, 110, 
	110, 110, 134, 134, 134, 185, 621, 110, 
	621, 63, 63, 64, 1026, 134, 1026, 110, 
	110, 110, 134, 134, 134, 620, 622, 110, 
	622, 63, 63, 64, 1027, 134, 1027, 110, 
	110, 110, 134, 134, 134, 185, 623, 110, 
	623, 63, 63, 64, 1028, 134, 1028, 110, 
	110, 110, 134, 134, 134, 185, 624, 110, 
	624, 63, 63, 64, 1029, 134, 1029, 110, 
	110, 110, 134, 134, 134, 185, 625, 110, 
	625, 63, 63, 64, 1030, 134, 1030, 110, 
	110, 110, 134, 134, 134, 185, 626, 110, 
	626, 63, 63, 64, 1031, 134, 1031, 110, 
	110, 110, 134, 134, 134, 185, 627, 110, 
	627, 63, 63, 64, 1032, 134, 1032, 110, 
	110, 110, 134, 134, 134, 185, 628, 110, 
	628, 63, 63, 64, 1033, 134, 1033, 110, 
	110, 110, 134, 134, 134, 185, 629, 630, 
	110, 629, 630, 63, 63, 64, 1034, 1035, 
	134, 1034, 1035, 110, 110, 110, 134, 134, 
	134, 185, 631, 110, 631, 63, 63, 64, 
	1036, 134, 1036, 110, 110, 110, 134, 134, 
	134, 185, 632, 110, 632, 63, 63, 64, 
	1037, 134, 1037, 110, 110, 110, 134, 134, 
	134, 185, 633, 110, 633, 63, 63, 64, 
	1038, 134, 1038, 110, 110, 110, 134, 134, 
	134, 185, 635, 110, 635, 63, 63, 64, 
	1039, 134, 1039, 110, 110, 110, 134, 134, 
	134, 634, 636, 110, 636, 63, 63, 64, 
	1040, 134, 1040, 110, 110, 110, 134, 134, 
	134, 185, 637, 638, 110, 637, 638, 63, 
	63, 64, 1041, 1042, 134, 1041, 1042, 110, 
	110, 110, 134, 134, 134, 185, 639, 640, 
	110, 639, 640, 63, 63, 64, 1043, 1044, 
	134, 1043, 1044, 110, 110, 110, 134, 134, 
	134, 185, 641, 110, 641, 63, 63, 64, 
	1045, 134, 1045, 110, 110, 110, 134, 134, 
	134, 185, 642, 110, 642, 63, 63, 64, 
	1046, 134, 1046, 110, 110, 110, 134, 134, 
	134, 185, 643, 110, 643, 63, 63, 64, 
	1047, 134, 1047, 110, 110, 110, 134, 134, 
	134, 185, 644, 110, 644, 63, 63, 64, 
	1048, 134, 1048, 110, 110, 110, 134, 134, 
	134, 185, 645, 110, 645, 63, 63, 64, 
	1049, 134, 1049, 110, 110, 110, 134, 134, 
	134, 185, 646, 110, 646, 63, 63, 64, 
	1050, 134, 1050, 110, 110, 110, 134, 134, 
	134, 185, 648, 649, 650, 651, 652, 110, 
	648, 649, 650, 651, 652, 63, 63, 64, 
	1051, 1052, 1053, 1054, 1055, 134, 1051, 1052, 
	1053, 1054, 1055, 110, 110, 110, 134, 134, 
	134, 647, 653, 110, 653, 63, 63, 64, 
	1056, 134, 1056, 110, 110, 110, 134, 134, 
	134, 185, 654, 110, 654, 63, 63, 64, 
	1057, 134, 1057, 110, 110, 110, 134, 134, 
	134, 185, 655, 110, 655, 63, 63, 64, 
	1058, 134, 1058, 110, 110, 110, 134, 134, 
	134, 185, 656, 110, 656, 63, 63, 64, 
	1059, 134, 1059, 110, 110, 110, 134, 134, 
	134, 185, 657, 110, 657, 63, 63, 64, 
	1060, 134, 1060, 110, 110, 110, 134, 134, 
	134, 185, 658, 110, 658, 63, 63, 64, 
	1061, 134, 1061, 110, 110, 110, 134, 134, 
	134, 185, 659, 110, 659, 63, 63, 64, 
	1062, 134, 1062, 110, 110, 110, 134, 134, 
	134, 185, 660, 110, 660, 63, 63, 64, 
	1063, 134, 1063, 110, 110, 110, 134, 134, 
	134, 185, 0
};
static const short _lexer_trans_targs[] = {
	38, 2, 38, 38, 3, 4, 6, 7, 
	9, 11, 14, 5, 38, 38, 8, 38, 
	10, 38, 12, 13, 38, 38, 15, 38, 
	16, 38, 38, 51, 38, 19, 22, 24, 
	27, 20, 21, 38, 23, 38, 25, 26, 
	38, 28, 29, 38, 31, 33, 32, 38, 
	34, 38, 38, 38, 38, 38, 38, 38, 
	38, 38, 38, 38, 38, 36, 328, 37, 
	38, 38, 38, 39, 38, 38, 40, 41, 
	43, 38, 44, 38, 45, 38, 38, 38, 
	38, 0, 46, 47, 48, 38, 52, 53, 
	54, 55, 38, 41, 38, 38, 38, 38, 
	56, 38, 38, 38, 57, 70, 83, 101, 
	125, 143, 149, 154, 158, 186, 58, 187, 
	213, 226, 233, 244, 260, 276, 304, 310, 
	58, 318, 58, 327, 329, 342, 355, 373, 
	397, 415, 421, 426, 430, 458, 330, 459, 
	485, 498, 505, 516, 532, 548, 576, 582, 
	330, 590, 330, 38, 38, 40, 1, 42, 
	38, 38, 38, 38, 38, 38, 38, 50, 
	17, 49, 38, 50, 38, 38, 38, 38, 
	38, 38, 38, 38, 38, 38, 38, 38, 
	38, 38, 38, 59, 60, 61, 62, 66, 
	67, 38, 58, 58, 58, 38, 38, 63, 
	65, 64, 58, 58, 58, 68, 69, 58, 
	38, 38, 71, 72, 76, 78, 80, 38, 
	38, 73, 58, 74, 75, 58, 77, 58, 
	79, 58, 81, 82, 58, 58, 58, 58, 
	38, 38, 84, 91, 93, 96, 97, 85, 
	86, 38, 87, 88, 89, 58, 90, 58, 
	92, 38, 38, 38, 94, 95, 58, 38, 
	58, 38, 58, 18, 98, 99, 100, 58, 
	38, 38, 102, 103, 58, 120, 122, 124, 
	58, 38, 38, 58, 104, 115, 116, 58, 
	58, 105, 106, 110, 58, 58, 58, 112, 
	58, 58, 107, 108, 109, 58, 111, 58, 
	113, 114, 58, 58, 117, 118, 119, 58, 
	121, 58, 123, 30, 35, 38, 38, 126, 
	127, 136, 139, 38, 58, 128, 135, 129, 
	38, 130, 132, 131, 58, 133, 134, 58, 
	58, 137, 138, 58, 38, 140, 58, 141, 
	142, 58, 38, 38, 144, 148, 145, 146, 
	38, 147, 58, 58, 150, 151, 152, 153, 
	58, 38, 38, 155, 157, 156, 58, 38, 
	38, 38, 159, 161, 167, 58, 168, 178, 
	179, 184, 185, 160, 58, 38, 162, 164, 
	163, 58, 165, 166, 58, 58, 38, 58, 
	169, 173, 174, 175, 38, 170, 171, 172, 
	58, 38, 58, 38, 58, 176, 177, 58, 
	58, 58, 38, 180, 182, 181, 58, 183, 
	58, 38, 58, 58, 38, 58, 58, 58, 
	58, 38, 38, 188, 203, 58, 205, 58, 
	38, 189, 192, 199, 202, 38, 190, 191, 
	58, 38, 58, 58, 38, 193, 198, 58, 
	38, 194, 58, 195, 196, 197, 58, 58, 
	38, 200, 201, 58, 58, 58, 204, 58, 
	206, 208, 210, 207, 58, 58, 209, 58, 
	58, 211, 212, 58, 58, 38, 214, 218, 
	219, 221, 225, 215, 216, 217, 58, 58, 
	220, 38, 58, 58, 58, 58, 58, 58, 
	58, 58, 222, 223, 224, 58, 58, 58, 
	227, 232, 58, 58, 58, 228, 229, 230, 
	231, 58, 58, 234, 235, 240, 38, 58, 
	236, 238, 237, 58, 38, 58, 239, 58, 
	38, 58, 241, 38, 58, 58, 242, 38, 
	243, 58, 38, 58, 245, 248, 254, 255, 
	246, 247, 58, 249, 250, 251, 252, 253, 
	58, 58, 38, 58, 256, 259, 257, 258, 
	58, 58, 38, 261, 265, 267, 271, 275, 
	262, 263, 264, 58, 58, 266, 38, 58, 
	58, 38, 268, 269, 58, 38, 38, 38, 
	270, 38, 38, 38, 272, 273, 58, 38, 
	38, 38, 274, 38, 38, 58, 277, 278, 
	280, 289, 58, 290, 291, 294, 299, 58, 
	279, 38, 38, 281, 285, 282, 283, 284, 
	58, 38, 286, 287, 58, 288, 58, 58, 
	58, 58, 58, 58, 58, 38, 58, 292, 
	293, 58, 295, 296, 38, 297, 298, 58, 
	300, 301, 302, 303, 58, 305, 307, 306, 
	58, 308, 38, 309, 58, 311, 312, 58, 
	58, 313, 314, 315, 316, 317, 58, 38, 
	319, 321, 323, 324, 325, 320, 58, 322, 
	58, 58, 58, 326, 58, 38, 38, 331, 
	332, 333, 334, 338, 339, 330, 330, 330, 
	335, 337, 336, 330, 330, 330, 340, 341, 
	330, 343, 344, 348, 350, 352, 345, 330, 
	346, 347, 330, 349, 330, 351, 330, 353, 
	354, 330, 330, 330, 330, 356, 363, 365, 
	368, 369, 357, 358, 359, 360, 361, 330, 
	362, 330, 364, 366, 367, 330, 330, 330, 
	370, 371, 372, 330, 374, 375, 330, 392, 
	394, 396, 330, 330, 376, 387, 388, 330, 
	330, 377, 378, 382, 330, 330, 330, 384, 
	330, 330, 379, 380, 381, 330, 383, 330, 
	385, 386, 330, 330, 389, 390, 391, 330, 
	393, 330, 395, 398, 399, 408, 411, 330, 
	400, 407, 401, 402, 404, 403, 330, 405, 
	406, 330, 330, 409, 410, 330, 412, 330, 
	413, 414, 330, 416, 420, 417, 418, 419, 
	330, 330, 422, 423, 424, 425, 330, 427, 
	429, 428, 330, 431, 433, 439, 330, 440, 
	450, 451, 456, 457, 432, 330, 434, 436, 
	435, 330, 437, 438, 330, 330, 330, 441, 
	445, 446, 447, 442, 443, 444, 330, 330, 
	330, 448, 449, 330, 330, 330, 452, 454, 
	453, 330, 455, 330, 330, 330, 330, 330, 
	330, 330, 460, 475, 330, 477, 330, 461, 
	464, 471, 474, 462, 463, 330, 330, 330, 
	465, 470, 330, 466, 330, 467, 468, 469, 
	330, 330, 472, 473, 330, 330, 330, 476, 
	330, 478, 480, 482, 479, 330, 330, 481, 
	330, 330, 483, 484, 330, 330, 486, 490, 
	491, 493, 497, 487, 488, 489, 330, 330, 
	492, 330, 330, 330, 330, 330, 330, 330, 
	330, 494, 495, 496, 330, 330, 330, 499, 
	504, 330, 330, 330, 500, 501, 502, 503, 
	330, 330, 506, 507, 512, 330, 508, 510, 
	509, 330, 330, 511, 330, 330, 513, 330, 
	330, 514, 515, 330, 330, 517, 520, 526, 
	527, 518, 519, 330, 521, 522, 523, 524, 
	525, 330, 330, 330, 528, 531, 529, 530, 
	330, 330, 533, 537, 539, 543, 547, 534, 
	535, 536, 330, 330, 538, 330, 330, 540, 
	541, 330, 542, 544, 545, 330, 546, 330, 
	549, 550, 552, 561, 330, 562, 563, 566, 
	571, 330, 551, 553, 557, 554, 555, 556, 
	330, 558, 559, 330, 560, 330, 330, 330, 
	330, 330, 330, 330, 330, 564, 565, 330, 
	567, 568, 569, 570, 330, 572, 573, 574, 
	575, 330, 577, 579, 578, 330, 580, 581, 
	330, 583, 584, 330, 330, 585, 586, 587, 
	588, 589, 330, 591, 593, 595, 596, 597, 
	592, 330, 594, 330, 330, 330, 598, 330
};
static const short _lexer_trans_actions[] = {
	315, 0, 145, 307, 0, 0, 0, 0, 
	0, 0, 0, 0, 81, 93, 0, 83, 
	0, 89, 0, 0, 85, 87, 0, 91, 
	0, 143, 313, 0, 311, 0, 0, 0, 
	0, 0, 0, 117, 0, 121, 0, 0, 
	119, 0, 0, 115, 0, 0, 0, 137, 
	0, 123, 125, 127, 129, 131, 133, 135, 
	95, 99, 101, 97, 309, 0, 0, 0, 
	141, 139, 7, 0, 149, 151, 320, 323, 
	0, 147, 5, 11, 0, 13, 15, 17, 
	21, 0, 971, 971, 971, 23, 0, 0, 
	0, 0, 39, 983, 41, 43, 45, 49, 
	0, 53, 55, 19, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 968, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	359, 0, 329, 5, 389, 362, 335, 365, 
	368, 392, 968, 371, 395, 968, 968, 380, 
	347, 968, 968, 344, 401, 968, 968, 968, 
	359, 407, 329, 153, 31, 974, 0, 0, 
	305, 155, 9, 157, 159, 47, 299, 977, 
	0, 977, 303, 980, 301, 293, 163, 25, 
	27, 29, 165, 33, 167, 37, 35, 169, 
	51, 189, 69, 0, 0, 0, 0, 0, 
	0, 295, 440, 560, 563, 209, 79, 0, 
	0, 0, 446, 893, 566, 0, 0, 317, 
	179, 57, 0, 0, 0, 0, 0, 199, 
	73, 0, 569, 0, 0, 449, 0, 896, 
	0, 860, 0, 0, 848, 851, 857, 854, 
	171, 59, 0, 0, 0, 5, 0, 0, 
	0, 219, 0, 0, 0, 956, 0, 959, 
	0, 221, 103, 223, 0, 0, 593, 225, 
	584, 227, 590, 0, 0, 0, 0, 452, 
	181, 61, 0, 0, 602, 0, 0, 5, 
	596, 201, 75, 599, 0, 0, 0, 455, 
	458, 0, 0, 0, 470, 473, 476, 0, 
	482, 461, 0, 0, 0, 464, 0, 467, 
	0, 0, 479, 443, 0, 0, 0, 485, 
	0, 605, 5, 0, 0, 183, 63, 0, 
	0, 0, 0, 229, 404, 0, 0, 0, 
	215, 0, 0, 0, 494, 0, 0, 497, 
	488, 0, 0, 500, 231, 0, 614, 0, 
	0, 503, 191, 71, 0, 0, 0, 0, 
	281, 0, 800, 962, 0, 0, 0, 0, 
	506, 185, 65, 0, 0, 0, 617, 203, 
	77, 193, 0, 0, 0, 620, 0, 0, 
	0, 0, 0, 0, 899, 217, 0, 0, 
	0, 512, 0, 0, 515, 398, 233, 863, 
	0, 0, 0, 0, 235, 0, 0, 0, 
	518, 237, 632, 239, 638, 0, 0, 965, 
	902, 905, 211, 0, 0, 0, 908, 0, 
	911, 205, 374, 383, 207, 377, 386, 641, 
	644, 187, 67, 0, 0, 353, 0, 350, 
	241, 0, 0, 0, 0, 243, 0, 0, 
	782, 245, 785, 914, 247, 0, 0, 776, 
	249, 0, 779, 0, 0, 0, 788, 917, 
	291, 0, 0, 791, 794, 521, 0, 524, 
	0, 0, 0, 0, 923, 929, 0, 926, 
	932, 0, 0, 530, 527, 177, 0, 0, 
	0, 0, 0, 0, 0, 0, 803, 866, 
	0, 283, 824, 827, 830, 833, 836, 839, 
	842, 845, 0, 0, 0, 533, 935, 332, 
	0, 0, 356, 326, 662, 0, 0, 0, 
	0, 806, 665, 0, 0, 0, 251, 536, 
	0, 0, 0, 671, 285, 872, 0, 674, 
	287, 878, 0, 253, 881, 680, 0, 255, 
	0, 773, 175, 341, 0, 0, 0, 0, 
	0, 0, 539, 0, 0, 0, 0, 0, 
	812, 809, 173, 686, 0, 0, 0, 0, 
	542, 689, 195, 0, 0, 0, 0, 0, 
	0, 0, 0, 938, 692, 0, 257, 698, 
	701, 259, 0, 0, 716, 261, 105, 263, 
	0, 265, 107, 267, 0, 0, 731, 269, 
	109, 271, 0, 273, 111, 734, 0, 0, 
	0, 0, 428, 0, 0, 0, 0, 737, 
	0, 275, 113, 0, 0, 0, 0, 0, 
	545, 277, 0, 0, 815, 0, 941, 746, 
	752, 749, 884, 755, 758, 213, 761, 0, 
	0, 944, 0, 0, 279, 0, 0, 767, 
	0, 0, 0, 0, 947, 0, 0, 0, 
	818, 0, 289, 0, 890, 0, 0, 950, 
	953, 0, 0, 0, 0, 0, 548, 197, 
	0, 0, 0, 0, 0, 0, 551, 0, 
	554, 764, 437, 0, 557, 161, 297, 968, 
	968, 425, 968, 968, 968, 440, 560, 563, 
	968, 968, 968, 446, 893, 566, 968, 968, 
	317, 410, 968, 968, 968, 968, 968, 569, 
	968, 968, 449, 968, 896, 968, 860, 968, 
	968, 848, 851, 857, 854, 968, 968, 578, 
	968, 968, 968, 572, 968, 968, 968, 956, 
	968, 959, 575, 581, 587, 593, 584, 590, 
	968, 968, 968, 452, 968, 413, 602, 968, 
	968, 968, 596, 599, 968, 968, 968, 455, 
	458, 968, 968, 968, 470, 473, 476, 968, 
	482, 461, 968, 968, 968, 464, 968, 467, 
	968, 968, 479, 443, 968, 968, 968, 485, 
	968, 605, 968, 608, 968, 968, 611, 404, 
	968, 968, 491, 968, 968, 968, 494, 968, 
	968, 497, 488, 968, 968, 500, 968, 614, 
	968, 968, 503, 968, 968, 968, 797, 968, 
	800, 962, 968, 968, 968, 968, 506, 968, 
	416, 968, 617, 968, 509, 968, 620, 623, 
	968, 431, 419, 422, 968, 899, 968, 968, 
	968, 512, 968, 968, 515, 398, 863, 626, 
	629, 635, 968, 968, 968, 968, 518, 632, 
	638, 968, 968, 965, 902, 905, 968, 968, 
	968, 908, 968, 911, 374, 383, 377, 386, 
	641, 644, 647, 968, 353, 968, 350, 650, 
	656, 920, 968, 653, 968, 782, 785, 914, 
	659, 968, 776, 968, 779, 968, 968, 968, 
	788, 917, 968, 968, 791, 794, 521, 968, 
	524, 968, 968, 968, 968, 923, 929, 968, 
	926, 932, 968, 968, 530, 527, 968, 968, 
	968, 968, 968, 968, 968, 968, 803, 866, 
	821, 824, 827, 830, 833, 836, 839, 842, 
	845, 968, 968, 968, 533, 935, 332, 968, 
	968, 356, 326, 662, 968, 968, 968, 968, 
	806, 665, 668, 968, 968, 536, 968, 968, 
	869, 671, 872, 875, 674, 878, 677, 881, 
	680, 683, 968, 773, 341, 968, 968, 338, 
	968, 968, 968, 539, 968, 968, 968, 968, 
	968, 812, 809, 686, 968, 968, 968, 968, 
	542, 689, 968, 968, 704, 719, 968, 968, 
	968, 968, 938, 692, 695, 698, 701, 707, 
	710, 716, 713, 722, 725, 731, 728, 734, 
	968, 968, 968, 968, 428, 968, 434, 968, 
	968, 737, 740, 968, 743, 968, 968, 968, 
	545, 968, 968, 815, 968, 941, 746, 752, 
	749, 884, 755, 758, 761, 968, 968, 944, 
	968, 770, 968, 968, 767, 968, 968, 968, 
	968, 947, 968, 968, 968, 818, 887, 968, 
	890, 968, 968, 950, 953, 968, 968, 968, 
	968, 968, 548, 968, 968, 968, 968, 968, 
	968, 551, 968, 554, 764, 437, 968, 557
};
static const short _lexer_to_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0
};
static const short _lexer_from_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 3, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0
};
static const short _lexer_eof_trans[] = {
	0, 1, 1, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	1, 27, 29, 29, 29, 29, 29, 29, 
	29, 29, 29, 29, 29, 29, 29, 29, 
	29, 29, 29, 29, 61, 1, 0, 148, 
	1, 1, 153, 154, 156, 157, 159, 159, 
	159, 163, 1, 165, 166, 167, 171, 173, 
	176, 178, 1, 186, 186, 190, 186, 186, 
	186, 186, 186, 186, 186, 186, 201, 208, 
	186, 186, 186, 186, 186, 186, 186, 186, 
	186, 186, 186, 225, 186, 186, 234, 186, 
	186, 186, 186, 186, 242, 244, 248, 250, 
	186, 186, 186, 186, 186, 257, 186, 266, 
	186, 186, 186, 186, 186, 186, 186, 186, 
	186, 186, 186, 186, 186, 186, 186, 186, 
	186, 186, 186, 186, 186, 302, 308, 186, 
	186, 313, 186, 186, 186, 186, 186, 186, 
	186, 186, 186, 325, 186, 186, 186, 331, 
	186, 186, 337, 186, 186, 186, 186, 186, 
	186, 186, 346, 186, 186, 352, 354, 186, 
	186, 366, 186, 186, 186, 186, 186, 186, 
	375, 381, 186, 186, 186, 386, 388, 186, 
	186, 186, 186, 395, 186, 186, 186, 186, 
	402, 405, 186, 410, 417, 422, 426, 186, 
	429, 433, 186, 186, 186, 186, 186, 441, 
	186, 186, 186, 186, 186, 186, 186, 186, 
	186, 186, 186, 186, 186, 462, 186, 186, 
	186, 186, 186, 186, 474, 186, 186, 186, 
	186, 186, 186, 186, 186, 186, 186, 186, 
	186, 186, 503, 186, 186, 509, 186, 513, 
	186, 516, 520, 186, 523, 186, 186, 186, 
	186, 186, 186, 186, 186, 186, 539, 186, 
	186, 186, 186, 186, 547, 186, 186, 186, 
	186, 186, 559, 562, 566, 568, 570, 572, 
	576, 578, 580, 186, 186, 186, 186, 594, 
	186, 186, 186, 186, 186, 602, 186, 186, 
	186, 186, 186, 614, 186, 186, 186, 186, 
	621, 186, 186, 186, 186, 186, 186, 186, 
	186, 186, 186, 186, 635, 186, 186, 186, 
	186, 186, 186, 186, 186, 186, 648, 186, 
	186, 186, 186, 186, 186, 186, 186, 662, 
	663, 178, 1, 186, 186, 190, 186, 186, 
	186, 186, 186, 186, 186, 186, 201, 208, 
	186, 186, 186, 186, 186, 186, 186, 186, 
	186, 186, 186, 225, 186, 186, 234, 186, 
	186, 186, 186, 186, 242, 244, 248, 250, 
	186, 186, 186, 186, 186, 257, 186, 266, 
	186, 186, 186, 186, 186, 186, 186, 186, 
	186, 186, 186, 186, 186, 186, 186, 186, 
	186, 186, 186, 186, 186, 302, 308, 186, 
	186, 313, 186, 186, 186, 186, 186, 186, 
	186, 186, 186, 325, 186, 186, 186, 331, 
	186, 186, 337, 186, 186, 186, 186, 186, 
	186, 186, 346, 186, 186, 352, 354, 186, 
	186, 366, 186, 186, 186, 186, 186, 186, 
	375, 381, 186, 186, 186, 386, 388, 186, 
	186, 186, 186, 395, 186, 186, 186, 186, 
	402, 405, 186, 410, 417, 422, 426, 186, 
	429, 433, 186, 186, 186, 186, 186, 441, 
	186, 186, 186, 186, 186, 186, 186, 186, 
	186, 186, 186, 186, 186, 462, 186, 186, 
	186, 186, 186, 186, 474, 186, 186, 186, 
	186, 186, 186, 186, 186, 186, 186, 186, 
	186, 186, 503, 186, 186, 509, 186, 513, 
	186, 516, 520, 186, 523, 186, 186, 186, 
	186, 186, 186, 186, 186, 186, 539, 186, 
	186, 186, 186, 186, 547, 186, 186, 186, 
	186, 186, 559, 562, 566, 568, 570, 572, 
	576, 578, 580, 186, 186, 186, 186, 594, 
	186, 186, 186, 186, 186, 602, 186, 186, 
	186, 186, 186, 614, 186, 186, 186, 186, 
	621, 186, 186, 186, 186, 186, 186, 186, 
	186, 186, 186, 186, 635, 186, 186, 186, 
	186, 186, 186, 186, 186, 186, 648, 186, 
	186, 186, 186, 186, 186, 186, 186
};
static const int lexer_start = 38;
static const int lexer_error = 0;
static const int lexer_en_main = 38;
static void set_scan_buf( const char *text, bool _at_bol )
{
 Str_set( input_buf, text );
 p = Str_data(input_buf);
 at_bol = _at_bol;
 pe = Str_data(input_buf) + Str_len(input_buf);
 eof_ = pe;
	{
	cs = lexer_start;
	ts = 0;
	te = 0;
	act = 0;
	}
}
static tokid_t _scan_get( void )
{
	{
	int _klen;
	unsigned int _trans;
	short _widec;
	const short *_acts;
	unsigned int _nacts;
	const short *_keys;
	if ( p == pe )
		goto _test_eof;
	if ( cs == 0 )
		goto _out;
_resume:
	_acts = _lexer_actions + _lexer_from_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 1:
	{ts = p;}
	break;
		}
	}
	_widec = (*p);
	_klen = _lexer_cond_lengths[cs];
	_keys = _lexer_cond_keys + (_lexer_cond_offsets[cs]*2);
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;
			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _mid[0] )
				_upper = _mid - 2;
			else if ( _widec > _mid[1] )
				_lower = _mid + 2;
			else {
				switch ( _lexer_cond_spaces[_lexer_cond_offsets[cs] + ((_mid - _keys)>>1)] ) {
	case 0: {
		_widec = (short)(128 + ((*p) - -128));
		if ( 
 at_bol  ) _widec += 256;
		break;
	}
				}
				break;
			}
		}
	}
	_keys = _lexer_trans_keys + _lexer_key_offsets[cs];
	_trans = _lexer_index_offsets[cs];
	_klen = _lexer_single_lengths[cs];
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + _klen - 1;
		while (1) {
			if ( _upper < _lower )
				break;
			_mid = _lower + ((_upper-_lower) >> 1);
			if ( _widec < *_mid )
				_upper = _mid - 1;
			else if ( _widec > *_mid )
				_lower = _mid + 1;
			else {
				_trans += (unsigned int)(_mid - _keys);
				goto _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}
	_klen = _lexer_range_lengths[cs];
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;
			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _mid[0] )
				_upper = _mid - 2;
			else if ( _widec > _mid[1] )
				_lower = _mid + 2;
			else {
				_trans += (unsigned int)((_mid - _keys)>>1);
				goto _match;
			}
		}
		_trans += _klen;
	}
_match:
	_trans = _lexer_indicies[_trans];
_eof_trans:
	cs = _lexer_trans_targs[_trans];
	if ( _lexer_trans_actions[_trans] == 0 )
		goto _again;
	_acts = _lexer_actions + _lexer_trans_actions[_trans];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 )
	{
		switch ( *_acts++ )
		{
	case 2:
	{te = p+1;}
	break;
	case 3:
	{act = 1;}
	break;
	case 4:
	{act = 2;}
	break;
	case 5:
	{act = 5;}
	break;
	case 6:
	{act = 37;}
	break;
	case 7:
	{act = 38;}
	break;
	case 8:
	{act = 39;}
	break;
	case 9:
	{act = 40;}
	break;
	case 10:
	{act = 41;}
	break;
	case 11:
	{act = 42;}
	break;
	case 12:
	{act = 43;}
	break;
	case 13:
	{act = 44;}
	break;
	case 14:
	{act = 45;}
	break;
	case 15:
	{act = 46;}
	break;
	case 16:
	{act = 47;}
	break;
	case 17:
	{act = 48;}
	break;
	case 18:
	{act = 49;}
	break;
	case 19:
	{act = 50;}
	break;
	case 20:
	{act = 51;}
	break;
	case 21:
	{act = 52;}
	break;
	case 22:
	{act = 53;}
	break;
	case 23:
	{act = 54;}
	break;
	case 24:
	{act = 55;}
	break;
	case 25:
	{act = 56;}
	break;
	case 26:
	{act = 57;}
	break;
	case 27:
	{act = 58;}
	break;
	case 28:
	{act = 59;}
	break;
	case 29:
	{act = 60;}
	break;
	case 30:
	{act = 61;}
	break;
	case 31:
	{act = 62;}
	break;
	case 32:
	{act = 63;}
	break;
	case 33:
	{act = 64;}
	break;
	case 34:
	{act = 65;}
	break;
	case 35:
	{act = 66;}
	break;
	case 36:
	{act = 67;}
	break;
	case 37:
	{act = 68;}
	break;
	case 38:
	{act = 69;}
	break;
	case 39:
	{act = 70;}
	break;
	case 40:
	{act = 71;}
	break;
	case 41:
	{act = 72;}
	break;
	case 42:
	{act = 73;}
	break;
	case 43:
	{act = 74;}
	break;
	case 44:
	{act = 94;}
	break;
	case 45:
	{act = 95;}
	break;
	case 46:
	{act = 96;}
	break;
	case 47:
	{act = 97;}
	break;
	case 48:
	{act = 98;}
	break;
	case 49:
	{act = 99;}
	break;
	case 50:
	{act = 100;}
	break;
	case 51:
	{act = 101;}
	break;
	case 52:
	{act = 102;}
	break;
	case 53:
	{act = 103;}
	break;
	case 54:
	{act = 104;}
	break;
	case 55:
	{act = 105;}
	break;
	case 56:
	{act = 106;}
	break;
	case 57:
	{act = 107;}
	break;
	case 58:
	{act = 108;}
	break;
	case 59:
	{act = 109;}
	break;
	case 60:
	{act = 110;}
	break;
	case 61:
	{act = 111;}
	break;
	case 62:
	{act = 112;}
	break;
	case 63:
	{act = 113;}
	break;
	case 64:
	{act = 114;}
	break;
	case 65:
	{act = 115;}
	break;
	case 66:
	{act = 116;}
	break;
	case 67:
	{act = 117;}
	break;
	case 68:
	{act = 118;}
	break;
	case 69:
	{act = 119;}
	break;
	case 70:
	{act = 120;}
	break;
	case 71:
	{act = 121;}
	break;
	case 72:
	{act = 122;}
	break;
	case 73:
	{act = 123;}
	break;
	case 74:
	{act = 124;}
	break;
	case 75:
	{act = 125;}
	break;
	case 76:
	{act = 126;}
	break;
	case 77:
	{act = 127;}
	break;
	case 78:
	{act = 128;}
	break;
	case 79:
	{act = 129;}
	break;
	case 80:
	{act = 130;}
	break;
	case 81:
	{act = 131;}
	break;
	case 82:
	{act = 132;}
	break;
	case 83:
	{act = 133;}
	break;
	case 84:
	{act = 138;}
	break;
	case 85:
	{act = 139;}
	break;
	case 86:
	{act = 140;}
	break;
	case 87:
	{act = 141;}
	break;
	case 88:
	{act = 142;}
	break;
	case 89:
	{act = 143;}
	break;
	case 90:
	{act = 145;}
	break;
	case 91:
	{act = 146;}
	break;
	case 92:
	{act = 147;}
	break;
	case 93:
	{act = 148;}
	break;
	case 94:
	{act = 149;}
	break;
	case 95:
	{act = 150;}
	break;
	case 96:
	{act = 151;}
	break;
	case 97:
	{act = 152;}
	break;
	case 98:
	{act = 153;}
	break;
	case 99:
	{act = 154;}
	break;
	case 100:
	{act = 155;}
	break;
	case 101:
	{act = 156;}
	break;
	case 102:
	{act = 157;}
	break;
	case 103:
	{act = 158;}
	break;
	case 104:
	{act = 159;}
	break;
	case 105:
	{act = 160;}
	break;
	case 106:
	{act = 161;}
	break;
	case 107:
	{act = 162;}
	break;
	case 108:
	{act = 163;}
	break;
	case 109:
	{act = 164;}
	break;
	case 110:
	{act = 165;}
	break;
	case 111:
	{act = 166;}
	break;
	case 112:
	{act = 167;}
	break;
	case 113:
	{act = 168;}
	break;
	case 114:
	{act = 169;}
	break;
	case 115:
	{act = 170;}
	break;
	case 116:
	{act = 171;}
	break;
	case 117:
	{act = 172;}
	break;
	case 118:
	{act = 173;}
	break;
	case 119:
	{act = 174;}
	break;
	case 120:
	{act = 175;}
	break;
	case 121:
	{act = 176;}
	break;
	case 122:
	{act = 177;}
	break;
	case 123:
	{act = 178;}
	break;
	case 124:
	{act = 179;}
	break;
	case 125:
	{act = 180;}
	break;
	case 126:
	{act = 181;}
	break;
	case 127:
	{act = 182;}
	break;
	case 128:
	{act = 183;}
	break;
	case 129:
	{act = 184;}
	break;
	case 130:
	{act = 185;}
	break;
	case 131:
	{act = 186;}
	break;
	case 132:
	{act = 187;}
	break;
	case 133:
	{act = 188;}
	break;
	case 134:
	{act = 190;}
	break;
	case 135:
	{act = 191;}
	break;
	case 136:
	{act = 193;}
	break;
	case 137:
	{act = 194;}
	break;
	case 138:
	{act = 195;}
	break;
	case 139:
	{act = 197;}
	break;
	case 140:
	{act = 198;}
	break;
	case 141:
	{act = 200;}
	break;
	case 142:
	{act = 201;}
	break;
	case 143:
	{act = 202;}
	break;
	case 144:
	{act = 203;}
	break;
	case 145:
	{act = 205;}
	break;
	case 146:
	{act = 206;}
	break;
	case 147:
	{act = 207;}
	break;
	case 148:
	{act = 208;}
	break;
	case 149:
	{act = 209;}
	break;
	case 150:
	{act = 210;}
	break;
	case 151:
	{act = 211;}
	break;
	case 152:
	{act = 212;}
	break;
	case 153:
	{act = 213;}
	break;
	case 154:
	{act = 214;}
	break;
	case 155:
	{act = 215;}
	break;
	case 156:
	{act = 216;}
	break;
	case 157:
	{act = 217;}
	break;
	case 158:
	{act = 218;}
	break;
	case 159:
	{act = 219;}
	break;
	case 160:
	{act = 220;}
	break;
	case 161:
	{act = 221;}
	break;
	case 162:
	{act = 222;}
	break;
	case 163:
	{act = 223;}
	break;
	case 164:
	{act = 224;}
	break;
	case 165:
	{act = 225;}
	break;
	case 166:
	{act = 226;}
	break;
	case 167:
	{act = 227;}
	break;
	case 168:
	{act = 228;}
	break;
	case 169:
	{act = 229;}
	break;
	case 170:
	{act = 230;}
	break;
	case 171:
	{act = 231;}
	break;
	case 172:
	{act = 232;}
	break;
	case 173:
	{act = 233;}
	break;
	case 174:
	{act = 234;}
	break;
	case 175:
	{act = 235;}
	break;
	case 176:
	{act = 236;}
	break;
	case 177:
	{act = 237;}
	break;
	case 178:
	{act = 238;}
	break;
	case 179:
	{act = 239;}
	break;
	case 180:
	{act = 252;}
	break;
	case 181:
	{act = 253;}
	break;
	case 182:
	{act = 254;}
	break;
	case 183:
	{act = 255;}
	break;
	case 184:
	{act = 256;}
	break;
	case 185:
	{act = 257;}
	break;
	case 186:
	{act = 258;}
	break;
	case 187:
	{act = 259;}
	break;
	case 188:
	{act = 260;}
	break;
	case 189:
	{act = 261;}
	break;
	case 190:
	{act = 262;}
	break;
	case 191:
	{act = 263;}
	break;
	case 192:
	{act = 264;}
	break;
	case 193:
	{act = 265;}
	break;
	case 194:
	{act = 266;}
	break;
	case 195:
	{act = 267;}
	break;
	case 196:
	{act = 268;}
	break;
	case 197:
	{act = 269;}
	break;
	case 198:
	{act = 270;}
	break;
	case 199:
	{act = 271;}
	break;
	case 200:
	{act = 272;}
	break;
	case 201:
	{act = 273;}
	break;
	case 202:
	{act = 274;}
	break;
	case 203:
	{act = 275;}
	break;
	case 204:
	{act = 276;}
	break;
	case 205:
	{act = 277;}
	break;
	case 206:
	{act = 278;}
	break;
	case 207:
	{act = 279;}
	break;
	case 208:
	{act = 280;}
	break;
	case 209:
	{act = 281;}
	break;
	case 210:
	{act = 282;}
	break;
	case 211:
	{act = 283;}
	break;
	case 212:
	{act = 284;}
	break;
	case 213:
	{act = 285;}
	break;
	case 214:
	{act = 286;}
	break;
	case 215:
	{act = 287;}
	break;
	case 216:
	{act = 288;}
	break;
	case 217:
	{act = 289;}
	break;
	case 218:
	{act = 290;}
	break;
	case 219:
	{act = 291;}
	break;
	case 220:
	{act = 294;}
	break;
	case 221:
	{act = 296;}
	break;
	case 222:
	{act = 298;}
	break;
	case 223:
	{act = 300;}
	break;
	case 224:
	{act = 302;}
	break;
	case 225:
	{act = 306;}
	break;
	case 226:
	{te = p+1;{
	sym.tok = TK_NEWLINE;
	;
	{p++; goto _out; }
}}
	break;
	case 227:
	{te = p+1;{
	sym.tok = TK_LOG_AND;
	;
	{p++; goto _out; }
}}
	break;
	case 228:
	{te = p+1;{
	sym.tok = TK_RPAREN;
	;
	{p++; goto _out; }
}}
	break;
	case 229:
	{te = p+1;{
	sym.tok = TK_PLUS;
	;
	{p++; goto _out; }
}}
	break;
	case 230:
	{te = p+1;{
	sym.tok = TK_COMMA;
	;
	{p++; goto _out; }
}}
	break;
	case 231:
	{te = p+1;{
	sym.tok = TK_MINUS;
	;
	{p++; goto _out; }
}}
	break;
	case 232:
	{te = p+1;{
	sym.tok = TK_DOT;
	;
	{p++; goto _out; }
}}
	break;
	case 233:
	{te = p+1;{
	sym.tok = TK_DIVIDE;
	;
	{p++; goto _out; }
}}
	break;
	case 234:
	{te = p+1;{
	sym.tok = TK_COLON;
	;
	{p++; goto _out; }
}}
	break;
	case 235:
	{te = p+1;{
	sym.tok = TK_LEFT_SHIFT;
	;
	{p++; goto _out; }
}}
	break;
	case 236:
	{te = p+1;{
	sym.tok = TK_LESS_EQ;
	;
	{p++; goto _out; }
}}
	break;
	case 237:
	{te = p+1;{
	sym.tok = TK_NOT_EQ;
	;
	{p++; goto _out; }
}}
	break;
	case 238:
	{te = p+1;{
	sym.tok = TK_NOT_EQ;
	;
	{p++; goto _out; }
}}
	break;
	case 239:
	{te = p+1;{
	sym.tok = TK_EQUAL;
	;
	{p++; goto _out; }
}}
	break;
	case 240:
	{te = p+1;{
	sym.tok = TK_RIGHT_SHIFT;
	;
	{p++; goto _out; }
}}
	break;
	case 241:
	{te = p+1;{
	sym.tok = TK_GREATER_EQ;
	;
	{p++; goto _out; }
}}
	break;
	case 242:
	{te = p+1;{
	sym.tok = TK_QUESTION;
	;
	{p++; goto _out; }
}}
	break;
	case 243:
	{te = p+1;{
	sym.tok = TK_LSQUARE;
	;
	{p++; goto _out; }
}}
	break;
	case 244:
	{te = p+1;{
	sym.tok = TK_RSQUARE;
	;
	{p++; goto _out; }
}}
	break;
	case 245:
	{te = p+1;{
	sym.tok = TK_BIN_XOR;
	;
	{p++; goto _out; }
}}
	break;
	case 246:
	{te = p+1;{
	sym.tok = TK_POWER;
	;
	{p++; goto _out; }
}}
	break;
	case 247:
	{te = p+1;{
	sym.tok = TK_LCURLY;
	;
	{p++; goto _out; }
}}
	break;
	case 248:
	{te = p+1;{
	sym.tok = TK_LOG_OR;
	;
	{p++; goto _out; }
}}
	break;
	case 249:
	{te = p+1;{
	sym.tok = TK_RCURLY;
	;
	{p++; goto _out; }
}}
	break;
	case 250:
	{te = p+1;{
	sym.tok = TK_BIN_NOT;
	;
	{p++; goto _out; }
}}
	break;
	case 251:
	{te = p+1;{
	sym.tok = TK_B1;
	;
	{p++; goto _out; }
}}
	break;
	case 252:
	{te = p+1;{
	sym.tok = TK_C1;
	;
	{p++; goto _out; }
}}
	break;
	case 253:
	{te = p+1;{
	sym.tok = TK_D1;
	;
	{p++; goto _out; }
}}
	break;
	case 254:
	{te = p+1;{
	sym.tok = TK_E1;
	;
	{p++; goto _out; }
}}
	break;
	case 255:
	{te = p+1;{
	sym.tok = TK_H1;
	;
	{p++; goto _out; }
}}
	break;
	case 256:
	{te = p+1;{
	sym.tok = TK_L1;
	;
	{p++; goto _out; }
}}
	break;
	case 257:
	{te = p+1;{
	sym.tok = TK_A1;
	;
	{p++; goto _out; }
}}
	break;
	case 258:
	{te = p+1;{
	sym.tok = TK_F1;
	;
	{p++; goto _out; }
}}
	break;
	case 259:
	{te = p+1;{
	sym.tok = TK_BC1;
	;
	{p++; goto _out; }
}}
	break;
	case 260:
	{te = p+1;{
	sym.tok = TK_DE1;
	;
	{p++; goto _out; }
}}
	break;
	case 261:
	{te = p+1;{
	sym.tok = TK_HL1;
	;
	{p++; goto _out; }
}}
	break;
	case 262:
	{te = p+1;{
	sym.tok = TK_AF1;
	;
	{p++; goto _out; }
}}
	break;
	case 263:
	{te = p+1;{
	sym.tok = TK_IND_BC;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 264:
	{te = p+1;{
	sym.tok = TK_IND_DE;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 265:
	{te = p+1;{
	sym.tok = TK_IND_IX;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 266:
	{te = p+1;{
	sym.tok = TK_IND_IY;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 267:
	{te = p+1;{
	sym.tok = TK_IND_HL;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 268:
	{te = p+1;{
	sym.tok = TK_IND_SP;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 269:
	{te = p+1;{
	sym.tok = TK_IND_C;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 270:
	{te = p+1;{
	sym.tok = TK_DS_B;
	;
	{p++; goto _out; }
}}
	break;
	case 271:
	{te = p+1;{
	sym.tok = TK_DS_W;
	;
	{p++; goto _out; }
}}
	break;
	case 272:
	{te = p+1;{
	sym.tok = TK_DS_P;
	;
	{p++; goto _out; }
}}
	break;
	case 273:
	{te = p+1;{
	sym.tok = TK_DS_Q;
	;
	{p++; goto _out; }
}}
	break;
	case 274:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CCF1;
		sym.tok_opcode = TK_CCF1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CCF1;
	}
	{p++; goto _out; }
}}
	break;
	case 275:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_RLA1;
		sym.tok_opcode = TK_RLA1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLA1;
	}
	{p++; goto _out; }
}}
	break;
	case 276:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_RLCA1;
		sym.tok_opcode = TK_RLCA1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLCA1;
	}
	{p++; goto _out; }
}}
	break;
	case 277:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_RRA1;
		sym.tok_opcode = TK_RRA1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRA1;
	}
	{p++; goto _out; }
}}
	break;
	case 278:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_RRCA1;
		sym.tok_opcode = TK_RRCA1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRCA1;
	}
	{p++; goto _out; }
}}
	break;
	case 279:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_SCF1;
		sym.tok_opcode = TK_SCF1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SCF1;
	}
	{p++; goto _out; }
}}
	break;
	case 280:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CU_WAIT;
		sym.tok_opcode = TK_CU_WAIT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CU_WAIT;
	}
	{p++; goto _out; }
}}
	break;
	case 281:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CU_MOVE;
		sym.tok_opcode = TK_CU_MOVE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CU_MOVE;
	}
	{p++; goto _out; }
}}
	break;
	case 282:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CU_STOP;
		sym.tok_opcode = TK_CU_STOP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CU_STOP;
	}
	{p++; goto _out; }
}}
	break;
	case 283:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CU_NOP;
		sym.tok_opcode = TK_CU_NOP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CU_NOP;
	}
	{p++; goto _out; }
}}
	break;
	case 284:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR0;
		sym.tok_opcode = TK_DMA_WR0;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR0;
	}
	{p++; goto _out; }
}}
	break;
	case 285:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR1;
		sym.tok_opcode = TK_DMA_WR1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR1;
	}
	{p++; goto _out; }
}}
	break;
	case 286:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR2;
		sym.tok_opcode = TK_DMA_WR2;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR2;
	}
	{p++; goto _out; }
}}
	break;
	case 287:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR3;
		sym.tok_opcode = TK_DMA_WR3;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR3;
	}
	{p++; goto _out; }
}}
	break;
	case 288:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR4;
		sym.tok_opcode = TK_DMA_WR4;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR4;
	}
	{p++; goto _out; }
}}
	break;
	case 289:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR5;
		sym.tok_opcode = TK_DMA_WR5;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR5;
	}
	{p++; goto _out; }
}}
	break;
	case 290:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR6;
		sym.tok_opcode = TK_DMA_WR6;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR6;
	}
	{p++; goto _out; }
}}
	break;
	case 291:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_CMD;
		sym.tok_opcode = TK_DMA_CMD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_CMD;
	}
	{p++; goto _out; }
}}
	break;
	case 292:
	{te = p+1;}
	break;
	case 293:
	{te = p+1;{
  while ( ts[ 0] == '.' || isspace(ts[ 0]) ) ts++;
  while ( te[-1] == ':' || isspace(te[-1]) ) te--;
  sym.tok = TK_LABEL;
  {p++; goto _out; }
 }}
	break;
	case 294:
	{te = p+1;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts - 1, 16 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 295:
	{te = p+1;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 2, te - ts - 3, 2 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 296:
	{te = p+1;{
  sym.tok = TK_NUMBER;
  sym.number = 0;
  if ( get_sym_string() )
  {
   STR_DEFINE(string, STR_SIZE);
   Str_set_bytes(string, ts, te-ts);
   Str_len(string) = cstr_compress_escapes(Str_data(string));
   if (Str_len(string) == 1)
    sym.number = Str_data(string)[0];
   else
    error_invalid_squoted_string();
   STR_DELETE(string);
  }
  else
  {
   error_invalid_squoted_string();
  }
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 297:
	{te = p+1;{
  sym.tok = TK_STRING;
  if ( ! get_sym_string() )
   error_unclosed_string();
  {p++; goto _out; }
 }}
	break;
	case 298:
	{te = p+1;{
  sym.tok = TK_NIL;
  skip_to_newline();
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 299:
	{te = p;p--;{
	sym.tok = TK_LOG_NOT;
	;
	{p++; goto _out; }
}}
	break;
	case 300:
	{te = p;p--;{
	sym.tok = TK_BIN_AND;
	;
	{p++; goto _out; }
}}
	break;
	case 301:
	{te = p;p--;{
	sym.tok = TK_LPAREN;
	;
	{p++; goto _out; }
}}
	break;
	case 302:
	{te = p;p--;{
	sym.tok = TK_MULTIPLY;
	;
	{p++; goto _out; }
}}
	break;
	case 303:
	{te = p;p--;{
	sym.tok = TK_DOT;
	;
	{p++; goto _out; }
}}
	break;
	case 304:
	{te = p;p--;{
	sym.tok = TK_LESS;
	;
	{p++; goto _out; }
}}
	break;
	case 305:
	{te = p;p--;{
	sym.tok = TK_EQUAL;
	;
	{p++; goto _out; }
}}
	break;
	case 306:
	{te = p;p--;{
	sym.tok = TK_GREATER;
	;
	{p++; goto _out; }
}}
	break;
	case 307:
	{te = p;p--;{
	sym.tok = TK_BIN_OR;
	;
	{p++; goto _out; }
}}
	break;
	case 308:
	{te = p;p--;{
	sym.tok = TK_C;
	;
	{p++; goto _out; }
}}
	break;
	case 309:
	{te = p;p--;{
	sym.tok = TK_PO;
	;
	{p++; goto _out; }
}}
	break;
	case 310:
	{te = p;p--;{
	sym.tok = TK_P;
	;
	{p++; goto _out; }
}}
	break;
	case 311:
	{te = p;p--;{
	sym.tok = TK_M;
	;
	{p++; goto _out; }
}}
	break;
	case 312:
	{te = p;p--;{
	sym.tok = TK_B;
	;
	{p++; goto _out; }
}}
	break;
	case 313:
	{te = p;p--;{
	sym.tok = TK_D;
	;
	{p++; goto _out; }
}}
	break;
	case 314:
	{te = p;p--;{
	sym.tok = TK_E;
	;
	{p++; goto _out; }
}}
	break;
	case 315:
	{te = p;p--;{
	sym.tok = TK_H;
	;
	{p++; goto _out; }
}}
	break;
	case 316:
	{te = p;p--;{
	sym.tok = TK_L;
	;
	{p++; goto _out; }
}}
	break;
	case 317:
	{te = p;p--;{
	sym.tok = TK_A;
	;
	{p++; goto _out; }
}}
	break;
	case 318:
	{te = p;p--;{
	sym.tok = TK_F;
	;
	{p++; goto _out; }
}}
	break;
	case 319:
	{te = p;p--;{
	sym.tok = TK_I;
	;
	{p++; goto _out; }
}}
	break;
	case 320:
	{te = p;p--;{
	sym.tok = TK_R;
	;
	{p++; goto _out; }
}}
	break;
	case 321:
	{te = p;p--;{
	if (opts.cpu & CPU_Z80N) {
		sym.tok = TK_X;
	}
	else {
		sym.tok = TK_NAME;
	}
	{p++; goto _out; }
}}
	break;
	case 322:
	{te = p;p--;{
	sym.tok = TK_BC;
	;
	{p++; goto _out; }
}}
	break;
	case 323:
	{te = p;p--;{
	sym.tok = TK_DE;
	;
	{p++; goto _out; }
}}
	break;
	case 324:
	{te = p;p--;{
	sym.tok = TK_HL;
	;
	{p++; goto _out; }
}}
	break;
	case 325:
	{te = p;p--;{
	sym.tok = TK_IX;
	;
	{p++; goto _out; }
}}
	break;
	case 326:
	{te = p;p--;{
	sym.tok = TK_IY;
	;
	{p++; goto _out; }
}}
	break;
	case 327:
	{te = p;p--;{
	sym.tok = TK_AF;
	;
	{p++; goto _out; }
}}
	break;
	case 328:
	{te = p;p--;{
	sym.tok = TK_IP;
	;
	{p++; goto _out; }
}}
	break;
	case 329:
	{te = p;p--;{
	sym.tok = TK_SU;
	;
	{p++; goto _out; }
}}
	break;
	case 330:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_ELIF;
		sym.tok_opcode = TK_ELIF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ELIF;
	}
	{p++; goto _out; }
}}
	break;
	case 331:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_IF;
		sym.tok_opcode = TK_IF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IF;
	}
	{p++; goto _out; }
}}
	break;
	case 332:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CALL;
		sym.tok_opcode = TK_CALL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CALL;
	}
	{p++; goto _out; }
}}
	break;
	case 333:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CCF;
		sym.tok_opcode = TK_CCF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CCF;
	}
	{p++; goto _out; }
}}
	break;
	case 334:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CP;
		sym.tok_opcode = TK_CP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CP;
	}
	{p++; goto _out; }
}}
	break;
	case 335:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CPD;
		sym.tok_opcode = TK_CPD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPD;
	}
	{p++; goto _out; }
}}
	break;
	case 336:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CPI;
		sym.tok_opcode = TK_CPI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPI;
	}
	{p++; goto _out; }
}}
	break;
	case 337:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_EI;
		sym.tok_opcode = TK_EI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EI;
	}
	{p++; goto _out; }
}}
	break;
	case 338:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_EX;
		sym.tok_opcode = TK_EX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EX;
	}
	{p++; goto _out; }
}}
	break;
	case 339:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_IN;
		sym.tok_opcode = TK_IN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IN;
	}
	{p++; goto _out; }
}}
	break;
	case 340:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_INC;
		sym.tok_opcode = TK_INC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INC;
	}
	{p++; goto _out; }
}}
	break;
	case 341:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_IND;
		sym.tok_opcode = TK_IND;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IND;
	}
	{p++; goto _out; }
}}
	break;
	case 342:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_INI;
		sym.tok_opcode = TK_INI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INI;
	}
	{p++; goto _out; }
}}
	break;
	case 343:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LD;
		sym.tok_opcode = TK_LD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LD;
	}
	{p++; goto _out; }
}}
	break;
	case 344:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDD;
		sym.tok_opcode = TK_LDD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDD;
	}
	{p++; goto _out; }
}}
	break;
	case 345:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDDR;
		sym.tok_opcode = TK_LDDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDR;
	}
	{p++; goto _out; }
}}
	break;
	case 346:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDI;
		sym.tok_opcode = TK_LDI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDI;
	}
	{p++; goto _out; }
}}
	break;
	case 347:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDIR;
		sym.tok_opcode = TK_LDIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIR;
	}
	{p++; goto _out; }
}}
	break;
	case 348:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OR;
		sym.tok_opcode = TK_OR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OR;
	}
	{p++; goto _out; }
}}
	break;
	case 349:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OUT;
		sym.tok_opcode = TK_OUT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUT;
	}
	{p++; goto _out; }
}}
	break;
	case 350:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OUTI;
		sym.tok_opcode = TK_OUTI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUTI;
	}
	{p++; goto _out; }
}}
	break;
	case 351:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RET;
		sym.tok_opcode = TK_RET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RET;
	}
	{p++; goto _out; }
}}
	break;
	case 352:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RL;
		sym.tok_opcode = TK_RL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RL;
	}
	{p++; goto _out; }
}}
	break;
	case 353:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RLA;
		sym.tok_opcode = TK_RLA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLA;
	}
	{p++; goto _out; }
}}
	break;
	case 354:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RLC;
		sym.tok_opcode = TK_RLC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLC;
	}
	{p++; goto _out; }
}}
	break;
	case 355:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RLCA;
		sym.tok_opcode = TK_RLCA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLCA;
	}
	{p++; goto _out; }
}}
	break;
	case 356:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RR;
		sym.tok_opcode = TK_RR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RR;
	}
	{p++; goto _out; }
}}
	break;
	case 357:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RRA;
		sym.tok_opcode = TK_RRA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRA;
	}
	{p++; goto _out; }
}}
	break;
	case 358:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RRC;
		sym.tok_opcode = TK_RRC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRC;
	}
	{p++; goto _out; }
}}
	break;
	case 359:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RRCA;
		sym.tok_opcode = TK_RRCA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRCA;
	}
	{p++; goto _out; }
}}
	break;
	case 360:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_SCF;
		sym.tok_opcode = TK_SCF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SCF;
	}
	{p++; goto _out; }
}}
	break;
	case 361:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_SET;
		sym.tok_opcode = TK_SET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SET;
	}
	{p++; goto _out; }
}}
	break;
	case 362:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_SWAP;
		sym.tok_opcode = TK_SWAP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SWAP;
	}
	{p++; goto _out; }
}}
	break;
	case 363:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_FILL;
		sym.tok_opcode = TK_FILL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_FILL;
	}
	{p++; goto _out; }
}}
	break;
	case 364:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_MMU;
		sym.tok_opcode = TK_MMU;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU;
	}
	{p++; goto _out; }
}}
	break;
	case 365:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OTDM;
		sym.tok_opcode = TK_OTDM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTDM;
	}
	{p++; goto _out; }
}}
	break;
	case 366:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OTIM;
		sym.tok_opcode = TK_OTIM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTIM;
	}
	{p++; goto _out; }
}}
	break;
	case 367:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_TST;
		sym.tok_opcode = TK_TST;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_TST;
	}
	{p++; goto _out; }
}}
	break;
	case 368:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDP;
		sym.tok_opcode = TK_LDP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDP;
	}
	{p++; goto _out; }
}}
	break;
	case 369:
	{te = p;p--;}
	break;
	case 370:
	{te = p;p--;{
  sym.tok = TK_NAME;
  {p++; goto _out; }
 }}
	break;
	case 371:
	{te = p;p--;{
  while ( ts[ 0] == '.' || isspace(ts[ 0]) ) ts++;
  while ( te[-1] == ':' || isspace(te[-1]) ) te--;
  sym.tok = TK_LABEL;
  {p++; goto _out; }
 }}
	break;
	case 372:
	{te = p;p--;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts, 10 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 373:
	{te = p;p--;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 2, te - ts - 2, 16 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 374:
	{te = p;p--;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts - 1, 2 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 375:
	{te = p;p--;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 1, te - ts - 1, 2 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 376:
	{{p = ((te))-1;}{
	sym.tok = TK_LPAREN;
	;
	{p++; goto _out; }
}}
	break;
	case 377:
	{{p = ((te))-1;}{
	sym.tok = TK_DOT;
	;
	{p++; goto _out; }
}}
	break;
	case 378:
	{{p = ((te))-1;}{
  sym.tok = TK_NAME;
  {p++; goto _out; }
 }}
	break;
	case 379:
	{{p = ((te))-1;}{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts, 10 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 380:
	{	switch( act ) {
	case 1:
	{{p = ((te))-1;}
	sym.tok = TK_ASMPC;
	;
	{p++; goto _out; }
}
	break;
	case 2:
	{{p = ((te))-1;}
	sym.tok = TK_ASMPC;
	;
	{p++; goto _out; }
}
	break;
	case 5:
	{{p = ((te))-1;}
	sym.tok = TK_MOD;
	;
	{p++; goto _out; }
}
	break;
	case 37:
	{{p = ((te))-1;}
	sym.tok = TK_NZ;
	;
	{p++; goto _out; }
}
	break;
	case 38:
	{{p = ((te))-1;}
	sym.tok = TK_Z;
	;
	{p++; goto _out; }
}
	break;
	case 39:
	{{p = ((te))-1;}
	sym.tok = TK_NC;
	;
	{p++; goto _out; }
}
	break;
	case 40:
	{{p = ((te))-1;}
	sym.tok = TK_C;
	;
	{p++; goto _out; }
}
	break;
	case 41:
	{{p = ((te))-1;}
	sym.tok = TK_PO;
	;
	{p++; goto _out; }
}
	break;
	case 42:
	{{p = ((te))-1;}
	sym.tok = TK_PE;
	;
	{p++; goto _out; }
}
	break;
	case 43:
	{{p = ((te))-1;}
	sym.tok = TK_P;
	;
	{p++; goto _out; }
}
	break;
	case 44:
	{{p = ((te))-1;}
	sym.tok = TK_M;
	;
	{p++; goto _out; }
}
	break;
	case 45:
	{{p = ((te))-1;}
	if ((opts.cpu & CPU_R2K) || (opts.cpu & CPU_R3K)) {
		sym.tok = TK_LZ;
	}
	else {
		sym.tok = TK_NAME;
	}
	{p++; goto _out; }
}
	break;
	case 46:
	{{p = ((te))-1;}
	if ((opts.cpu & CPU_R2K) || (opts.cpu & CPU_R3K)) {
		sym.tok = TK_LO;
	}
	else {
		sym.tok = TK_NAME;
	}
	{p++; goto _out; }
}
	break;
	case 47:
	{{p = ((te))-1;}
	sym.tok = TK_NV;
	;
	{p++; goto _out; }
}
	break;
	case 48:
	{{p = ((te))-1;}
	sym.tok = TK_V;
	;
	{p++; goto _out; }
}
	break;
	case 49:
	{{p = ((te))-1;}
	sym.tok = TK_B;
	;
	{p++; goto _out; }
}
	break;
	case 50:
	{{p = ((te))-1;}
	sym.tok = TK_D;
	;
	{p++; goto _out; }
}
	break;
	case 51:
	{{p = ((te))-1;}
	sym.tok = TK_E;
	;
	{p++; goto _out; }
}
	break;
	case 52:
	{{p = ((te))-1;}
	sym.tok = TK_H;
	;
	{p++; goto _out; }
}
	break;
	case 53:
	{{p = ((te))-1;}
	sym.tok = TK_IXH;
	;
	{p++; goto _out; }
}
	break;
	case 54:
	{{p = ((te))-1;}
	sym.tok = TK_IYH;
	;
	{p++; goto _out; }
}
	break;
	case 55:
	{{p = ((te))-1;}
	sym.tok = TK_L;
	;
	{p++; goto _out; }
}
	break;
	case 56:
	{{p = ((te))-1;}
	sym.tok = TK_IXL;
	;
	{p++; goto _out; }
}
	break;
	case 57:
	{{p = ((te))-1;}
	sym.tok = TK_IYL;
	;
	{p++; goto _out; }
}
	break;
	case 58:
	{{p = ((te))-1;}
	sym.tok = TK_A;
	;
	{p++; goto _out; }
}
	break;
	case 59:
	{{p = ((te))-1;}
	sym.tok = TK_F;
	;
	{p++; goto _out; }
}
	break;
	case 60:
	{{p = ((te))-1;}
	sym.tok = TK_I;
	;
	{p++; goto _out; }
}
	break;
	case 61:
	{{p = ((te))-1;}
	sym.tok = TK_IIR;
	;
	{p++; goto _out; }
}
	break;
	case 62:
	{{p = ((te))-1;}
	sym.tok = TK_R;
	;
	{p++; goto _out; }
}
	break;
	case 63:
	{{p = ((te))-1;}
	sym.tok = TK_EIR;
	;
	{p++; goto _out; }
}
	break;
	case 64:
	{{p = ((te))-1;}
	if (opts.cpu & CPU_Z80N) {
		sym.tok = TK_X;
	}
	else {
		sym.tok = TK_NAME;
	}
	{p++; goto _out; }
}
	break;
	case 65:
	{{p = ((te))-1;}
	sym.tok = TK_BC;
	;
	{p++; goto _out; }
}
	break;
	case 66:
	{{p = ((te))-1;}
	sym.tok = TK_DE;
	;
	{p++; goto _out; }
}
	break;
	case 67:
	{{p = ((te))-1;}
	sym.tok = TK_HL;
	;
	{p++; goto _out; }
}
	break;
	case 68:
	{{p = ((te))-1;}
	sym.tok = TK_IX;
	;
	{p++; goto _out; }
}
	break;
	case 69:
	{{p = ((te))-1;}
	sym.tok = TK_IY;
	;
	{p++; goto _out; }
}
	break;
	case 70:
	{{p = ((te))-1;}
	sym.tok = TK_AF;
	;
	{p++; goto _out; }
}
	break;
	case 71:
	{{p = ((te))-1;}
	sym.tok = TK_SP;
	;
	{p++; goto _out; }
}
	break;
	case 72:
	{{p = ((te))-1;}
	sym.tok = TK_IP;
	;
	{p++; goto _out; }
}
	break;
	case 73:
	{{p = ((te))-1;}
	sym.tok = TK_SU;
	;
	{p++; goto _out; }
}
	break;
	case 74:
	{{p = ((te))-1;}
	sym.tok = TK_XPC;
	;
	{p++; goto _out; }
}
	break;
	case 94:
	{{p = ((te))-1;}
	sym.tok = TK_A32;
	;
	{p++; goto _out; }
}
	break;
	case 95:
	{{p = ((te))-1;}
	sym.tok = TK_DEHL;
	;
	{p++; goto _out; }
}
	break;
	case 96:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ALIGN;
		sym.tok_opcode = TK_ALIGN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ALIGN;
	}
	{p++; goto _out; }
}
	break;
	case 97:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_BINARY;
		sym.tok_opcode = TK_BINARY;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_BINARY;
	}
	{p++; goto _out; }
}
	break;
	case 98:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_C_LINE;
		sym.tok_opcode = TK_C_LINE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_C_LINE;
	}
	{p++; goto _out; }
}
	break;
	case 99:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFB;
		sym.tok_opcode = TK_DEFB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFB;
	}
	{p++; goto _out; }
}
	break;
	case 100:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFC;
		sym.tok_opcode = TK_DEFC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFC;
	}
	{p++; goto _out; }
}
	break;
	case 101:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFDB;
		sym.tok_opcode = TK_DEFDB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFDB;
	}
	{p++; goto _out; }
}
	break;
	case 102:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFGROUP;
		sym.tok_opcode = TK_DEFGROUP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFGROUP;
	}
	{p++; goto _out; }
}
	break;
	case 103:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFINE;
		sym.tok_opcode = TK_DEFINE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFINE;
	}
	{p++; goto _out; }
}
	break;
	case 104:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFM;
		sym.tok_opcode = TK_DEFM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFM;
	}
	{p++; goto _out; }
}
	break;
	case 105:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFQ;
		sym.tok_opcode = TK_DEFQ;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFQ;
	}
	{p++; goto _out; }
}
	break;
	case 106:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFS;
		sym.tok_opcode = TK_DEFS;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFS;
	}
	{p++; goto _out; }
}
	break;
	case 107:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFVARS;
		sym.tok_opcode = TK_DEFVARS;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFVARS;
	}
	{p++; goto _out; }
}
	break;
	case 108:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFW;
		sym.tok_opcode = TK_DEFW;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFW;
	}
	{p++; goto _out; }
}
	break;
	case 109:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEPHASE;
		sym.tok_opcode = TK_DEPHASE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEPHASE;
	}
	{p++; goto _out; }
}
	break;
	case 110:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ELSE;
		sym.tok_opcode = TK_ELSE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ELSE;
	}
	{p++; goto _out; }
}
	break;
	case 111:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ELIF;
		sym.tok_opcode = TK_ELIF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ELIF;
	}
	{p++; goto _out; }
}
	break;
	case 112:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ELIFDEF;
		sym.tok_opcode = TK_ELIFDEF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ELIFDEF;
	}
	{p++; goto _out; }
}
	break;
	case 113:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ELIFNDEF;
		sym.tok_opcode = TK_ELIFNDEF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ELIFNDEF;
	}
	{p++; goto _out; }
}
	break;
	case 114:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ENDIF;
		sym.tok_opcode = TK_ENDIF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ENDIF;
	}
	{p++; goto _out; }
}
	break;
	case 115:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_EXTERN;
		sym.tok_opcode = TK_EXTERN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EXTERN;
	}
	{p++; goto _out; }
}
	break;
	case 116:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_GLOBAL;
		sym.tok_opcode = TK_GLOBAL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_GLOBAL;
	}
	{p++; goto _out; }
}
	break;
	case 117:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IF;
		sym.tok_opcode = TK_IF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IF;
	}
	{p++; goto _out; }
}
	break;
	case 118:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IFDEF;
		sym.tok_opcode = TK_IFDEF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IFDEF;
	}
	{p++; goto _out; }
}
	break;
	case 119:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IFNDEF;
		sym.tok_opcode = TK_IFNDEF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IFNDEF;
	}
	{p++; goto _out; }
}
	break;
	case 120:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INCLUDE;
		sym.tok_opcode = TK_INCLUDE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INCLUDE;
	}
	{p++; goto _out; }
}
	break;
	case 121:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LIB;
		sym.tok_opcode = TK_LIB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LIB;
	}
	{p++; goto _out; }
}
	break;
	case 122:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LINE;
		sym.tok_opcode = TK_LINE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LINE;
	}
	{p++; goto _out; }
}
	break;
	case 123:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSTOFF;
		sym.tok_opcode = TK_LSTOFF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSTOFF;
	}
	{p++; goto _out; }
}
	break;
	case 124:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSTON;
		sym.tok_opcode = TK_LSTON;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSTON;
	}
	{p++; goto _out; }
}
	break;
	case 125:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MODULE;
		sym.tok_opcode = TK_MODULE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MODULE;
	}
	{p++; goto _out; }
}
	break;
	case 126:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ORG;
		sym.tok_opcode = TK_ORG;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ORG;
	}
	{p++; goto _out; }
}
	break;
	case 127:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PHASE;
		sym.tok_opcode = TK_PHASE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PHASE;
	}
	{p++; goto _out; }
}
	break;
	case 128:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PUBLIC;
		sym.tok_opcode = TK_PUBLIC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PUBLIC;
	}
	{p++; goto _out; }
}
	break;
	case 129:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SECTION;
		sym.tok_opcode = TK_SECTION;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SECTION;
	}
	{p++; goto _out; }
}
	break;
	case 130:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_UNDEFINE;
		sym.tok_opcode = TK_UNDEFINE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_UNDEFINE;
	}
	{p++; goto _out; }
}
	break;
	case 131:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_XDEF;
		sym.tok_opcode = TK_XDEF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_XDEF;
	}
	{p++; goto _out; }
}
	break;
	case 132:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_XLIB;
		sym.tok_opcode = TK_XLIB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_XLIB;
	}
	{p++; goto _out; }
}
	break;
	case 133:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_XREF;
		sym.tok_opcode = TK_XREF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_XREF;
	}
	{p++; goto _out; }
}
	break;
	case 138:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ADC;
		sym.tok_opcode = TK_ADC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ADC;
	}
	{p++; goto _out; }
}
	break;
	case 139:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ADD;
		sym.tok_opcode = TK_ADD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ADD;
	}
	{p++; goto _out; }
}
	break;
	case 140:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_AND;
		sym.tok_opcode = TK_AND;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_AND;
	}
	{p++; goto _out; }
}
	break;
	case 141:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_BIT;
		sym.tok_opcode = TK_BIT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_BIT;
	}
	{p++; goto _out; }
}
	break;
	case 142:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CALL;
		sym.tok_opcode = TK_CALL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CALL;
	}
	{p++; goto _out; }
}
	break;
	case 143:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CCF;
		sym.tok_opcode = TK_CCF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CCF;
	}
	{p++; goto _out; }
}
	break;
	case 145:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CP;
		sym.tok_opcode = TK_CP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CP;
	}
	{p++; goto _out; }
}
	break;
	case 146:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPD;
		sym.tok_opcode = TK_CPD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPD;
	}
	{p++; goto _out; }
}
	break;
	case 147:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPDR;
		sym.tok_opcode = TK_CPDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPDR;
	}
	{p++; goto _out; }
}
	break;
	case 148:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPI;
		sym.tok_opcode = TK_CPI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPI;
	}
	{p++; goto _out; }
}
	break;
	case 149:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPIR;
		sym.tok_opcode = TK_CPIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPIR;
	}
	{p++; goto _out; }
}
	break;
	case 150:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPL;
		sym.tok_opcode = TK_CPL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPL;
	}
	{p++; goto _out; }
}
	break;
	case 151:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DAA;
		sym.tok_opcode = TK_DAA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DAA;
	}
	{p++; goto _out; }
}
	break;
	case 152:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEC;
		sym.tok_opcode = TK_DEC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEC;
	}
	{p++; goto _out; }
}
	break;
	case 153:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DI;
		sym.tok_opcode = TK_DI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DI;
	}
	{p++; goto _out; }
}
	break;
	case 154:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DJNZ;
		sym.tok_opcode = TK_DJNZ;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DJNZ;
	}
	{p++; goto _out; }
}
	break;
	case 155:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_EI;
		sym.tok_opcode = TK_EI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EI;
	}
	{p++; goto _out; }
}
	break;
	case 156:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_EX;
		sym.tok_opcode = TK_EX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EX;
	}
	{p++; goto _out; }
}
	break;
	case 157:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_EXX;
		sym.tok_opcode = TK_EXX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EXX;
	}
	{p++; goto _out; }
}
	break;
	case 158:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_HALT;
		sym.tok_opcode = TK_HALT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_HALT;
	}
	{p++; goto _out; }
}
	break;
	case 159:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IM;
		sym.tok_opcode = TK_IM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IM;
	}
	{p++; goto _out; }
}
	break;
	case 160:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IN;
		sym.tok_opcode = TK_IN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IN;
	}
	{p++; goto _out; }
}
	break;
	case 161:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INC;
		sym.tok_opcode = TK_INC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INC;
	}
	{p++; goto _out; }
}
	break;
	case 162:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IND;
		sym.tok_opcode = TK_IND;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IND;
	}
	{p++; goto _out; }
}
	break;
	case 163:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INDR;
		sym.tok_opcode = TK_INDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INDR;
	}
	{p++; goto _out; }
}
	break;
	case 164:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INI;
		sym.tok_opcode = TK_INI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INI;
	}
	{p++; goto _out; }
}
	break;
	case 165:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INIR;
		sym.tok_opcode = TK_INIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INIR;
	}
	{p++; goto _out; }
}
	break;
	case 166:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_JP;
		sym.tok_opcode = TK_JP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_JP;
	}
	{p++; goto _out; }
}
	break;
	case 167:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_JR;
		sym.tok_opcode = TK_JR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_JR;
	}
	{p++; goto _out; }
}
	break;
	case 168:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LD;
		sym.tok_opcode = TK_LD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LD;
	}
	{p++; goto _out; }
}
	break;
	case 169:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDD;
		sym.tok_opcode = TK_LDD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDD;
	}
	{p++; goto _out; }
}
	break;
	case 170:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDDR;
		sym.tok_opcode = TK_LDDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDR;
	}
	{p++; goto _out; }
}
	break;
	case 171:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDI;
		sym.tok_opcode = TK_LDI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDI;
	}
	{p++; goto _out; }
}
	break;
	case 172:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDIR;
		sym.tok_opcode = TK_LDIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIR;
	}
	{p++; goto _out; }
}
	break;
	case 173:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_NEG;
		sym.tok_opcode = TK_NEG;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_NEG;
	}
	{p++; goto _out; }
}
	break;
	case 174:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_NOP;
		sym.tok_opcode = TK_NOP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_NOP;
	}
	{p++; goto _out; }
}
	break;
	case 175:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OR;
		sym.tok_opcode = TK_OR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OR;
	}
	{p++; goto _out; }
}
	break;
	case 176:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTDR;
		sym.tok_opcode = TK_OTDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTDR;
	}
	{p++; goto _out; }
}
	break;
	case 177:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTIR;
		sym.tok_opcode = TK_OTIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTIR;
	}
	{p++; goto _out; }
}
	break;
	case 178:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUT;
		sym.tok_opcode = TK_OUT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUT;
	}
	{p++; goto _out; }
}
	break;
	case 179:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUTD;
		sym.tok_opcode = TK_OUTD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUTD;
	}
	{p++; goto _out; }
}
	break;
	case 180:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUTI;
		sym.tok_opcode = TK_OUTI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUTI;
	}
	{p++; goto _out; }
}
	break;
	case 181:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_POP;
		sym.tok_opcode = TK_POP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_POP;
	}
	{p++; goto _out; }
}
	break;
	case 182:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PUSH;
		sym.tok_opcode = TK_PUSH;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PUSH;
	}
	{p++; goto _out; }
}
	break;
	case 183:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RES;
		sym.tok_opcode = TK_RES;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RES;
	}
	{p++; goto _out; }
}
	break;
	case 184:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RET;
		sym.tok_opcode = TK_RET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RET;
	}
	{p++; goto _out; }
}
	break;
	case 185:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RETI;
		sym.tok_opcode = TK_RETI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RETI;
	}
	{p++; goto _out; }
}
	break;
	case 186:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RETN;
		sym.tok_opcode = TK_RETN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RETN;
	}
	{p++; goto _out; }
}
	break;
	case 187:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RL;
		sym.tok_opcode = TK_RL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RL;
	}
	{p++; goto _out; }
}
	break;
	case 188:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RLA;
		sym.tok_opcode = TK_RLA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLA;
	}
	{p++; goto _out; }
}
	break;
	case 190:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RLC;
		sym.tok_opcode = TK_RLC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLC;
	}
	{p++; goto _out; }
}
	break;
	case 191:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RLCA;
		sym.tok_opcode = TK_RLCA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLCA;
	}
	{p++; goto _out; }
}
	break;
	case 193:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RLD;
		sym.tok_opcode = TK_RLD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLD;
	}
	{p++; goto _out; }
}
	break;
	case 194:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RR;
		sym.tok_opcode = TK_RR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RR;
	}
	{p++; goto _out; }
}
	break;
	case 195:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RRA;
		sym.tok_opcode = TK_RRA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRA;
	}
	{p++; goto _out; }
}
	break;
	case 197:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RRC;
		sym.tok_opcode = TK_RRC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRC;
	}
	{p++; goto _out; }
}
	break;
	case 198:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RRCA;
		sym.tok_opcode = TK_RRCA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRCA;
	}
	{p++; goto _out; }
}
	break;
	case 200:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RRD;
		sym.tok_opcode = TK_RRD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRD;
	}
	{p++; goto _out; }
}
	break;
	case 201:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RST;
		sym.tok_opcode = TK_RST;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RST;
	}
	{p++; goto _out; }
}
	break;
	case 202:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SBC;
		sym.tok_opcode = TK_SBC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SBC;
	}
	{p++; goto _out; }
}
	break;
	case 203:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SCF;
		sym.tok_opcode = TK_SCF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SCF;
	}
	{p++; goto _out; }
}
	break;
	case 205:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SET;
		sym.tok_opcode = TK_SET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SET;
	}
	{p++; goto _out; }
}
	break;
	case 206:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SLA;
		sym.tok_opcode = TK_SLA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SLA;
	}
	{p++; goto _out; }
}
	break;
	case 207:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SLL;
		sym.tok_opcode = TK_SLL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SLL;
	}
	{p++; goto _out; }
}
	break;
	case 208:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SLI;
		sym.tok_opcode = TK_SLI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SLI;
	}
	{p++; goto _out; }
}
	break;
	case 209:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SRA;
		sym.tok_opcode = TK_SRA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SRA;
	}
	{p++; goto _out; }
}
	break;
	case 210:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SRL;
		sym.tok_opcode = TK_SRL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SRL;
	}
	{p++; goto _out; }
}
	break;
	case 211:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SUB;
		sym.tok_opcode = TK_SUB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SUB;
	}
	{p++; goto _out; }
}
	break;
	case 212:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_XOR;
		sym.tok_opcode = TK_XOR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_XOR;
	}
	{p++; goto _out; }
}
	break;
	case 213:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SWAPNIB;
		sym.tok_opcode = TK_SWAPNIB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SWAPNIB;
	}
	{p++; goto _out; }
}
	break;
	case 214:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SWAP;
		sym.tok_opcode = TK_SWAP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SWAP;
	}
	{p++; goto _out; }
}
	break;
	case 215:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUTINB;
		sym.tok_opcode = TK_OUTINB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUTINB;
	}
	{p++; goto _out; }
}
	break;
	case 216:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDIX;
		sym.tok_opcode = TK_LDIX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIX;
	}
	{p++; goto _out; }
}
	break;
	case 217:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDIRX;
		sym.tok_opcode = TK_LDIRX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIRX;
	}
	{p++; goto _out; }
}
	break;
	case 218:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDDX;
		sym.tok_opcode = TK_LDDX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDX;
	}
	{p++; goto _out; }
}
	break;
	case 219:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDDRX;
		sym.tok_opcode = TK_LDDRX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDRX;
	}
	{p++; goto _out; }
}
	break;
	case 220:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDIRSCALE;
		sym.tok_opcode = TK_LDIRSCALE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIRSCALE;
	}
	{p++; goto _out; }
}
	break;
	case 221:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDPIRX;
		sym.tok_opcode = TK_LDPIRX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDPIRX;
	}
	{p++; goto _out; }
}
	break;
	case 222:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDWS;
		sym.tok_opcode = TK_LDWS;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDWS;
	}
	{p++; goto _out; }
}
	break;
	case 223:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_FILL;
		sym.tok_opcode = TK_FILL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_FILL;
	}
	{p++; goto _out; }
}
	break;
	case 224:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_FILLDE;
		sym.tok_opcode = TK_FILLDE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_FILLDE;
	}
	{p++; goto _out; }
}
	break;
	case 225:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MIRROR;
		sym.tok_opcode = TK_MIRROR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MIRROR;
	}
	{p++; goto _out; }
}
	break;
	case 226:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_NEXTREG;
		sym.tok_opcode = TK_NEXTREG;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_NEXTREG;
	}
	{p++; goto _out; }
}
	break;
	case 227:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PIXELDN;
		sym.tok_opcode = TK_PIXELDN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PIXELDN;
	}
	{p++; goto _out; }
}
	break;
	case 228:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PIXELAD;
		sym.tok_opcode = TK_PIXELAD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PIXELAD;
	}
	{p++; goto _out; }
}
	break;
	case 229:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SETAE;
		sym.tok_opcode = TK_SETAE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SETAE;
	}
	{p++; goto _out; }
}
	break;
	case 230:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_TEST;
		sym.tok_opcode = TK_TEST;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_TEST;
	}
	{p++; goto _out; }
}
	break;
	case 231:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU;
		sym.tok_opcode = TK_MMU;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU;
	}
	{p++; goto _out; }
}
	break;
	case 232:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU0;
		sym.tok_opcode = TK_MMU0;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU0;
	}
	{p++; goto _out; }
}
	break;
	case 233:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU1;
		sym.tok_opcode = TK_MMU1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU1;
	}
	{p++; goto _out; }
}
	break;
	case 234:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU2;
		sym.tok_opcode = TK_MMU2;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU2;
	}
	{p++; goto _out; }
}
	break;
	case 235:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU3;
		sym.tok_opcode = TK_MMU3;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU3;
	}
	{p++; goto _out; }
}
	break;
	case 236:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU4;
		sym.tok_opcode = TK_MMU4;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU4;
	}
	{p++; goto _out; }
}
	break;
	case 237:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU5;
		sym.tok_opcode = TK_MMU5;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU5;
	}
	{p++; goto _out; }
}
	break;
	case 238:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU6;
		sym.tok_opcode = TK_MMU6;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU6;
	}
	{p++; goto _out; }
}
	break;
	case 239:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU7;
		sym.tok_opcode = TK_MMU7;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU7;
	}
	{p++; goto _out; }
}
	break;
	case 252:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_BSLA;
		sym.tok_opcode = TK_BSLA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_BSLA;
	}
	{p++; goto _out; }
}
	break;
	case 253:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_BSRA;
		sym.tok_opcode = TK_BSRA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_BSRA;
	}
	{p++; goto _out; }
}
	break;
	case 254:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_BSRL;
		sym.tok_opcode = TK_BSRL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_BSRL;
	}
	{p++; goto _out; }
}
	break;
	case 255:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_BSRF;
		sym.tok_opcode = TK_BSRF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_BSRF;
	}
	{p++; goto _out; }
}
	break;
	case 256:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_BRLC;
		sym.tok_opcode = TK_BRLC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_BRLC;
	}
	{p++; goto _out; }
}
	break;
	case 257:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IN0;
		sym.tok_opcode = TK_IN0;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IN0;
	}
	{p++; goto _out; }
}
	break;
	case 258:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MLT;
		sym.tok_opcode = TK_MLT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MLT;
	}
	{p++; goto _out; }
}
	break;
	case 259:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTDM;
		sym.tok_opcode = TK_OTDM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTDM;
	}
	{p++; goto _out; }
}
	break;
	case 260:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTDMR;
		sym.tok_opcode = TK_OTDMR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTDMR;
	}
	{p++; goto _out; }
}
	break;
	case 261:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTIM;
		sym.tok_opcode = TK_OTIM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTIM;
	}
	{p++; goto _out; }
}
	break;
	case 262:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTIMR;
		sym.tok_opcode = TK_OTIMR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTIMR;
	}
	{p++; goto _out; }
}
	break;
	case 263:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUT0;
		sym.tok_opcode = TK_OUT0;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUT0;
	}
	{p++; goto _out; }
}
	break;
	case 264:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SLP;
		sym.tok_opcode = TK_SLP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SLP;
	}
	{p++; goto _out; }
}
	break;
	case 265:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_TST;
		sym.tok_opcode = TK_TST;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_TST;
	}
	{p++; goto _out; }
}
	break;
	case 266:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_TSTIO;
		sym.tok_opcode = TK_TSTIO;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_TSTIO;
	}
	{p++; goto _out; }
}
	break;
	case 267:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ALTD;
		sym.tok_opcode = TK_ALTD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ALTD;
	}
	{p++; goto _out; }
}
	break;
	case 268:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_BOOL;
		sym.tok_opcode = TK_BOOL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_BOOL;
	}
	{p++; goto _out; }
}
	break;
	case 269:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IDET;
		sym.tok_opcode = TK_IDET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IDET;
	}
	{p++; goto _out; }
}
	break;
	case 270:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IOE;
		sym.tok_opcode = TK_IOE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IOE;
	}
	{p++; goto _out; }
}
	break;
	case 271:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IOI;
		sym.tok_opcode = TK_IOI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IOI;
	}
	{p++; goto _out; }
}
	break;
	case 272:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IPRES;
		sym.tok_opcode = TK_IPRES;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IPRES;
	}
	{p++; goto _out; }
}
	break;
	case 273:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IPSET;
		sym.tok_opcode = TK_IPSET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IPSET;
	}
	{p++; goto _out; }
}
	break;
	case 274:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDDSR;
		sym.tok_opcode = TK_LDDSR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDSR;
	}
	{p++; goto _out; }
}
	break;
	case 275:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDISR;
		sym.tok_opcode = TK_LDISR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDISR;
	}
	{p++; goto _out; }
}
	break;
	case 276:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDP;
		sym.tok_opcode = TK_LDP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDP;
	}
	{p++; goto _out; }
}
	break;
	case 277:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSDR;
		sym.tok_opcode = TK_LSDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSDR;
	}
	{p++; goto _out; }
}
	break;
	case 278:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSIR;
		sym.tok_opcode = TK_LSIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSIR;
	}
	{p++; goto _out; }
}
	break;
	case 279:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSDDR;
		sym.tok_opcode = TK_LSDDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSDDR;
	}
	{p++; goto _out; }
}
	break;
	case 280:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSIDR;
		sym.tok_opcode = TK_LSIDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSIDR;
	}
	{p++; goto _out; }
}
	break;
	case 281:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MUL;
		sym.tok_opcode = TK_MUL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MUL;
	}
	{p++; goto _out; }
}
	break;
	case 282:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RDMODE;
		sym.tok_opcode = TK_RDMODE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RDMODE;
	}
	{p++; goto _out; }
}
	break;
	case 283:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SETUSR;
		sym.tok_opcode = TK_SETUSR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SETUSR;
	}
	{p++; goto _out; }
}
	break;
	case 284:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SURES;
		sym.tok_opcode = TK_SURES;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SURES;
	}
	{p++; goto _out; }
}
	break;
	case 285:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SYSCALL;
		sym.tok_opcode = TK_SYSCALL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SYSCALL;
	}
	{p++; goto _out; }
}
	break;
	case 286:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_UMA;
		sym.tok_opcode = TK_UMA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_UMA;
	}
	{p++; goto _out; }
}
	break;
	case 287:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_UMS;
		sym.tok_opcode = TK_UMS;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_UMS;
	}
	{p++; goto _out; }
}
	break;
	case 288:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CALL_OZ;
		sym.tok_opcode = TK_CALL_OZ;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CALL_OZ;
	}
	{p++; goto _out; }
}
	break;
	case 289:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CALL_PKG;
		sym.tok_opcode = TK_CALL_PKG;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CALL_PKG;
	}
	{p++; goto _out; }
}
	break;
	case 290:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_FPP;
		sym.tok_opcode = TK_FPP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_FPP;
	}
	{p++; goto _out; }
}
	break;
	case 291:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INVOKE;
		sym.tok_opcode = TK_INVOKE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INVOKE;
	}
	{p++; goto _out; }
}
	break;
	case 294:
	{{p = ((te))-1;}
  sym.tok = TK_NAME;
  {p++; goto _out; }
 }
	break;
	case 296:
	{{p = ((te))-1;}
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts, 10 );
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	case 298:
	{{p = ((te))-1;}
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 1, te - ts - 1, 16 );
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	case 300:
	{{p = ((te))-1;}
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts - 1, 2 );
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	case 302:
	{{p = ((te))-1;}
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 2, te - ts - 2, 2 );
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	case 306:
	{{p = ((te))-1;}
  sym.tok = TK_NIL;
  skip_to_newline();
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	}
	}
	break;
		}
	}
_again:
	_acts = _lexer_actions + _lexer_to_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 0:
	{ts = 0;}
	break;
		}
	}
	if ( cs == 0 )
		goto _out;
	if ( ++p != pe )
		goto _resume;
	_test_eof: {}
	if ( p == ( eof_) )
	{
	if ( _lexer_eof_trans[cs] > 0 ) {
		_trans = _lexer_eof_trans[cs] - 1;
		goto _eof_trans;
	}
	}
	_out: {}
	}
 return sym.tok;
}
