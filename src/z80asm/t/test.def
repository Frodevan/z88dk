void test_input(void);
void test_input_empty_file(void);
void test_input_recursive_includes(void);
int  exec_input_recursive_includes(void);
void test_in_file_open_error(void);
int  exec_in_file_open_error(int);
void test_error_output(void);
int  exec_error_output(int);
void test_error_file(void);
int  exec_error_file(void);
void test_error_file_empty(void);
void test_die(void);
int  exec_die(void);
void test_xmalloc(void);
void test_xcalloc(void);
void test_xrealloc(void);
void test_xstrdup(void);
void test_xnew(void);
void test_str_pool(void);
void test_utstring_toupper(void);
void test_utstring_tolower(void);
void test_utstring_chomp(void);
void test_utstring_strip(void);
void test_xfopen(void);
void test_xfopen_error(void);
int  exec_xfopen_error(void);
void test_xremove(void);
int  exec_xremove(void);
void test_file_checks(void);

#if EXEC_TEST
if (strcmp(name, "exec_input_recursive_includes")==0) { int rv = exec_input_recursive_includes(); exit(rv); }
if (strcmp(name, "exec_in_file_open_error")==0) { int rv = exec_in_file_open_error(arg); exit(rv); }
if (strcmp(name, "exec_error_output")==0) { int rv = exec_error_output(arg); exit(rv); }
if (strcmp(name, "exec_error_file")==0) { int rv = exec_error_file(); exit(rv); }
if (strcmp(name, "exec_die")==0) { int rv = exec_die(); exit(rv); }
if (strcmp(name, "exec_xfopen_error")==0) { int rv = exec_xfopen_error(); exit(rv); }
if (strcmp(name, "exec_xremove")==0) { int rv = exec_xremove(); exit(rv); }

#else
DIAG("test_input"); test_input();
DIAG("test_input_empty_file"); test_input_empty_file();
DIAG("test_input_recursive_includes"); test_input_recursive_includes();
DIAG("test_in_file_open_error"); test_in_file_open_error();
DIAG("test_error_output"); test_error_output();
DIAG("test_error_file"); test_error_file();
DIAG("test_error_file_empty"); test_error_file_empty();
DIAG("test_die"); test_die();
DIAG("test_xmalloc"); test_xmalloc();
DIAG("test_xcalloc"); test_xcalloc();
DIAG("test_xrealloc"); test_xrealloc();
DIAG("test_xstrdup"); test_xstrdup();
DIAG("test_xnew"); test_xnew();
DIAG("test_str_pool"); test_str_pool();
DIAG("test_utstring_toupper"); test_utstring_toupper();
DIAG("test_utstring_tolower"); test_utstring_tolower();
DIAG("test_utstring_chomp"); test_utstring_chomp();
DIAG("test_utstring_strip"); test_utstring_strip();
DIAG("test_xfopen"); test_xfopen();
DIAG("test_xfopen_error"); test_xfopen_error();
DIAG("test_xremove"); test_xremove();
DIAG("test_file_checks"); test_file_checks();

#endif
#undef EXEC_TEST
