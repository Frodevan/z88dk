




	INCLUDE "z80_crt0.hdr"


	SECTION	code_compiler

._mul
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	add	hl,hl
	rl	e
	rl	d
	ret



._muli
	pop	bc
	pop	hl
	push	hl
	push	bc
	add	hl,hl
	ret



._muli2
	ld	hl,(_k)
	push	hl
	ld	hl,4	;const
	add	hl,sp
	call	l_glong
	exx
	pop	hl
	call	l_int2long_s
	push	de
	push	hl
	exx
	call	l_long_mult
	ret



._mul_assign_to_int
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	add	hl,hl
	rl	e
	rl	d
	ret



._mul2
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	add	hl,hl
	rl	e
	rl	d
	ret



._div
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	ld	bc,0
	push	bc
	ld	bc,2
	push	bc
	call	l_long_div
	ret



._div2
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	bit	7,d
	jr	z,i_2
	call	l_inclong
.i_2
	sra	d
	rr	e
	rr	h
	rr	l
	ret



._div3
	ld	hl,(_g)
	ld	de,(_g+2)
	push	de
	push	hl
	ld	hl,6	;const
	add	hl,sp
	call	l_glong
	call	l_long_div
	ret



._add
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	ld	bc,2
	add	hl,bc
	jr	nc,ASMPC+3
	inc	de
	ret



._add2
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	ld	bc,2
	add	hl,bc
	jr	nc,ASMPC+3
	inc	de
	ret



._sub
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	ld	bc,0
	push	bc
	ld	bc,2
	push	bc
	call	l_long_sub
	ret



._sub_1
	ld	hl,2	;const
	add	hl,sp
	call	l_glong2sp
	ld	hl,6	;const
	add	hl,sp
	call	l_glong
	call	l_long_mult
	ld	bc,0
	push	bc
	ld	bc,2
	push	bc
	call	l_long_sub
	ret



._sub2
	ld	hl,2	;const
	add	hl,sp
	call	l_glong
	ld	bc,65534
	add	hl,bc
	jr	c,ASMPC+3
	dec	de
	ret



._sub2_1
	ld	hl,2	;const
	add	hl,sp
	call	l_glong2sp
	ld	hl,6	;const
	add	hl,sp
	call	l_glong
	call	l_long_mult
	ld	bc,65534
	add	hl,bc
	jr	c,ASMPC+3
	dec	de
	ret



._sub3
	ld	hl,(_g)
	ld	de,(_g+2)
	push	de
	push	hl
	ld	hl,6	;const
	add	hl,sp
	call	l_glong
	call	l_long_sub
	ret




	SECTION	bss_compiler
._g
	defs	4
._k
	defs	2
	SECTION	code_compiler



	GLOBAL_g
	GLOBAL_k
	GLOBAL_mul
	GLOBAL_muli
	GLOBAL_muli2
	GLOBAL_mul_assign_to_int
	GLOBAL_mul2
	GLOBAL_div
	GLOBAL_div2
	GLOBAL_div3
	GLOBAL_add
	GLOBAL_add2
	GLOBAL_sub
	GLOBAL_sub_1
	GLOBAL_sub2
	GLOBAL_sub2_1
	GLOBAL_sub3




